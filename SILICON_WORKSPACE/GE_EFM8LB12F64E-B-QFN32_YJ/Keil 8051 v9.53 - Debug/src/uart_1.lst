C51 COMPILER V9.53.0.0   UART_1                                                            12/28/2017 16:49:27 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE UART_1
OBJECT MODULE PLACED IN .\src\uart_1.OBJ
COMPILER INVOKED BY: c:\SiliconLabs\SimplicityStudio\v4\developer\toolchains\keil_8051\9.53\BIN\C51.exe D:\WorkSpace\MyC
                    -ode\SILICON_WORKSPACE\GE_EFM8LB12F64E-B-QFN32_YJ\src\uart_1.c OMF2 LARGE DEBUG OBJECTEXTEND ROM(LARGE) WARNINGLEVEL(2) F
                    -LOATFUZZY(3) OPTIMIZE(8,SPEED) DEFINE(DEBUG=1) INTVECTOR(0X0000) BROWSE INTPROMOTE INCDIR(D:\WorkSpace\MyCode\SILICON_WO
                    -RKSPACE\GE_EFM8LB12F64E-B-QFN32_YJ\inc;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.1.1//Device/shared/si80
                    -51base;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.1.1//Device/EFM8LB1/inc) PRINT(.\src\uart_1.lst) COND C
                    -ODE PAGEWIDTH(120) PAGELENGTH(65) OBJECT(.\src\uart_1.OBJ)

line level    source

   1          /**************************************************************************//**
   2           * Copyright (c) 2016 by Silicon Laboratories Inc. All rights reserved.
   3           *
   4           * http://developer.silabs.com/legal/version/v11/Silicon_Labs_Software_License_Agreement.txt
   5           *****************************************************************************/
   6          
   7          #include "uart_1.h"
   8          
   9          #if EFM8PDL_UART1_AUTO_PAGE == 1
  10          // declare variable needed for autopage enter/exit
  11          #define DECL_PAGE uint8_t savedPage
  12          // enter autopage section
  13          #define SET_PAGE(p)     do                                                    \
  14                                  {                                                     \
  15                                    savedPage = SFRPAGE;  /* save current SFR page */   \
  16                                    SFRPAGE = (p);        /* set SFR page */            \
  17                                  } while(0)
  18          // exit autopage section
  19          #define RESTORE_PAGE    do                                                    \
  20                                  {                                                     \
  21                                    SFRPAGE = savedPage;  /* restore saved SFR page */  \
  22                                  } while(0)
  23          
  24          #else
              #define DECL_PAGE
              #define SET_PAGE(x)
              #define RESTORE_PAGE
              #endif //EFM8PDL_UART1_AUTO_PAGE
  29          
  30          // SFR page used to access UART1 registers
  31          #define UART1_SFR_PAGE 0x20
  32          
  33          // Clock prescaler values for baud rate initialization
  34          #define NUM_PRESC 8
  35          static const uint8_t PRESC[NUM_PRESC]      = {1, 4, 8, 12, 16, 24, 32, 48};
  36          static const uint8_t PRESC_ENUM[NUM_PRESC] = {SBCON1_BPS__DIV_BY_1,  SBCON1_BPS__DIV_BY_4,  SBCON1_BPS__DI
             -V_BY_8,  SBCON1_BPS__DIV_BY_12,
  37                                                        SBCON1_BPS__DIV_BY_16, SBCON1_BPS__DIV_BY_24, SBCON1_BPS__DI
             -V_BY_32, SBCON1_BPS__DIV_BY_48};
  38          static void UART1_initBaudRate(uint32_t sysclk, uint32_t baudrate)
  39          {
  40   1        uint8_t i;
  41   1        uint8_t min_presc;
  42   1        uint16_t reload;
  43   1        DECL_PAGE;
  44   1        SET_PAGE(UART1_SFR_PAGE);
  45   1      
  46   1        // Calculate baud rate prescaler and baud rate reload
  47   1        // value to maximize precision.
  48   1        // See reference manual for calculation details
  49   1        min_presc = ((*((uint16_t*)(&sysclk)) >> 1) + baudrate) / baudrate; // calculate minimum prescaler neces
C51 COMPILER V9.53.0.0   UART_1                                                            12/28/2017 16:49:27 PAGE 2   

             -sary
  50   1        for(i = 0; i < NUM_PRESC; ++i)
  51   1        {
  52   2          if(PRESC[i] >= min_presc) // use a prescaler that is equal or just greater than the minimum
  53   2          {
  54   3            reload  = ((1 << 16) - (sysclk / (2 * baudrate * PRESC[i]))); // calculate reload value using presca
             -ler
  55   3            SBRLH1  = (reload >> 8) & 0xFF;
  56   3            SBRLL1  = reload & 0xFF;
  57   3            SBCON1 |= (SBCON1_BREN__ENABLED | PRESC_ENUM[i]); // enable baud rate with calculated prescaler
  58   3            RESTORE_PAGE;
  59   3            return;
  60   3          }
  61   2        }
  62   1      
  63   1        // Baud rate is too small to be match
  64   1        while(1);
  65   1      }
  66          
  67          //=========================================================
  68          // Runtime API
  69          //=========================================================
  70          
  71          #if (EFM8PDL_UART1_AUTO_PAGE == 1)
  72          uint8_t UART1_getIntFlags(void)
  73          {
  74   1        uint8_t val;
  75   1        DECL_PAGE;
  76   1        SET_PAGE(UART1_SFR_PAGE);
  77   1        val = SCON1 & (UART1_TX_IF | UART1_RX_IF);
  78   1        RESTORE_PAGE;
  79   1        return val;
  80   1      }
  81          
  82          void UART1_clearIntFlags(uint8_t flags)
  83          {
  84   1        DECL_PAGE;
  85   1        SET_PAGE(UART1_SFR_PAGE);
  86   1        SCON1 &= ~(flags);
  87   1        RESTORE_PAGE;
  88   1      }
  89          
  90          void UART1_enableTxInt(bool enable)
  91          {
  92   1        DECL_PAGE;
  93   1        SET_PAGE(UART1_SFR_PAGE);
  94   1        UART1FCN1_TIE = enable;
  95   1        RESTORE_PAGE;
  96   1      }
  97          
  98          void UART1_enableRxInt(bool enable)
  99          {
 100   1        DECL_PAGE;
 101   1        SET_PAGE(UART1_SFR_PAGE);
 102   1        UART1FCN1_RIE = enable;
 103   1        RESTORE_PAGE;
 104   1      }
 105          
 106          void UART1_initTxPolling(void)
 107          {
 108   1        DECL_PAGE;
 109   1        SET_PAGE(UART1_SFR_PAGE);
 110   1        SCON1_TI = 1;
C51 COMPILER V9.53.0.0   UART_1                                                            12/28/2017 16:49:27 PAGE 3   

 111   1        RESTORE_PAGE;
 112   1      }
 113          
 114          void UART1_write(uint8_t value)
 115          {
 116   1        DECL_PAGE;
 117   1        SET_PAGE(UART1_SFR_PAGE);
 118   1        SBUF1 = value;
 119   1        RESTORE_PAGE;
 120   1      }
 121          
 122          uint8_t UART1_read(void)
 123          {
 124   1        uint8_t val;
 125   1        DECL_PAGE;
 126   1        SET_PAGE(UART1_SFR_PAGE);
 127   1        val = SBUF1;
 128   1        RESTORE_PAGE;
 129   1        return val;
 130   1      }
 131          #endif
 132          
 133          void UART1_writeWithExtraBit(uint16_t value)
 134          {
 135   1        uint8_t shift, mask;
 136   1        DECL_PAGE;
 137   1        SET_PAGE(UART1_SFR_PAGE);
 138   1      
 139   1        // Calculate shift and mask for data length
 140   1        shift = ((SMOD1 & SMOD1_SDL__FMASK) >> SMOD1_SDL__SHIFT) + 5;
 141   1        mask = 0xFF >> (8 - shift);
 142   1      
 143   1        SCON1_TBX = (value >> shift) & 0x1;
 144   1        SBUF1 = (value & mask);
 145   1      
 146   1        RESTORE_PAGE;
 147   1      }
 148          
 149          uint16_t UART1_readWithExtraBit(void)
 150          {
 151   1        uint8_t shift, mask;
 152   1        uint16_t val;
 153   1        DECL_PAGE;
 154   1        SET_PAGE(UART1_SFR_PAGE);
 155   1      
 156   1        // Calculate shift and mask for data length
 157   1        shift = ((SMOD1 & SMOD1_SDL__FMASK) >> SMOD1_SDL__SHIFT) + 5;
 158   1        mask = 0xFF >> (8 - shift);
 159   1      
 160   1        val = SCON1_RBX;
 161   1        val = val << shift;
 162   1        val |= (SBUF1 & mask);
 163   1      
 164   1        RESTORE_PAGE;
 165   1        return val;
 166   1      }
 167          
 168          #if (EFM8PDL_UART1_AUTO_PAGE == 1)
 169          uint8_t UART1_getErrFlags(void)
 170          {
 171   1        uint8_t val;
 172   1        DECL_PAGE;
 173   1        SET_PAGE(UART1_SFR_PAGE);
C51 COMPILER V9.53.0.0   UART_1                                                            12/28/2017 16:49:27 PAGE 4   

 174   1        val = (SCON1 & (UART1_RXOVR_EF | UART1_PARITY_EF));
 175   1        RESTORE_PAGE;
 176   1        return val;
 177   1      }
 178          
 179          void UART1_clearErrFlags(uint8_t flags)
 180          {
 181   1        DECL_PAGE;
 182   1        SET_PAGE(UART1_SFR_PAGE);
 183   1        SCON1 &= ~flags;
 184   1        RESTORE_PAGE;
 185   1      }
 186          
 187          uint8_t UART1_getFifoIntFlags(void)
 188          {
 189   1        uint8_t val;
 190   1        DECL_PAGE;
 191   1        SET_PAGE(UART1_SFR_PAGE);
 192   1        val = UART1FCN1 & (UART1_TFRQ_IF | UART1_RFRQ_IF);
 193   1        RESTORE_PAGE;
 194   1        return val;
 195   1      }
 196          #endif
 197          
 198          void UART1_enableTxFifoInt(bool enable)
 199          {
 200   1        DECL_PAGE;
 201   1        SET_PAGE(UART1_SFR_PAGE);
 202   1        if(enable)
 203   1        {
 204   2          UART1FCN0 |= UART1FCN0_TFRQE__ENABLED;
 205   2        }
 206   1        else
 207   1        {
 208   2          UART1FCN0 &= ~UART1FCN0_TFRQE__ENABLED;
 209   2        }
 210   1        RESTORE_PAGE;
 211   1      }
 212          
 213          void UART1_enableRxFifoInt(bool enable)
 214          {
 215   1        DECL_PAGE;
 216   1        SET_PAGE(UART1_SFR_PAGE);
 217   1        if(enable)
 218   1        {
 219   2          UART1FCN0 |= UART1FCN0_RFRQE__ENABLED;
 220   2        }
 221   1        else
 222   1        {
 223   2          UART1FCN0 &= ~UART1FCN0_RFRQE__ENABLED;
 224   2        }
 225   1        RESTORE_PAGE;
 226   1      }
 227          
 228          #if (EFM8PDL_UART1_AUTO_PAGE == 1)
 229          uint8_t UART1_getTxFifoCount(void)
 230          {
 231   1        uint8_t txcnt;
 232   1        DECL_PAGE;
 233   1        SET_PAGE(UART1_SFR_PAGE);
 234   1        txcnt = (UART1FCT & UART1FCT_TXCNT__FMASK) >> UART1FCT_TXCNT__SHIFT;
 235   1        RESTORE_PAGE;
 236   1        return txcnt;
C51 COMPILER V9.53.0.0   UART_1                                                            12/28/2017 16:49:27 PAGE 5   

 237   1      }
 238          
 239          uint8_t UART1_getRxFifoCount(void)
 240          {
 241   1        uint8_t rxcnt;
 242   1        DECL_PAGE;
 243   1        SET_PAGE(UART1_SFR_PAGE);
 244   1        rxcnt = (UART1FCT & UART1FCT_RXCNT__FMASK) >> UART1FCT_RXCNT__SHIFT;
 245   1        RESTORE_PAGE;
 246   1        return rxcnt;
 247   1      }
 248          #endif
 249          
 250          bool UART1_isTxFifoFull(void){
 251   1        bool txfull;
 252   1        DECL_PAGE;
 253   1        SET_PAGE(UART1_SFR_PAGE);
 254   1        if(UART1FCN1 & UART1FCN1_TXNF__NOT_FULL)
 255   1        {
 256   2          txfull = false;
 257   2        }
 258   1        else
 259   1        {
 260   2          txfull = true;
 261   2        }
 262   1        RESTORE_PAGE;
 263   1        return txfull;
 264   1      }
 265          
 266          void UART1_stallTxFifo(bool enable)
 267          {
 268   1        DECL_PAGE;
 269   1        SET_PAGE(UART1_SFR_PAGE);
 270   1        if(enable)
 271   1        {
 272   2          UART1FCN1 |= UART1FCN1_TXHOLD__HOLD;
 273   2        }
 274   1        else
 275   1        {
 276   2          UART1FCN1 &= ~UART1FCN1_TXHOLD__HOLD;
 277   2        }
 278   1        RESTORE_PAGE;
 279   1      }
 280          
 281          #if (EFM8PDL_UART1_AUTO_PAGE == 1)
 282          void UART1_flushTxFifo(void)
 283          {
 284   1        DECL_PAGE;
 285   1        SET_PAGE(UART1_SFR_PAGE);
 286   1        UART1FCN0 |= UART1FCN0_TFLSH__FLUSH;
 287   1        RESTORE_PAGE;
 288   1      }
 289          
 290          void UART1_flushRxFifo(void)
 291          {
 292   1        DECL_PAGE;
 293   1        SET_PAGE(UART1_SFR_PAGE);
 294   1        UART1FCN0 |= UART1FCN0_RFLSH__FLUSH;
 295   1        RESTORE_PAGE;
 296   1      }
 297          
 298          uint8_t UART1_getAutobaudIntFlag(void)
 299          {
C51 COMPILER V9.53.0.0   UART_1                                                            12/28/2017 16:49:27 PAGE 6   

 300   1        uint8_t val;
 301   1        DECL_PAGE;
 302   1        SET_PAGE(UART1_SFR_PAGE);
 303   1        val = UART1LIN & UART1_AUTOBAUD_IF;
 304   1        RESTORE_PAGE;
 305   1        return val;
 306   1      }
 307          
 308          void UART1_clearAutobaudIntFlag(void)
 309          {
 310   1        DECL_PAGE;
 311   1        SET_PAGE(UART1_SFR_PAGE);
 312   1        UART1LIN &= ~UART1_AUTOBAUD_IF;
 313   1        RESTORE_PAGE;
 314   1      }
 315          #endif
 316          
 317          void UART1_enableAutobaud(bool enable)
 318          {
 319   1        DECL_PAGE;
 320   1        SET_PAGE(UART1_SFR_PAGE);
 321   1        if(enable)
 322   1        {
 323   2          UART1LIN |= (UART1LIN_AUTOBDE__ENABLED | UART1LIN_SYNCDIE__ENABLED);
 324   2        }
 325   1        else
 326   1        {
 327   2          UART1LIN &= ~(UART1LIN_AUTOBDE__ENABLED | UART1LIN_SYNCDIE__ENABLED);
 328   2        }
 329   1        RESTORE_PAGE;
 330   1      }
 331          
 332          //=========================================================
 333          // Initialization API
 334          //=========================================================
 335          
 336          void UART1_init(uint32_t sysclk, uint32_t baudrate, 
 337                          UART1_DataLen_t datalen, UART1_StopLen_t stoplen, 
 338                          UART1_FeatureBit_t featbit, UART1_ParityType_t partype,
 339                          UART1_RxEnable_t rxen, UART1_RxSelect_t rxsel, 
 340                          UART1_Multiproc_t mcen)
 341          {
 342   1        DECL_PAGE;
 343   1        SET_PAGE(UART1_SFR_PAGE);
 344   1        UART1_initBaudRate(sysclk, baudrate);
 345   1        SCON1 = rxen;
 346   1        UART1PCF = rxsel;
 347   1        SMOD1 = datalen | stoplen | featbit | partype | mcen;
 348   1        RESTORE_PAGE;
 349   1      }
 350          
 351          void UART1_initWithAutobaud(UART1_BrPrescaler_t presc, UART1_StopLen_t stoplen,
 352                                      UART1_FeatureBit_t featbit, UART1_ParityType_t partype,
 353                                      UART1_RxEnable_t rxen, UART1_RxSelect_t rxsel,
 354                                      UART1_Multiproc_t mcen)
 355          {
 356   1        DECL_PAGE;
 357   1        SET_PAGE(UART1_SFR_PAGE);
 358   1        SCON1 = rxen;
 359   1        UART1PCF = rxsel;  
 360   1        SMOD1 = SMOD1_SDL__8_BITS | stoplen | featbit | partype | mcen;
 361   1        UART1LIN = (UART1LIN_AUTOBDE__ENABLED | UART1LIN_SYNCDIE__ENABLED);
 362   1        SBCON1 = (SBCON1_BREN__ENABLED | presc);
C51 COMPILER V9.53.0.0   UART_1                                                            12/28/2017 16:49:27 PAGE 7   

 363   1        RESTORE_PAGE;
 364   1      }
 365          
 366          void UART1_reset(void)
 367          {
 368   1        DECL_PAGE;
 369   1        SET_PAGE(UART1_SFR_PAGE);
 370   1        SCON1 = SCON1_OVR__NOT_SET
 371   1                | SCON1_PERR__NOT_SET
 372   1                | SCON1_REN__RECEIVE_DISABLED
 373   1                | SCON1_TBX__LOW
 374   1                | SCON1_RBX__LOW
 375   1                | SCON1_TI__NOT_SET
 376   1                | SCON1_RI__NOT_SET;
 377   1        UART1PCF = UART1PCF_RXSEL__CROSSBAR;            
 378   1        SMOD1 = SMOD1_MCE__MULTI_DISABLED
 379   1                | SMOD1_SPT__ODD_PARITY
 380   1                | SMOD1_PE__PARITY_DISABLED
 381   1                | SMOD1_SDL__8_BITS
 382   1                | SMOD1_XBE__DISABLED
 383   1                | SMOD1_SBL__SHORT;
 384   1        SBCON1 = SBCON1_BREN__DISABLED
 385   1                 | SBCON1_BPS__DIV_BY_1;
 386   1        UART1LIN = (UART1LIN_AUTOBDE__DISABLED | UART1LIN_SYNCDIE__DISABLED);
 387   1        RESTORE_PAGE;
 388   1      }
 389          
 390          void UART1_initTxFifo(UART1_TxFifoThreshold_t txth, UART1_TxFifoInt_t txint)
 391          {
 392   1        DECL_PAGE;
 393   1        SET_PAGE(UART1_SFR_PAGE);
 394   1      
 395   1        UART1FCN0 &= ~(UART1FCN0_TFRQE__BMASK
 396   1                       | UART1FCN0_TFLSH__BMASK
 397   1                       | UART1FCN0_TXTH__FMASK
 398   1                       | UART1FCN0_TFRQE__BMASK);
 399   1        UART1FCN0 |= (txth | txint);
 400   1      
 401   1        UART1FCN1 &= ~(UART1FCN1_TFRQ__BMASK
 402   1                       | UART1FCN1_TXHOLD__BMASK
 403   1                       | UART1FCN1_TXNF__BMASK
 404   1                       | UART1FCN1_TIE__BMASK);
 405   1        UART1FCN1 |= (UART1FCN1_TFRQ__SET
 406   1                      | UART1FCN1_TXHOLD__CONTINUE
 407   1                      | UART1FCN1_TIE__DISABLED);
 408   1      
 409   1        RESTORE_PAGE;
 410   1      }
 411          
 412          void UART1_initRxFifo(UART1_RxFiFoThreshold_t rxth, UART1_RxFifoTimeout_t rxto,
 413                                UART1_RxFifoInt_t rxint)
 414          {
 415   1        DECL_PAGE;
 416   1        SET_PAGE(UART1_SFR_PAGE);
 417   1      
 418   1        UART1FCN0 &= ~(UART1FCN0_RFRQE__BMASK
 419   1                       | UART1FCN0_RFLSH__BMASK
 420   1                       | UART1FCN0_RXTH__FMASK
 421   1                       | UART1FCN0_RFRQE__BMASK);
 422   1        UART1FCN0 |= (rxth | rxint);
 423   1      
 424   1        UART1FCN1 &= ~(UART1FCN1_RFRQ__BMASK
 425   1                       | UART1FCN1_RXTO__FMASK
C51 COMPILER V9.53.0.0   UART_1                                                            12/28/2017 16:49:27 PAGE 8   

 426   1                       | UART1FCN1_RIE__BMASK);
 427   1        UART1FCN1 |= (UART1FCN1_RFRQ__SET
 428   1                      | rxto
 429   1                      | UART1FCN1_RIE__DISABLED);
 430   1      
 431   1        RESTORE_PAGE;
 432   1      }
 433          
 434          //=========================================================
 435          // Buffer Access API
 436          //=========================================================
 437          #if EFM8PDL_UART1_USE_BUFFER == 1
              
              SI_SEGMENT_VARIABLE(txRemaining, static uint8_t, SI_SEG_XDATA) = 0;
              SI_SEGMENT_VARIABLE(rxRemaining, static uint8_t, SI_SEG_XDATA) = 0;
              SI_SEGMENT_VARIABLE_SEGMENT_POINTER(txBuffer, static uint8_t, EFM8PDL_UART1_TX_BUFTYPE, SI_SEG_XDATA);
              SI_SEGMENT_VARIABLE_SEGMENT_POINTER(rxBuffer, static uint8_t, EFM8PDL_UART1_RX_BUFTYPE, SI_SEG_XDATA);
              
              SI_INTERRUPT(UART1_ISR, UART1_IRQn)
              {
              #if (EFM8PDL_UART1_USE_ERR_CALLBACK == 1)
                uint8_t discard;
                uint8_t errors;
              #endif //EFM8PDL_UART1_USE_ERR_CALLBACK
              
                // If auto-baud sync word detected to set baudrate, clear flag and disable auto-baud detection
                if (UART1LIN & UART1_AUTOBAUD_IF)
                {
                  UART1LIN &= ~(UART1_AUTOBAUD_IF | UART1LIN_AUTOBDE__ENABLED | UART1LIN_SYNCDIE__ENABLED);
                }
                
              
                // If rx fifo request interrupt is set and enabled
                if ((UART1FCN1 & UART1_RFRQ_IF) && (UART1FCN0 & UART1FCN0_RFRQE__ENABLED))
                {
                  // Read bytes as long as rx fifo count is not zero and there
                      // is room in the tx buffer
                  while (rxRemaining && ((UART1FCT & UART1FCT_RXCNT__FMASK) >> UART1FCT_RXCNT__SHIFT))
                  {
              #if (EFM8PDL_UART1_USE_ERR_CALLBACK == 1)
                    // If parity or overrun error, clear flags, and call user
                    errors = SCON1 & (UART1_RXOVR_EF | UART1_PARITY_EF);
                    if(errors)
                    {
                      SCON1 &= ~errors;
                      UART1_transferErrorCb(errors);
                    }
              
                    // Store byte if there is no parity error a
                    if (errors & UART1_PARITY_EF)
                    {
                      discard = SBUF1;
                    }
                    else
              #endif //EFM8PDL_UART1_USE_ERR_CALLBACK
                    {
                      *rxBuffer = SBUF1;
                       ++rxBuffer;
                      --rxRemaining;
                      if (!rxRemaining)
                      {
                        UART1_receiveCompleteCb();
                      }
C51 COMPILER V9.53.0.0   UART_1                                                            12/28/2017 16:49:27 PAGE 9   

                    }
                  }
                  if(!rxRemaining)
                  {
                    // Flush Fifo if there is no room available in rx buffer
                    UART1FCN0 |= UART1FCN0_RFLSH__FLUSH;
                  }
                }
              
                // If tx fifo request interrupt is set and enabled
                if ((UART1FCN1 &  UART1_TFRQ_IF) && (UART1FCN0 & UART1FCN0_TFRQE__ENABLED))
                {
                  // Write bytes as long as the tx fifo is not full and there
                  // is room in the tx buffer
                  while (txRemaining && (UART1FCN1 & UART1FCN1_TXNF__NOT_FULL))
                  {
                    SBUF1 = *txBuffer;
                    ++txBuffer;
                    --txRemaining;
                  }
                  if(!txRemaining)
                  {
                    UART1_transmitCompleteCb();
                  }
                }
              }
              
              void UART1_writeBuffer(SI_VARIABLE_SEGMENT_POINTER(buffer, uint8_t, EFM8PDL_UART1_RX_BUFTYPE),
                                     uint8_t length)
              {
                // Initialize internal data
                txBuffer = buffer;
                txRemaining = length;
              
                // Enable tx fifo interrupts to kick off transfer
                UART1FCN0 |= UART1FCN0_TFRQE__ENABLED;
              }
              
              void UART1_readBuffer(SI_VARIABLE_SEGMENT_POINTER(buffer, uint8_t, EFM8PDL_UART1_TX_BUFTYPE),
                                    uint8_t length)
              {
                // Initialize internal data
                rxBuffer = buffer;
                rxRemaining = length;
              }
              
              void UART1_abortTx(void)
              {
                txRemaining = 0;
                UART1_flushTxFifo();
              }
              
              void UART1_abortRx(void)
              {
                rxRemaining = 0;
                UART1_flushRxFifo();
              }
              
              uint8_t UART1_txBytesRemaining(void)
              {
                return txRemaining;
              }
              
C51 COMPILER V9.53.0.0   UART_1                                                            12/28/2017 16:49:27 PAGE 10  

              uint8_t UART1_rxBytesRemaining(void)
              {
                return rxRemaining;
              }
              
              #endif //EFM8PDL_UART1_USE_BUFFER
 558          
 559          //=========================================================
 560          // STDIO API
 561          //=========================================================
 562          #if EFM8PDL_UART1_USE_STDIO == 1
 563          char putchar(char c){
 564   1        DECL_PAGE;
 565   1        SET_PAGE(UART1_SFR_PAGE);
 566   1        while(!SCON1_TI);
 567   1        SBUF1 = c;
 568   1        SCON1_TI = 0;
 569   1        RESTORE_PAGE;
 570   1        return c;
 571   1      }
 572          
 573          char _getkey(void){
 574   1        char val;
 575   1        DECL_PAGE;
 576   1        SET_PAGE(UART1_SFR_PAGE);
 577   1        while(!SCON1_RI);
 578   1        SCON1_RI = 0;
 579   1      
 580   1        val = SBUF1;
 581   1        RESTORE_PAGE;
 582   1        return val;
 583   1      }
 584          
 585          void UART1_initStdio(uint32_t sysclk, uint32_t baudrate)
 586          {
 587   1        DECL_PAGE;
 588   1        SET_PAGE(UART1_SFR_PAGE);
 589   1        SCON1  |= SCON1_REN__RECEIVE_ENABLED | SCON1_TI__SET;
 590   1        UART1PCF = UART1PCF_RXSEL__CROSSBAR;              
 591   1        SMOD1  |= SMOD1_SDL__8_BITS;
 592   1        UART1_initBaudRate(sysclk, baudrate);
 593   1        RESTORE_PAGE;
 594   1      }
 595          
 596          #endif //EFM8PDL_UART0_USE_STDIO
C51 COMPILER V9.53.0.0   UART_1                                                            12/28/2017 16:49:27 PAGE 11  

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION _UART1_initBaudRate (BEGIN)
                                           ; SOURCE LINE # 38
0000 900000      R     MOV     DPTR,#sysclk
0003 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 39
                                           ; SOURCE LINE # 44
0006 900000      R     MOV     DPTR,#savedPage
0009 E5A7              MOV     A,SFRPAGE
000B F0                MOVX    @DPTR,A
000C 75A720            MOV     SFRPAGE,#020H
                                           ; SOURCE LINE # 49
000F 900000      R     MOV     DPTR,#sysclk
0012 E0                MOVX    A,@DPTR
0013 C3                CLR     C
0014 13                RRC     A
0015 FE                MOV     R6,A
0016 A3                INC     DPTR
0017 E0                MOVX    A,@DPTR
0018 13                RRC     A
0019 FF                MOV     R7,A
001A E4                CLR     A
001B FC                MOV     R4,A
001C FD                MOV     R5,A
001D 900000      R     MOV     DPTR,#baudrate
0020 E0                MOVX    A,@DPTR
0021 F8                MOV     R0,A
0022 A3                INC     DPTR
0023 E0                MOVX    A,@DPTR
0024 F9                MOV     R1,A
0025 A3                INC     DPTR
0026 E0                MOVX    A,@DPTR
0027 FA                MOV     R2,A
0028 A3                INC     DPTR
0029 E0                MOVX    A,@DPTR
002A 2F                ADD     A,R7
002B FF                MOV     R7,A
002C EA                MOV     A,R2
002D 3E                ADDC    A,R6
002E FE                MOV     R6,A
002F ED                MOV     A,R5
0030 39                ADDC    A,R1
0031 FD                MOV     R5,A
0032 EC                MOV     A,R4
0033 38                ADDC    A,R0
0034 FC                MOV     R4,A
0035 900000      R     MOV     DPTR,#baudrate
0038 A3                INC     DPTR
0039 A3                INC     DPTR
003A A3                INC     DPTR
003B E0                MOVX    A,@DPTR
003C FB                MOV     R3,A
003D 120000      E     LCALL   ?C?ULDIV
0040 900000      R     MOV     DPTR,#min_presc
0043 EF                MOV     A,R7
0044 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 50
0045 E4                CLR     A
0046 900000      R     MOV     DPTR,#i
0049 F0                MOVX    @DPTR,A
004A         ?C0004:
C51 COMPILER V9.53.0.0   UART_1                                                            12/28/2017 16:49:27 PAGE 12  

004A 900000      R     MOV     DPTR,#i
004D E0                MOVX    A,@DPTR
004E FF                MOV     R7,A
004F C3                CLR     C
0050 9408              SUBB    A,#08H
0052 4003              JC      $ + 5H
0054 020000      R     LJMP    ?C0012
                                           ; SOURCE LINE # 51
                                           ; SOURCE LINE # 52
0057 7400        R     MOV     A,#LOW PRESC
0059 2F                ADD     A,R7
005A F582              MOV     DPL,A
005C E4                CLR     A
005D 3400        R     ADDC    A,#HIGH PRESC
005F F583              MOV     DPH,A
0061 E0                MOVX    A,@DPTR
0062 FF                MOV     R7,A
0063 900000      R     MOV     DPTR,#min_presc
0066 E0                MOVX    A,@DPTR
0067 FE                MOV     R6,A
0068 EF                MOV     A,R7
0069 C3                CLR     C
006A 9E                SUBB    A,R6
006B 4072              JC      ?C0006
                                           ; SOURCE LINE # 53
                                           ; SOURCE LINE # 54
006D E4                CLR     A
006E 7F02              MOV     R7,#02H
0070 FE                MOV     R6,A
0071 FD                MOV     R5,A
0072 FC                MOV     R4,A
0073 900000      R     MOV     DPTR,#baudrate
0076 E0                MOVX    A,@DPTR
0077 F8                MOV     R0,A
0078 A3                INC     DPTR
0079 E0                MOVX    A,@DPTR
007A F9                MOV     R1,A
007B A3                INC     DPTR
007C E0                MOVX    A,@DPTR
007D FA                MOV     R2,A
007E A3                INC     DPTR
007F E0                MOVX    A,@DPTR
0080 FB                MOV     R3,A
0081 120000      E     LCALL   ?C?LMUL
0084 A804              MOV     R0,AR4
0086 A905              MOV     R1,AR5
0088 AA06              MOV     R2,AR6
008A AB07              MOV     R3,AR7
008C 900000      R     MOV     DPTR,#i
008F E0                MOVX    A,@DPTR
0090 2400        R     ADD     A,#LOW PRESC
0092 F582              MOV     DPL,A
0094 E4                CLR     A
0095 3400        R     ADDC    A,#HIGH PRESC
0097 F583              MOV     DPH,A
0099 E0                MOVX    A,@DPTR
009A FF                MOV     R7,A
009B E4                CLR     A
009C FC                MOV     R4,A
009D FD                MOV     R5,A
009E FE                MOV     R6,A
009F 120000      E     LCALL   ?C?LMUL
00A2 A804              MOV     R0,AR4
C51 COMPILER V9.53.0.0   UART_1                                                            12/28/2017 16:49:27 PAGE 13  

00A4 A905              MOV     R1,AR5
00A6 AA06              MOV     R2,AR6
00A8 AB07              MOV     R3,AR7
00AA 900000      R     MOV     DPTR,#sysclk
00AD E0                MOVX    A,@DPTR
00AE FC                MOV     R4,A
00AF A3                INC     DPTR
00B0 E0                MOVX    A,@DPTR
00B1 FD                MOV     R5,A
00B2 A3                INC     DPTR
00B3 E0                MOVX    A,@DPTR
00B4 FE                MOV     R6,A
00B5 A3                INC     DPTR
00B6 E0                MOVX    A,@DPTR
00B7 FF                MOV     R7,A
00B8 120000      E     LCALL   ?C?ULDIV
00BB C3                CLR     C
00BC E4                CLR     A
00BD 9F                SUBB    A,R7
00BE FF                MOV     R7,A
00BF E4                CLR     A
00C0 9E                SUBB    A,R6
;---- Variable 'reload' assigned to Register 'R4/R5' ----
                                           ; SOURCE LINE # 55
00C1 F596              MOV     SBRLH1,A
                                           ; SOURCE LINE # 56
00C3 EF                MOV     A,R7
00C4 F595              MOV     SBRLL1,A
                                           ; SOURCE LINE # 57
00C6 900000      R     MOV     DPTR,#i
00C9 E0                MOVX    A,@DPTR
00CA 2400        R     ADD     A,#LOW PRESC_ENUM
00CC F582              MOV     DPL,A
00CE E4                CLR     A
00CF 3400        R     ADDC    A,#HIGH PRESC_ENUM
00D1 F583              MOV     DPH,A
00D3 E0                MOVX    A,@DPTR
00D4 4440              ORL     A,#040H
00D6 4294              ORL     SBCON1,A
                                           ; SOURCE LINE # 58
00D8 900000      R     MOV     DPTR,#savedPage
00DB E0                MOVX    A,@DPTR
00DC F5A7              MOV     SFRPAGE,A
00DE 22                RET     
                                           ; SOURCE LINE # 60
                                           ; SOURCE LINE # 61
00DF         ?C0006:
00DF 900000      R     MOV     DPTR,#i
00E2 E0                MOVX    A,@DPTR
00E3 04                INC     A
00E4 F0                MOVX    @DPTR,A
00E5 020000      R     LJMP    ?C0004
00E8         ?C0012:
                                           ; SOURCE LINE # 64
00E8 80FE              SJMP    ?C0012
             ; FUNCTION _UART1_initBaudRate (END)

             ; FUNCTION UART1_getIntFlags (BEGIN)
                                           ; SOURCE LINE # 72
                                           ; SOURCE LINE # 73
                                           ; SOURCE LINE # 76
;---- Variable 'savedPage' assigned to Register 'R7' ----
0000 AFA7              MOV     R7,SFRPAGE
C51 COMPILER V9.53.0.0   UART_1                                                            12/28/2017 16:49:27 PAGE 14  

0002 75A720            MOV     SFRPAGE,#020H
                                           ; SOURCE LINE # 77
0005 E5C8              MOV     A,SCON1
0007 5403              ANL     A,#03H
;---- Variable 'val' assigned to Register 'R6' ----
                                           ; SOURCE LINE # 78
0009 8FA7              MOV     SFRPAGE,R7
                                           ; SOURCE LINE # 79
000B FF                MOV     R7,A
                                           ; SOURCE LINE # 80
000C         ?C0020:
000C 22                RET     
             ; FUNCTION UART1_getIntFlags (END)

             ; FUNCTION _UART1_clearIntFlags (BEGIN)
                                           ; SOURCE LINE # 82
;---- Variable 'flags' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 83
                                           ; SOURCE LINE # 85
;---- Variable 'savedPage' assigned to Register 'R6' ----
0000 AEA7              MOV     R6,SFRPAGE
0002 75A720            MOV     SFRPAGE,#020H
                                           ; SOURCE LINE # 86
0005 EF                MOV     A,R7
0006 F4                CPL     A
0007 52C8              ANL     SCON1,A
                                           ; SOURCE LINE # 87
0009 AF06              MOV     R7,AR6
000B 8FA7              MOV     SFRPAGE,R7
                                           ; SOURCE LINE # 88
000D 22                RET     
             ; FUNCTION _UART1_clearIntFlags (END)

             ; FUNCTION UART1_enableTxInt (BEGIN)
                                           ; SOURCE LINE # 90
                                           ; SOURCE LINE # 91
                                           ; SOURCE LINE # 93
;---- Variable 'savedPage' assigned to Register 'R7' ----
0000 AFA7              MOV     R7,SFRPAGE
0002 75A720            MOV     SFRPAGE,#020H
                                           ; SOURCE LINE # 94
0005 A200        R     MOV     C,enable
0007 92DC              MOV     UART1FCN1_TIE,C
                                           ; SOURCE LINE # 95
0009 8FA7              MOV     SFRPAGE,R7
                                           ; SOURCE LINE # 96
000B 22                RET     
             ; FUNCTION UART1_enableTxInt (END)

             ; FUNCTION UART1_enableRxInt (BEGIN)
                                           ; SOURCE LINE # 98
                                           ; SOURCE LINE # 99
                                           ; SOURCE LINE # 101
;---- Variable 'savedPage' assigned to Register 'R7' ----
0000 AFA7              MOV     R7,SFRPAGE
0002 75A720            MOV     SFRPAGE,#020H
                                           ; SOURCE LINE # 102
0005 A200        R     MOV     C,enable
0007 92D8              MOV     UART1FCN1_RIE,C
                                           ; SOURCE LINE # 103
0009 8FA7              MOV     SFRPAGE,R7
                                           ; SOURCE LINE # 104
000B 22                RET     
C51 COMPILER V9.53.0.0   UART_1                                                            12/28/2017 16:49:27 PAGE 15  

             ; FUNCTION UART1_enableRxInt (END)

             ; FUNCTION UART1_initTxPolling (BEGIN)
                                           ; SOURCE LINE # 106
                                           ; SOURCE LINE # 107
                                           ; SOURCE LINE # 109
;---- Variable 'savedPage' assigned to Register 'R7' ----
0000 AFA7              MOV     R7,SFRPAGE
0002 75A720            MOV     SFRPAGE,#020H
                                           ; SOURCE LINE # 110
0005 D2C9              SETB    SCON1_TI
                                           ; SOURCE LINE # 111
0007 8FA7              MOV     SFRPAGE,R7
                                           ; SOURCE LINE # 112
0009 22                RET     
             ; FUNCTION UART1_initTxPolling (END)

             ; FUNCTION _UART1_write (BEGIN)
                                           ; SOURCE LINE # 114
;---- Variable 'value' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 115
                                           ; SOURCE LINE # 117
;---- Variable 'savedPage' assigned to Register 'R6' ----
0000 AEA7              MOV     R6,SFRPAGE
0002 75A720            MOV     SFRPAGE,#020H
                                           ; SOURCE LINE # 118
0005 8F92              MOV     SBUF1,R7
                                           ; SOURCE LINE # 119
0007 AF06              MOV     R7,AR6
0009 8FA7              MOV     SFRPAGE,R7
                                           ; SOURCE LINE # 120
000B 22                RET     
             ; FUNCTION _UART1_write (END)

             ; FUNCTION UART1_read (BEGIN)
                                           ; SOURCE LINE # 122
                                           ; SOURCE LINE # 123
                                           ; SOURCE LINE # 126
;---- Variable 'savedPage' assigned to Register 'R7' ----
0000 AFA7              MOV     R7,SFRPAGE
0002 75A720            MOV     SFRPAGE,#020H
                                           ; SOURCE LINE # 127
;---- Variable 'val' assigned to Register 'R6' ----
0005 AE92              MOV     R6,SBUF1
                                           ; SOURCE LINE # 128
0007 8FA7              MOV     SFRPAGE,R7
                                           ; SOURCE LINE # 129
0009 AF06              MOV     R7,AR6
                                           ; SOURCE LINE # 130
000B         ?C0062:
000B 22                RET     
             ; FUNCTION UART1_read (END)

             ; FUNCTION _UART1_writeWithExtraBit (BEGIN)
                                           ; SOURCE LINE # 133
;---- Variable 'value' assigned to Register 'R2/R3' ----
0000 AB07              MOV     R3,AR7
0002 AA06              MOV     R2,AR6
                                           ; SOURCE LINE # 134
                                           ; SOURCE LINE # 137
0004 900000      R     MOV     DPTR,#savedPage
0007 E5A7              MOV     A,SFRPAGE
0009 F0                MOVX    @DPTR,A
C51 COMPILER V9.53.0.0   UART_1                                                            12/28/2017 16:49:27 PAGE 16  

000A 75A720            MOV     SFRPAGE,#020H
                                           ; SOURCE LINE # 140
000D E593              MOV     A,SMOD1
000F 540C              ANL     A,#0CH
0011 13                RRC     A
0012 13                RRC     A
0013 543F              ANL     A,#03FH
0015 2405              ADD     A,#05H
0017 FF                MOV     R7,A
;---- Variable 'shift' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 141
0018 C3                CLR     C
0019 7408              MOV     A,#08H
001B 9F                SUBB    A,R7
001C FE                MOV     R6,A
001D 74FF              MOV     A,#0FFH
001F A806              MOV     R0,AR6
0021 08                INC     R0
0022 8002              SJMP    ?C0246
0024         ?C0245:
0024 C3                CLR     C
0025 13                RRC     A
0026         ?C0246:
0026 D8FC              DJNZ    R0,?C0245
;---- Variable 'mask' assigned to Register 'R1' ----
0028 F9                MOV     R1,A
                                           ; SOURCE LINE # 143
0029 EB                MOV     A,R3
002A AE02              MOV     R6,AR2
002C A807              MOV     R0,AR7
002E 08                INC     R0
002F 8005              SJMP    ?C0248
0031         ?C0247:
0031 CE                XCH     A,R6
0032 C3                CLR     C
0033 13                RRC     A
0034 CE                XCH     A,R6
0035 13                RRC     A
0036         ?C0248:
0036 D8F9              DJNZ    R0,?C0247
0038 13                RRC     A
0039 92CB              MOV     SCON1_TBX,C
                                           ; SOURCE LINE # 144
003B EB                MOV     A,R3
003C 59                ANL     A,R1
003D F592              MOV     SBUF1,A
                                           ; SOURCE LINE # 146
003F 900000      R     MOV     DPTR,#savedPage
0042 E0                MOVX    A,@DPTR
0043 F5A7              MOV     SFRPAGE,A
                                           ; SOURCE LINE # 147
0045 22                RET     
             ; FUNCTION _UART1_writeWithExtraBit (END)

             ; FUNCTION UART1_readWithExtraBit (BEGIN)
                                           ; SOURCE LINE # 149
                                           ; SOURCE LINE # 150
                                           ; SOURCE LINE # 154
;---- Variable 'savedPage' assigned to Register 'R1' ----
0000 A9A7              MOV     R1,SFRPAGE
0002 75A720            MOV     SFRPAGE,#020H
                                           ; SOURCE LINE # 157
0005 E593              MOV     A,SMOD1
C51 COMPILER V9.53.0.0   UART_1                                                            12/28/2017 16:49:27 PAGE 17  

0007 540C              ANL     A,#0CH
0009 13                RRC     A
000A 13                RRC     A
000B 543F              ANL     A,#03FH
000D 2405              ADD     A,#05H
000F FF                MOV     R7,A
;---- Variable 'shift' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 158
0010 C3                CLR     C
0011 7408              MOV     A,#08H
0013 9F                SUBB    A,R7
0014 FE                MOV     R6,A
0015 74FF              MOV     A,#0FFH
0017 A806              MOV     R0,AR6
0019 08                INC     R0
001A 8002              SJMP    ?C0250
001C         ?C0249:
001C C3                CLR     C
001D 13                RRC     A
001E         ?C0250:
001E D8FC              DJNZ    R0,?C0249
;---- Variable 'mask' assigned to Register 'R5' ----
0020 FD                MOV     R5,A
                                           ; SOURCE LINE # 160
0021 A2CA              MOV     C,SCON1_RBX
0023 E4                CLR     A
0024 FA                MOV     R2,A
0025 33                RLC     A
0026 FB                MOV     R3,A
;---- Variable 'val' assigned to Register 'R2/R3' ----
                                           ; SOURCE LINE # 161
0027 7E00              MOV     R6,#00H
0029 A807              MOV     R0,AR7
002B 08                INC     R0
002C 8005              SJMP    ?C0252
002E         ?C0251:
002E C3                CLR     C
002F 33                RLC     A
0030 CE                XCH     A,R6
0031 33                RLC     A
0032 CE                XCH     A,R6
0033         ?C0252:
0033 D8F9              DJNZ    R0,?C0251
0035 FB                MOV     R3,A
0036 AA06              MOV     R2,AR6
                                           ; SOURCE LINE # 162
0038 E592              MOV     A,SBUF1
003A 5D                ANL     A,R5
003B FF                MOV     R7,A
003C EB                MOV     A,R3
003D 4F                ORL     A,R7
                                           ; SOURCE LINE # 164
003E AF01              MOV     R7,AR1
0040 8FA7              MOV     SFRPAGE,R7
                                           ; SOURCE LINE # 165
0042 AE02              MOV     R6,AR2
0044 FF                MOV     R7,A
                                           ; SOURCE LINE # 166
0045         ?C0076:
0045 22                RET     
             ; FUNCTION UART1_readWithExtraBit (END)

             ; FUNCTION UART1_getErrFlags (BEGIN)
C51 COMPILER V9.53.0.0   UART_1                                                            12/28/2017 16:49:27 PAGE 18  

                                           ; SOURCE LINE # 169
                                           ; SOURCE LINE # 170
                                           ; SOURCE LINE # 173
;---- Variable 'savedPage' assigned to Register 'R7' ----
0000 AFA7              MOV     R7,SFRPAGE
0002 75A720            MOV     SFRPAGE,#020H
                                           ; SOURCE LINE # 174
0005 E5C8              MOV     A,SCON1
0007 54C0              ANL     A,#0C0H
;---- Variable 'val' assigned to Register 'R6' ----
                                           ; SOURCE LINE # 175
0009 8FA7              MOV     SFRPAGE,R7
                                           ; SOURCE LINE # 176
000B FF                MOV     R7,A
                                           ; SOURCE LINE # 177
000C         ?C0083:
000C 22                RET     
             ; FUNCTION UART1_getErrFlags (END)

             ; FUNCTION _UART1_clearErrFlags (BEGIN)
                                           ; SOURCE LINE # 179
;---- Variable 'flags' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 180
                                           ; SOURCE LINE # 182
;---- Variable 'savedPage' assigned to Register 'R6' ----
0000 AEA7              MOV     R6,SFRPAGE
0002 75A720            MOV     SFRPAGE,#020H
                                           ; SOURCE LINE # 183
0005 EF                MOV     A,R7
0006 F4                CPL     A
0007 52C8              ANL     SCON1,A
                                           ; SOURCE LINE # 184
0009 AF06              MOV     R7,AR6
000B 8FA7              MOV     SFRPAGE,R7
                                           ; SOURCE LINE # 185
000D 22                RET     
             ; FUNCTION _UART1_clearErrFlags (END)

             ; FUNCTION UART1_getFifoIntFlags (BEGIN)
                                           ; SOURCE LINE # 187
                                           ; SOURCE LINE # 188
                                           ; SOURCE LINE # 191
;---- Variable 'savedPage' assigned to Register 'R7' ----
0000 AFA7              MOV     R7,SFRPAGE
0002 75A720            MOV     SFRPAGE,#020H
                                           ; SOURCE LINE # 192
0005 E5D8              MOV     A,UART1FCN1
0007 5488              ANL     A,#088H
;---- Variable 'val' assigned to Register 'R6' ----
                                           ; SOURCE LINE # 193
0009 8FA7              MOV     SFRPAGE,R7
                                           ; SOURCE LINE # 194
000B FF                MOV     R7,A
                                           ; SOURCE LINE # 195
000C         ?C0097:
000C 22                RET     
             ; FUNCTION UART1_getFifoIntFlags (END)

             ; FUNCTION UART1_enableTxFifoInt (BEGIN)
                                           ; SOURCE LINE # 198
                                           ; SOURCE LINE # 199
                                           ; SOURCE LINE # 201
;---- Variable 'savedPage' assigned to Register 'R7' ----
C51 COMPILER V9.53.0.0   UART_1                                                            12/28/2017 16:49:27 PAGE 19  

0000 AFA7              MOV     R7,SFRPAGE
0002 75A720            MOV     SFRPAGE,#020H
                                           ; SOURCE LINE # 202
0005 300005            JNB     enable,?C0101
                                           ; SOURCE LINE # 203
                                           ; SOURCE LINE # 204
0008 439D80            ORL     UART1FCN0,#080H
                                           ; SOURCE LINE # 205
000B 8003              SJMP    ?C0105
000D         ?C0101:
                                           ; SOURCE LINE # 207
                                           ; SOURCE LINE # 208
000D 539D7F            ANL     UART1FCN0,#07FH
                                           ; SOURCE LINE # 209
0010         ?C0105:
                                           ; SOURCE LINE # 210
0010 8FA7              MOV     SFRPAGE,R7
                                           ; SOURCE LINE # 211
0012 22                RET     
             ; FUNCTION UART1_enableTxFifoInt (END)

             ; FUNCTION UART1_enableRxFifoInt (BEGIN)
                                           ; SOURCE LINE # 213
                                           ; SOURCE LINE # 214
                                           ; SOURCE LINE # 216
;---- Variable 'savedPage' assigned to Register 'R7' ----
0000 AFA7              MOV     R7,SFRPAGE
0002 75A720            MOV     SFRPAGE,#020H
                                           ; SOURCE LINE # 217
0005 300005            JNB     enable,?C0110
                                           ; SOURCE LINE # 218
                                           ; SOURCE LINE # 219
0008 439D08            ORL     UART1FCN0,#08H
                                           ; SOURCE LINE # 220
000B 8003              SJMP    ?C0114
000D         ?C0110:
                                           ; SOURCE LINE # 222
                                           ; SOURCE LINE # 223
000D 539DF7            ANL     UART1FCN0,#0F7H
                                           ; SOURCE LINE # 224
0010         ?C0114:
                                           ; SOURCE LINE # 225
0010 8FA7              MOV     SFRPAGE,R7
                                           ; SOURCE LINE # 226
0012 22                RET     
             ; FUNCTION UART1_enableRxFifoInt (END)

             ; FUNCTION UART1_getTxFifoCount (BEGIN)
                                           ; SOURCE LINE # 229
                                           ; SOURCE LINE # 230
                                           ; SOURCE LINE # 233
;---- Variable 'savedPage' assigned to Register 'R7' ----
0000 AFA7              MOV     R7,SFRPAGE
0002 75A720            MOV     SFRPAGE,#020H
                                           ; SOURCE LINE # 234
0005 E5FA              MOV     A,UART1FCT
0007 5470              ANL     A,#070H
0009 C4                SWAP    A
000A 540F              ANL     A,#0FH
;---- Variable 'txcnt' assigned to Register 'R6' ----
                                           ; SOURCE LINE # 235
000C 8FA7              MOV     SFRPAGE,R7
                                           ; SOURCE LINE # 236
C51 COMPILER V9.53.0.0   UART_1                                                            12/28/2017 16:49:27 PAGE 20  

000E FF                MOV     R7,A
                                           ; SOURCE LINE # 237
000F         ?C0122:
000F 22                RET     
             ; FUNCTION UART1_getTxFifoCount (END)

             ; FUNCTION UART1_getRxFifoCount (BEGIN)
                                           ; SOURCE LINE # 239
                                           ; SOURCE LINE # 240
                                           ; SOURCE LINE # 243
;---- Variable 'savedPage' assigned to Register 'R7' ----
0000 AFA7              MOV     R7,SFRPAGE
0002 75A720            MOV     SFRPAGE,#020H
                                           ; SOURCE LINE # 244
0005 E5FA              MOV     A,UART1FCT
0007 5407              ANL     A,#07H
;---- Variable 'rxcnt' assigned to Register 'R6' ----
                                           ; SOURCE LINE # 245
0009 8FA7              MOV     SFRPAGE,R7
                                           ; SOURCE LINE # 246
000B FF                MOV     R7,A
                                           ; SOURCE LINE # 247
000C         ?C0129:
000C 22                RET     
             ; FUNCTION UART1_getRxFifoCount (END)

             ; FUNCTION UART1_isTxFifoFull (BEGIN)
                                           ; SOURCE LINE # 250
                                           ; SOURCE LINE # 253
;---- Variable 'savedPage' assigned to Register 'R7' ----
0000 AFA7              MOV     R7,SFRPAGE
0002 75A720            MOV     SFRPAGE,#020H
                                           ; SOURCE LINE # 254
0005 E5D8              MOV     A,UART1FCN1
0007 30E604            JNB     ACC.6,?C0133
                                           ; SOURCE LINE # 255
                                           ; SOURCE LINE # 256
000A C200        R     CLR     txfull
                                           ; SOURCE LINE # 257
000C 8002              SJMP    ?C0137
000E         ?C0133:
                                           ; SOURCE LINE # 259
                                           ; SOURCE LINE # 260
000E D200        R     SETB    txfull
                                           ; SOURCE LINE # 261
0010         ?C0137:
                                           ; SOURCE LINE # 262
0010 8FA7              MOV     SFRPAGE,R7
                                           ; SOURCE LINE # 263
0012 A200        R     MOV     C,txfull
                                           ; SOURCE LINE # 264
0014         ?C0138:
0014 22                RET     
             ; FUNCTION UART1_isTxFifoFull (END)

             ; FUNCTION UART1_stallTxFifo (BEGIN)
                                           ; SOURCE LINE # 266
                                           ; SOURCE LINE # 267
                                           ; SOURCE LINE # 269
;---- Variable 'savedPage' assigned to Register 'R7' ----
0000 AFA7              MOV     R7,SFRPAGE
0002 75A720            MOV     SFRPAGE,#020H
                                           ; SOURCE LINE # 270
C51 COMPILER V9.53.0.0   UART_1                                                            12/28/2017 16:49:27 PAGE 21  

0005 300005            JNB     enable,?C0142
                                           ; SOURCE LINE # 271
                                           ; SOURCE LINE # 272
0008 43D820            ORL     UART1FCN1,#020H
                                           ; SOURCE LINE # 273
000B 8003              SJMP    ?C0146
000D         ?C0142:
                                           ; SOURCE LINE # 275
                                           ; SOURCE LINE # 276
000D 53D8DF            ANL     UART1FCN1,#0DFH
                                           ; SOURCE LINE # 277
0010         ?C0146:
                                           ; SOURCE LINE # 278
0010 8FA7              MOV     SFRPAGE,R7
                                           ; SOURCE LINE # 279
0012 22                RET     
             ; FUNCTION UART1_stallTxFifo (END)

             ; FUNCTION UART1_flushTxFifo (BEGIN)
                                           ; SOURCE LINE # 282
                                           ; SOURCE LINE # 283
                                           ; SOURCE LINE # 285
;---- Variable 'savedPage' assigned to Register 'R7' ----
0000 AFA7              MOV     R7,SFRPAGE
0002 75A720            MOV     SFRPAGE,#020H
                                           ; SOURCE LINE # 286
0005 439D40            ORL     UART1FCN0,#040H
                                           ; SOURCE LINE # 287
0008 8FA7              MOV     SFRPAGE,R7
                                           ; SOURCE LINE # 288
000A 22                RET     
             ; FUNCTION UART1_flushTxFifo (END)

             ; FUNCTION UART1_flushRxFifo (BEGIN)
                                           ; SOURCE LINE # 290
                                           ; SOURCE LINE # 291
                                           ; SOURCE LINE # 293
;---- Variable 'savedPage' assigned to Register 'R7' ----
0000 AFA7              MOV     R7,SFRPAGE
0002 75A720            MOV     SFRPAGE,#020H
                                           ; SOURCE LINE # 294
0005 439D04            ORL     UART1FCN0,#04H
                                           ; SOURCE LINE # 295
0008 8FA7              MOV     SFRPAGE,R7
                                           ; SOURCE LINE # 296
000A 22                RET     
             ; FUNCTION UART1_flushRxFifo (END)

             ; FUNCTION UART1_getAutobaudIntFlag (BEGIN)
                                           ; SOURCE LINE # 298
                                           ; SOURCE LINE # 299
                                           ; SOURCE LINE # 302
;---- Variable 'savedPage' assigned to Register 'R7' ----
0000 AFA7              MOV     R7,SFRPAGE
0002 75A720            MOV     SFRPAGE,#020H
                                           ; SOURCE LINE # 303
0005 E59E              MOV     A,UART1LIN
0007 5410              ANL     A,#010H
;---- Variable 'val' assigned to Register 'R6' ----
                                           ; SOURCE LINE # 304
0009 8FA7              MOV     SFRPAGE,R7
                                           ; SOURCE LINE # 305
000B FF                MOV     R7,A
C51 COMPILER V9.53.0.0   UART_1                                                            12/28/2017 16:49:27 PAGE 22  

                                           ; SOURCE LINE # 306
000C         ?C0168:
000C 22                RET     
             ; FUNCTION UART1_getAutobaudIntFlag (END)

             ; FUNCTION UART1_clearAutobaudIntFlag (BEGIN)
                                           ; SOURCE LINE # 308
                                           ; SOURCE LINE # 309
                                           ; SOURCE LINE # 311
;---- Variable 'savedPage' assigned to Register 'R7' ----
0000 AFA7              MOV     R7,SFRPAGE
0002 75A720            MOV     SFRPAGE,#020H
                                           ; SOURCE LINE # 312
0005 539EEF            ANL     UART1LIN,#0EFH
                                           ; SOURCE LINE # 313
0008 8FA7              MOV     SFRPAGE,R7
                                           ; SOURCE LINE # 314
000A 22                RET     
             ; FUNCTION UART1_clearAutobaudIntFlag (END)

             ; FUNCTION UART1_enableAutobaud (BEGIN)
                                           ; SOURCE LINE # 317
                                           ; SOURCE LINE # 318
                                           ; SOURCE LINE # 320
;---- Variable 'savedPage' assigned to Register 'R7' ----
0000 AFA7              MOV     R7,SFRPAGE
0002 75A720            MOV     SFRPAGE,#020H
                                           ; SOURCE LINE # 321
0005 300005            JNB     enable,?C0179
                                           ; SOURCE LINE # 322
                                           ; SOURCE LINE # 323
0008 439E81            ORL     UART1LIN,#081H
                                           ; SOURCE LINE # 324
000B 8003              SJMP    ?C0183
000D         ?C0179:
                                           ; SOURCE LINE # 326
                                           ; SOURCE LINE # 327
000D 539E7E            ANL     UART1LIN,#07EH
                                           ; SOURCE LINE # 328
0010         ?C0183:
                                           ; SOURCE LINE # 329
0010 8FA7              MOV     SFRPAGE,R7
                                           ; SOURCE LINE # 330
0012 22                RET     
             ; FUNCTION UART1_enableAutobaud (END)

             ; FUNCTION _UART1_init (BEGIN)
                                           ; SOURCE LINE # 336
;---- Variable 'sysclk' assigned to Register 'R4/R5/R6/R7' ----
                                           ; SOURCE LINE # 341
                                           ; SOURCE LINE # 343
0000 900000      R     MOV     DPTR,#savedPage
0003 E5A7              MOV     A,SFRPAGE
0005 F0                MOVX    @DPTR,A
0006 75A720            MOV     SFRPAGE,#020H
                                           ; SOURCE LINE # 344
0009 C004              PUSH    AR4
000B C005              PUSH    AR5
000D C006              PUSH    AR6
000F C007              PUSH    AR7
0011 900000      R     MOV     DPTR,#baudrate
0014 E0                MOVX    A,@DPTR
0015 FC                MOV     R4,A
C51 COMPILER V9.53.0.0   UART_1                                                            12/28/2017 16:49:27 PAGE 23  

0016 A3                INC     DPTR
0017 E0                MOVX    A,@DPTR
0018 FD                MOV     R5,A
0019 A3                INC     DPTR
001A E0                MOVX    A,@DPTR
001B FE                MOV     R6,A
001C A3                INC     DPTR
001D E0                MOVX    A,@DPTR
001E FF                MOV     R7,A
001F 900000      R     MOV     DPTR,#?_UART1_initBaudRate?BYTE+04H
0022 120000      E     LCALL   ?C?LSTXDATA
0025 D007              POP     AR7
0027 D006              POP     AR6
0029 D005              POP     AR5
002B D004              POP     AR4
002D 120000      R     LCALL   _UART1_initBaudRate
                                           ; SOURCE LINE # 345
0030 900000      R     MOV     DPTR,#rxen
0033 E0                MOVX    A,@DPTR
0034 F5C8              MOV     SCON1,A
                                           ; SOURCE LINE # 346
0036 A3                INC     DPTR
0037 E0                MOVX    A,@DPTR
0038 F5DA              MOV     UART1PCF,A
                                           ; SOURCE LINE # 347
003A 900000      R     MOV     DPTR,#stoplen
003D E0                MOVX    A,@DPTR
003E FF                MOV     R7,A
003F 900000      R     MOV     DPTR,#datalen
0042 E0                MOVX    A,@DPTR
0043 4F                ORL     A,R7
0044 FF                MOV     R7,A
0045 900000      R     MOV     DPTR,#featbit
0048 E0                MOVX    A,@DPTR
0049 4F                ORL     A,R7
004A FF                MOV     R7,A
004B A3                INC     DPTR
004C E0                MOVX    A,@DPTR
004D 4F                ORL     A,R7
004E FF                MOV     R7,A
004F 900000      R     MOV     DPTR,#mcen
0052 E0                MOVX    A,@DPTR
0053 4F                ORL     A,R7
0054 F593              MOV     SMOD1,A
                                           ; SOURCE LINE # 348
0056 A3                INC     DPTR
0057 E0                MOVX    A,@DPTR
0058 F5A7              MOV     SFRPAGE,A
                                           ; SOURCE LINE # 349
005A 22                RET     
             ; FUNCTION _UART1_init (END)

             ; FUNCTION _UART1_initWithAutobaud (BEGIN)
                                           ; SOURCE LINE # 351
;---- Variable 'presc' assigned to Register 'R7' ----
;---- Variable 'featbit' assigned to Register 'R3' ----
;---- Variable 'stoplen' assigned to Register 'R5' ----
                                           ; SOURCE LINE # 355
                                           ; SOURCE LINE # 357
;---- Variable 'savedPage' assigned to Register 'R6' ----
0000 AEA7              MOV     R6,SFRPAGE
0002 75A720            MOV     SFRPAGE,#020H
                                           ; SOURCE LINE # 358
C51 COMPILER V9.53.0.0   UART_1                                                            12/28/2017 16:49:27 PAGE 24  

0005 900000      R     MOV     DPTR,#rxen
0008 E0                MOVX    A,@DPTR
0009 F5C8              MOV     SCON1,A
                                           ; SOURCE LINE # 359
000B A3                INC     DPTR
000C E0                MOVX    A,@DPTR
000D F5DA              MOV     UART1PCF,A
                                           ; SOURCE LINE # 360
000F ED                MOV     A,R5
0010 440C              ORL     A,#0CH
0012 4B                ORL     A,R3
0013 FD                MOV     R5,A
0014 900000      R     MOV     DPTR,#partype
0017 E0                MOVX    A,@DPTR
0018 4D                ORL     A,R5
0019 FD                MOV     R5,A
001A 900000      R     MOV     DPTR,#mcen
001D E0                MOVX    A,@DPTR
001E 4D                ORL     A,R5
001F F593              MOV     SMOD1,A
                                           ; SOURCE LINE # 361
0021 759E81            MOV     UART1LIN,#081H
                                           ; SOURCE LINE # 362
0024 EF                MOV     A,R7
0025 4440              ORL     A,#040H
0027 F594              MOV     SBCON1,A
                                           ; SOURCE LINE # 363
0029 AF06              MOV     R7,AR6
002B 8FA7              MOV     SFRPAGE,R7
                                           ; SOURCE LINE # 364
002D 22                RET     
             ; FUNCTION _UART1_initWithAutobaud (END)

             ; FUNCTION UART1_reset (BEGIN)
                                           ; SOURCE LINE # 366
                                           ; SOURCE LINE # 367
                                           ; SOURCE LINE # 369
;---- Variable 'savedPage' assigned to Register 'R7' ----
0000 AFA7              MOV     R7,SFRPAGE
0002 75A720            MOV     SFRPAGE,#020H
                                           ; SOURCE LINE # 370
0005 E4                CLR     A
0006 F5C8              MOV     SCON1,A
                                           ; SOURCE LINE # 377
0008 F5DA              MOV     UART1PCF,A
                                           ; SOURCE LINE # 378
000A 75930C            MOV     SMOD1,#0CH
                                           ; SOURCE LINE # 384
000D 759403            MOV     SBCON1,#03H
                                           ; SOURCE LINE # 386
0010 F59E              MOV     UART1LIN,A
                                           ; SOURCE LINE # 387
0012 8FA7              MOV     SFRPAGE,R7
                                           ; SOURCE LINE # 388
0014 22                RET     
             ; FUNCTION UART1_reset (END)

             ; FUNCTION _UART1_initTxFifo (BEGIN)
                                           ; SOURCE LINE # 390
;---- Variable 'txint' assigned to Register 'R5' ----
;---- Variable 'txth' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 391
                                           ; SOURCE LINE # 393
C51 COMPILER V9.53.0.0   UART_1                                                            12/28/2017 16:49:27 PAGE 25  

;---- Variable 'savedPage' assigned to Register 'R6' ----
0000 AEA7              MOV     R6,SFRPAGE
0002 75A720            MOV     SFRPAGE,#020H
                                           ; SOURCE LINE # 395
0005 539D0F            ANL     UART1FCN0,#0FH
                                           ; SOURCE LINE # 399
0008 EF                MOV     A,R7
0009 4D                ORL     A,R5
000A 429D              ORL     UART1FCN0,A
                                           ; SOURCE LINE # 401
000C 53D80F            ANL     UART1FCN1,#0FH
                                           ; SOURCE LINE # 405
000F 43D880            ORL     UART1FCN1,#080H
                                           ; SOURCE LINE # 409
0012 AF06              MOV     R7,AR6
0014 8FA7              MOV     SFRPAGE,R7
                                           ; SOURCE LINE # 410
0016 22                RET     
             ; FUNCTION _UART1_initTxFifo (END)

             ; FUNCTION _UART1_initRxFifo (BEGIN)
                                           ; SOURCE LINE # 412
;---- Variable 'rxth' assigned to Register 'R7' ----
;---- Variable 'rxint' assigned to Register 'R3' ----
;---- Variable 'rxto' assigned to Register 'R5' ----
                                           ; SOURCE LINE # 414
                                           ; SOURCE LINE # 416
;---- Variable 'savedPage' assigned to Register 'R6' ----
0000 AEA7              MOV     R6,SFRPAGE
0002 75A720            MOV     SFRPAGE,#020H
                                           ; SOURCE LINE # 418
0005 539DF0            ANL     UART1FCN0,#0F0H
                                           ; SOURCE LINE # 422
0008 EF                MOV     A,R7
0009 4B                ORL     A,R3
000A 429D              ORL     UART1FCN0,A
                                           ; SOURCE LINE # 424
000C 53D8F0            ANL     UART1FCN1,#0F0H
                                           ; SOURCE LINE # 427
000F ED                MOV     A,R5
0010 4408              ORL     A,#08H
0012 42D8              ORL     UART1FCN1,A
                                           ; SOURCE LINE # 431
0014 AF06              MOV     R7,AR6
0016 8FA7              MOV     SFRPAGE,R7
                                           ; SOURCE LINE # 432
0018 22                RET     
             ; FUNCTION _UART1_initRxFifo (END)

             ; FUNCTION _putchar (BEGIN)
                                           ; SOURCE LINE # 563
;---- Variable 'c' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 565
;---- Variable 'savedPage' assigned to Register 'R6' ----
0000 AEA7              MOV     R6,SFRPAGE
0002 75A720            MOV     SFRPAGE,#020H
0005         ?C0223:
                                           ; SOURCE LINE # 566
0005 30C9FD            JNB     SCON1_TI,?C0223
0008         ?C0224:
                                           ; SOURCE LINE # 567
0008 8F92              MOV     SBUF1,R7
                                           ; SOURCE LINE # 568
C51 COMPILER V9.53.0.0   UART_1                                                            12/28/2017 16:49:27 PAGE 26  

000A C2C9              CLR     SCON1_TI
                                           ; SOURCE LINE # 569
000C 8EA7              MOV     SFRPAGE,R6
                                           ; SOURCE LINE # 570
                                           ; SOURCE LINE # 571
000E         ?C0228:
000E 22                RET     
             ; FUNCTION _putchar (END)

             ; FUNCTION _getkey (BEGIN)
                                           ; SOURCE LINE # 573
                                           ; SOURCE LINE # 576
;---- Variable 'savedPage' assigned to Register 'R7' ----
0000 AFA7              MOV     R7,SFRPAGE
0002 75A720            MOV     SFRPAGE,#020H
0005         ?C0232:
                                           ; SOURCE LINE # 577
0005 30C8FD            JNB     SCON1_RI,?C0232
0008         ?C0233:
                                           ; SOURCE LINE # 578
0008 C2C8              CLR     SCON1_RI
                                           ; SOURCE LINE # 580
;---- Variable 'val' assigned to Register 'R6' ----
000A AE92              MOV     R6,SBUF1
                                           ; SOURCE LINE # 581
000C 8FA7              MOV     SFRPAGE,R7
                                           ; SOURCE LINE # 582
000E AF06              MOV     R7,AR6
                                           ; SOURCE LINE # 583
0010         ?C0237:
0010 22                RET     
             ; FUNCTION _getkey (END)

             ; FUNCTION _UART1_initStdio (BEGIN)
                                           ; SOURCE LINE # 585
;---- Variable 'sysclk' assigned to Register 'R4/R5/R6/R7' ----
                                           ; SOURCE LINE # 586
                                           ; SOURCE LINE # 588
0000 900000      R     MOV     DPTR,#savedPage
0003 E5A7              MOV     A,SFRPAGE
0005 F0                MOVX    @DPTR,A
0006 75A720            MOV     SFRPAGE,#020H
                                           ; SOURCE LINE # 589
0009 43C812            ORL     SCON1,#012H
                                           ; SOURCE LINE # 590
000C E4                CLR     A
000D F5DA              MOV     UART1PCF,A
                                           ; SOURCE LINE # 591
000F 43930C            ORL     SMOD1,#0CH
                                           ; SOURCE LINE # 592
0012 C004              PUSH    AR4
0014 C005              PUSH    AR5
0016 C006              PUSH    AR6
0018 C007              PUSH    AR7
001A 900000      R     MOV     DPTR,#baudrate
001D E0                MOVX    A,@DPTR
001E FC                MOV     R4,A
001F A3                INC     DPTR
0020 E0                MOVX    A,@DPTR
0021 FD                MOV     R5,A
0022 A3                INC     DPTR
0023 E0                MOVX    A,@DPTR
0024 FE                MOV     R6,A
C51 COMPILER V9.53.0.0   UART_1                                                            12/28/2017 16:49:27 PAGE 27  

0025 A3                INC     DPTR
0026 E0                MOVX    A,@DPTR
0027 FF                MOV     R7,A
0028 900000      R     MOV     DPTR,#?_UART1_initBaudRate?BYTE+04H
002B 120000      E     LCALL   ?C?LSTXDATA
002E D007              POP     AR7
0030 D006              POP     AR6
0032 D005              POP     AR5
0034 D004              POP     AR4
0036 120000      R     LCALL   _UART1_initBaudRate
                                           ; SOURCE LINE # 593
0039 900000      R     MOV     DPTR,#savedPage
003C E0                MOVX    A,@DPTR
003D F5A7              MOV     SFRPAGE,A
                                           ; SOURCE LINE # 594
003F 22                RET     
             ; FUNCTION _UART1_initStdio (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    973    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     16      44
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       7
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
