C51 COMPILER V9.53.0.0   INITDEVICE                                                        12/28/2017 17:13:20 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE INITDEVICE
OBJECT MODULE PLACED IN .\src\InitDevice.OBJ
COMPILER INVOKED BY: c:\SiliconLabs\SimplicityStudio\v4\developer\toolchains\keil_8051\9.53\BIN\C51.exe D:\WorkSpace\MyC
                    -ode\SILICON_WORKSPACE\GE_EFM8LB12F64E-B-QFN32_YJ\src\InitDevice.c OMF2 LARGE DEBUG OBJECTEXTEND ROM(LARGE) WARNINGLEVEL(
                    -2) FLOATFUZZY(3) OPTIMIZE(8,SPEED) DEFINE(DEBUG=1) INTVECTOR(0X0000) BROWSE INTPROMOTE INCDIR(D:\WorkSpace\MyCode\SILICO
                    -N_WORKSPACE\GE_EFM8LB12F64E-B-QFN32_YJ\inc;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.1.1//Device/shared/
                    -si8051base;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.1.1//Device/EFM8LB1/inc) PRINT(.\src\InitDevice.lst
                    -) COND CODE PAGEWIDTH(120) PAGELENGTH(65) OBJECT(.\src\InitDevice.OBJ)

line level    source

   1          //=========================================================
   2          // src/InitDevice.c: generated by Hardware Configurator
   3          //
   4          // This file will be regenerated when saving a document.
   5          // leave the sections inside the "$[...]" comment tags alone
   6          // or they will be overwritten!!
   7          //=========================================================
   8          
   9          // USER INCLUDES
  10          #include <SI_EFM8LB1_Register_Enums.h>
  11          #include "InitDevice.h"
  12          
  13          // USER PROTOTYPES
  14          // USER FUNCTIONS
  15          
  16          // $[Library Includes]
  17          // [Library Includes]$
  18          
  19          //================================================================================
  20          // PORTS_2_enter_BusFreeMode_from_RESET
  21          //================================================================================
  22          extern void PORTS_2_enter_BusFreeMode_from_RESET(void) {
  23   1              // $[P2 - Port 2 Pin Latch]
  24   1              // [P2 - Port 2 Pin Latch]$
  25   1      
  26   1              // $[P2MDOUT - Port 2 Output Mode]
  27   1              /***********************************************************************
  28   1               - P2.0 output is open-drain
  29   1               - P2.1 output is open-drain
  30   1               - P2.2 output is open-drain
  31   1               - P2.3 output is push-pull
  32   1               - P2.4 output is open-drain
  33   1               - P2.5 output is open-drain
  34   1               - P2.6 output is open-drain
  35   1               ***********************************************************************/
  36   1              SFRPAGE = 0x00;
  37   1              P2MDOUT = P2MDOUT_B0__OPEN_DRAIN | P2MDOUT_B1__OPEN_DRAIN
  38   1                              | P2MDOUT_B2__OPEN_DRAIN | P2MDOUT_B3__PUSH_PULL
  39   1                              | P2MDOUT_B4__OPEN_DRAIN | P2MDOUT_B5__OPEN_DRAIN
  40   1                              | P2MDOUT_B6__OPEN_DRAIN;
  41   1              // [P2MDOUT - Port 2 Output Mode]$
  42   1      
  43   1              // $[P2MDIN - Port 2 Input Mode]
  44   1              // [P2MDIN - Port 2 Input Mode]$
  45   1      
  46   1              // $[P2SKIP - Port 2 Skip]
  47   1              /***********************************************************************
  48   1               - P2.0 pin is not skipped by the crossbar
  49   1               - P2.1 pin is not skipped by the crossbar
  50   1               - P2.2 pin is not skipped by the crossbar
  51   1               - P2.3 pin is skipped by the crossbar
C51 COMPILER V9.53.0.0   INITDEVICE                                                        12/28/2017 17:13:20 PAGE 2   

  52   1               ***********************************************************************/
  53   1              SFRPAGE = 0x20;
  54   1              P2SKIP = P2SKIP_B0__NOT_SKIPPED | P2SKIP_B1__NOT_SKIPPED
  55   1                              | P2SKIP_B2__NOT_SKIPPED | P2SKIP_B3__SKIPPED;
  56   1              // [P2SKIP - Port 2 Skip]$
  57   1      
  58   1              // $[P2MASK - Port 2 Mask]
  59   1              // [P2MASK - Port 2 Mask]$
  60   1      
  61   1              // $[P2MAT - Port 2 Match]
  62   1              // [P2MAT - Port 2 Match]$
  63   1      
  64   1      }
  65          
  66          //================================================================================
  67          // PBCFG_0_enter_BusFreeMode_from_RESET
  68          //================================================================================
  69          extern void PBCFG_0_enter_BusFreeMode_from_RESET(void) {
  70   1              // $[XBR2 - Port I/O Crossbar 2]
  71   1              // [XBR2 - Port I/O Crossbar 2]$
  72   1      
  73   1              // $[PRTDRV - Port Drive Strength]
  74   1              // [PRTDRV - Port Drive Strength]$
  75   1      
  76   1              // $[XBR0 - Port I/O Crossbar 0]
  77   1              // [XBR0 - Port I/O Crossbar 0]$
  78   1      
  79   1              // $[XBR1 - Port I/O Crossbar 1]
  80   1              // [XBR1 - Port I/O Crossbar 1]$
  81   1      
  82   1      }
  83          
  84          //================================================================================
  85          // CLOCK_0_enter_BusFreeMode_from_RESET
  86          //================================================================================
  87          extern void CLOCK_0_enter_BusFreeMode_from_RESET(void) {
  88   1              // $[HFOSC1 Setup]
  89   1              // [HFOSC1 Setup]$
  90   1      
  91   1              // $[CLKSEL - Clock Select]
  92   1              /***********************************************************************
  93   1               - Clock derived from the Internal High Frequency Oscillator 0
  94   1               - SYSCLK is equal to selected clock source divided by 1
  95   1               ***********************************************************************/
  96   1              SFRPAGE = 0x00;
  97   1              CLKSEL = CLKSEL_CLKSL__HFOSC0 | CLKSEL_CLKDIV__SYSCLK_DIV_1;
  98   1              while ((CLKSEL & CLKSEL_DIVRDY__BMASK) == CLKSEL_DIVRDY__NOT_READY)
  99   1                      ;
 100   1              // [CLKSEL - Clock Select]$
 101   1      
 102   1      }
 103          
 104          //==============================================================================
 105          // enter_BusFreeMode_from_RESET
 106          //==============================================================================
 107          void enter_BusFreeMode_from_RESET(void) {
 108   1              // $[Config Calls]
 109   1              // Save the SFRPAGE
 110   1              uint8_t SFRPAGE_save = SFRPAGE;
 111   1              PORTS_2_enter_BusFreeMode_from_RESET();
 112   1              PBCFG_0_enter_BusFreeMode_from_RESET();
 113   1              CLOCK_0_enter_BusFreeMode_from_RESET();
 114   1              // Restore the SFRPAGE
C51 COMPILER V9.53.0.0   INITDEVICE                                                        12/28/2017 17:13:20 PAGE 3   

 115   1              SFRPAGE = SFRPAGE_save;
 116   1              // [Config Calls]$
 117   1      
 118   1      }
 119          
 120          //==============================================================================
 121          // enter_DefaultMode_from_RESET
 122          //==============================================================================
 123          extern void enter_DefaultMode_from_RESET(void) {
 124   1              // $[Config Calls]
 125   1              // Save the SFRPAGE
 126   1              uint8_t SFRPAGE_save = SFRPAGE;
 127   1              WDT_0_enter_DefaultMode_from_RESET();
 128   1              PORTS_0_enter_DefaultMode_from_RESET();
 129   1              PORTS_1_enter_DefaultMode_from_RESET();
 130   1              PBCFG_0_enter_DefaultMode_from_RESET();
 131   1              CLOCK_0_enter_DefaultMode_from_RESET();
 132   1              TIMER01_0_enter_DefaultMode_from_RESET();
 133   1              TIMER16_3_enter_DefaultMode_from_RESET();
 134   1              TIMER16_4_enter_DefaultMode_from_RESET();
 135   1              TIMER_SETUP_0_enter_DefaultMode_from_RESET();
 136   1              SMBUS_0_enter_DefaultMode_from_RESET();
 137   1              UARTE_1_enter_DefaultMode_from_RESET();
 138   1              I2CSLAVE_0_enter_DefaultMode_from_RESET();              //yj
 139   1              INTERRUPT_0_enter_DefaultMode_from_RESET();
 140   1              // Restore the SFRPAGE
 141   1              SFRPAGE = SFRPAGE_save;
 142   1              // [Config Calls]$
 143   1      
 144   1      }
 145          
 146          extern void WDT_0_enter_DefaultMode_from_RESET(void) {
 147   1              // $[WDTCN - Watchdog Timer Control]
 148   1              SFRPAGE = 0x00;
 149   1              //Disable Watchdog with key sequence
 150   1              WDTCN = 0xDE; //First key
 151   1              WDTCN = 0xAD; //Second key
 152   1              // [WDTCN - Watchdog Timer Control]$
 153   1      
 154   1      }
 155          
 156          extern void PBCFG_0_enter_DefaultMode_from_RESET(void) {
 157   1              // $[XBR2 - Port I/O Crossbar 2]
 158   1              /***********************************************************************
 159   1               - Weak Pullups enabled 
 160   1               - Crossbar enabled
 161   1               - UART1 TX1 RX1 routed to Port pins
 162   1               - UART1 RTS1 unavailable at Port pin
 163   1               - UART1 CTS1 unavailable at Port pin
 164   1               ***********************************************************************/
 165   1              XBR2 = XBR2_WEAKPUD__PULL_UPS_ENABLED | XBR2_XBARE__ENABLED
 166   1                              | XBR2_URT1E__ENABLED | XBR2_URT1RTSE__DISABLED
 167   1                              | XBR2_URT1CTSE__DISABLED;
 168   1              // [XBR2 - Port I/O Crossbar 2]$
 169   1      
 170   1              // $[PRTDRV - Port Drive Strength]
 171   1              // [PRTDRV - Port Drive Strength]$
 172   1      
 173   1              // $[XBR0 - Port I/O Crossbar 0]
 174   1              /***********************************************************************
 175   1               - UART0 I/O unavailable at Port pin
 176   1               - SPI I/O unavailable at Port pins
 177   1               - SMBus 0 I/O routed to Port pins
C51 COMPILER V9.53.0.0   INITDEVICE                                                        12/28/2017 17:13:20 PAGE 4   

 178   1               - CP0 unavailable at Port pin
 179   1               - Asynchronous CP0 unavailable at Port pin
 180   1               - CP1 unavailable at Port pin
 181   1               - Asynchronous CP1 unavailable at Port pin
 182   1               - SYSCLK unavailable at Port pin
 183   1               ***********************************************************************/
 184   1              XBR0 = XBR0_URT0E__DISABLED | XBR0_SPI0E__DISABLED | XBR0_SMB0E__ENABLED
 185   1                              | XBR0_CP0E__DISABLED | XBR0_CP0AE__DISABLED | XBR0_CP1E__DISABLED
 186   1                              | XBR0_CP1AE__DISABLED | XBR0_SYSCKE__DISABLED;
 187   1              // [XBR0 - Port I/O Crossbar 0]$
 188   1      
 189   1              // $[XBR1 - Port I/O Crossbar 1]
 190   1              // [XBR1 - Port I/O Crossbar 1]$
 191   1      
 192   1      }
 193          
 194          extern void CLOCK_0_enter_DefaultMode_from_RESET(void) {
 195   1              // $[HFOSC1 Setup]
 196   1              // [HFOSC1 Setup]$
 197   1      
 198   1              // $[CLKSEL - Clock Select]
 199   1              /***********************************************************************
 200   1               - Clock derived from the Internal High Frequency Oscillator 0
 201   1               - SYSCLK is equal to selected clock source divided by 1
 202   1               ***********************************************************************/
 203   1              CLKSEL = CLKSEL_CLKSL__HFOSC0 | CLKSEL_CLKDIV__SYSCLK_DIV_1;
 204   1              while ((CLKSEL & CLKSEL_DIVRDY__BMASK) == CLKSEL_DIVRDY__NOT_READY)
 205   1                      ;
 206   1              // [CLKSEL - Clock Select]$
 207   1      
 208   1      }
 209          
 210          extern void TIMER01_0_enter_DefaultMode_from_RESET(void) {
 211   1              // $[Timer Initialization]
 212   1              //Save Timer Configuration
 213   1              uint8_t TCON_save;
 214   1              TCON_save = TCON;
 215   1              //Stop Timers
 216   1              TCON &= ~TCON_TR0__BMASK & ~TCON_TR1__BMASK;
 217   1      
 218   1              // [Timer Initialization]$
 219   1      
 220   1              // $[TH0 - Timer 0 High Byte]
 221   1              /***********************************************************************
 222   1               - Timer 0 High Byte = 0x38
 223   1               ***********************************************************************/
 224   1              TH0 = (0x38 << TH0_TH0__SHIFT);
 225   1              // [TH0 - Timer 0 High Byte]$
 226   1      
 227   1              // $[TL0 - Timer 0 Low Byte]
 228   1              /***********************************************************************
 229   1               - Timer 0 Low Byte = 0x13
 230   1               ***********************************************************************/
 231   1              TL0 = (0x13 << TL0_TL0__SHIFT);
 232   1              // [TL0 - Timer 0 Low Byte]$
 233   1      
 234   1              // $[TH1 - Timer 1 High Byte]
 235   1              /***********************************************************************
 236   1               - Timer 1 High Byte = 0xE9
 237   1               ***********************************************************************/
 238   1              TH1 = (0xE9 << TH1_TH1__SHIFT);
 239   1              // [TH1 - Timer 1 High Byte]$
 240   1      
C51 COMPILER V9.53.0.0   INITDEVICE                                                        12/28/2017 17:13:20 PAGE 5   

 241   1              // $[TL1 - Timer 1 Low Byte]
 242   1              // [TL1 - Timer 1 Low Byte]$
 243   1      
 244   1              // $[Timer Restoration]
 245   1              //Restore Timer Configuration
 246   1              TCON |= (TCON_save & TCON_TR0__BMASK) | (TCON_save & TCON_TR1__BMASK);
 247   1      
 248   1              // [Timer Restoration]$
 249   1      
 250   1      }
 251          
 252          extern void TIMER_SETUP_0_enter_DefaultMode_from_RESET(void) {
 253   1              // $[CKCON0 - Clock Control 0]
 254   1              /***********************************************************************
 255   1               - System clock divided by 4
 256   1               - Counter/Timer 0 uses the clock defined by the prescale field, SCA
 257   1               - Timer 2 high byte uses the clock defined by T2XCLK in TMR2CN0
 258   1               - Timer 2 low byte uses the clock defined by T2XCLK in TMR2CN0
 259   1               - Timer 3 high byte uses the clock defined by T3XCLK in TMR3CN0
 260   1               - Timer 3 low byte uses the clock defined by T3XCLK in TMR3CN0
 261   1               - Timer 1 uses the system clock
 262   1               ***********************************************************************/
 263   1              SFRPAGE = 0x00;
 264   1              CKCON0 = CKCON0_SCA__SYSCLK_DIV_4 | CKCON0_T0M__PRESCALE
 265   1                              | CKCON0_T2MH__EXTERNAL_CLOCK | CKCON0_T2ML__EXTERNAL_CLOCK
 266   1                              | CKCON0_T3MH__EXTERNAL_CLOCK | CKCON0_T3ML__EXTERNAL_CLOCK
 267   1                              | CKCON0_T1M__SYSCLK;
 268   1              // [CKCON0 - Clock Control 0]$
 269   1      
 270   1              // $[CKCON1 - Clock Control 1]
 271   1              // [CKCON1 - Clock Control 1]$
 272   1      
 273   1              // $[TMOD - Timer 0/1 Mode]
 274   1              /***********************************************************************
 275   1               - Mode 0, 13-bit Counter/Timer
 276   1               - Mode 2, 8-bit Counter/Timer with Auto-Reload
 277   1               - Timer Mode
 278   1               - Timer 0 enabled when TR0 = 1 irrespective of INT0 logic level
 279   1               - Timer Mode
 280   1               - Timer 1 enabled when TR1 = 1 irrespective of INT1 logic level
 281   1               ***********************************************************************/
 282   1              TMOD = TMOD_T0M__MODE0 | TMOD_T1M__MODE2 | TMOD_CT0__TIMER
 283   1                              | TMOD_GATE0__DISABLED | TMOD_CT1__TIMER | TMOD_GATE1__DISABLED;
 284   1              // [TMOD - Timer 0/1 Mode]$
 285   1      
 286   1              // $[TCON - Timer 0/1 Control]
 287   1              /***********************************************************************
 288   1               - Start Timer 1 running
 289   1               ***********************************************************************/
 290   1              TCON |= TCON_TR1__RUN;
 291   1              // [TCON - Timer 0/1 Control]$
 292   1      
 293   1      }
 294          
 295          extern void UART_0_enter_DefaultMode_from_RESET(void) {
 296   1              // $[SCON0 - UART0 Serial Port Control]
 297   1              /***********************************************************************
 298   1               - UART0 reception enabled
 299   1               ***********************************************************************/
 300   1              SCON0 |= SCON0_REN__RECEIVE_ENABLED;
 301   1              // [SCON0 - UART0 Serial Port Control]$
 302   1      
 303   1      }
C51 COMPILER V9.53.0.0   INITDEVICE                                                        12/28/2017 17:13:20 PAGE 6   

 304          
 305          extern void I2CSLAVE_0_enter_DefaultMode_from_RESET(void) {
 306   1              // $[I2C0FCN0 - I2C0 FIFO Control 0]
 307   1              /***********************************************************************
 308   1               - RFRQ will be set anytime new data arrives in the RX FIFO 
 309   1               - TFRQ will be set when the TX FIFO is empty
 310   1               - I2C0 interrupts will be generated if RFRQ is set
 311   1               - I2C0 interrupts will be generated if TFRQ is set
 312   1               ***********************************************************************/
 313   1              I2C0FCN0 = I2C0FCN0_RXTH__ZERO | I2C0FCN0_TXTH__ZERO
 314   1                              | I2C0FCN0_RFRQE__ENABLED | I2C0FCN0_TFRQE__ENABLED;
 315   1              // [I2C0FCN0 - I2C0 FIFO Control 0]$
 316   1      
 317   1              // $[I2C0SLAD - I2C0 Slave Address]
 318   1              /***********************************************************************
 319   1               - I2C Hardware Slave Address = 0x50
 320   1               ***********************************************************************/
 321   1              I2C0SLAD = (0x50 << I2C0SLAD_I2C0SLAD__SHIFT);
 322   1              // [I2C0SLAD - I2C0 Slave Address]$
 323   1      
 324   1              // $[I2C0ADM - I2C0 Slave Address Mask]
 325   1              // [I2C0ADM - I2C0 Slave Address Mask]$
 326   1      
 327   1              // $[I2C0CN0 - I2C0 Control]
 328   1              /***********************************************************************
 329   1               - Set the I2C0 Slave pins in I2C mode
 330   1               - Data bytes must be written into the TX FIFO via the I2C0DOUT register
 331   1               before the 8th SCL clock of the matching slave address byte transfer
 332   1               arrives for an I2C read operation
 333   1               - Enable I2C SCL low timeout detection using Timer 4 if Timer 4 RLFSEL
 334   1               is set appropriately
 335   1               - Enable the I2C0 Slave module
 336   1               ***********************************************************************/
 337   1              I2C0CN0 &= ~I2C0CN0_PRELOAD__BMASK;
 338   1              I2C0CN0 |= I2C0CN0_PINMD__I2C_MODE | I2C0CN0_TIMEOUT__ENABLED;
 339   1              I2C0CN0 |= I2C0CN0_I2C0EN__ENABLED;
 340   1              // [I2C0CN0 - I2C0 Control]$
 341   1      
 342   1      }
 343          
 344          extern void INTERRUPT_0_enter_DefaultMode_from_RESET(void) {
 345   1              // $[EIE1 - Extended Interrupt Enable 1]
 346   1              /***********************************************************************
 347   1               - Disable ADC0 Conversion Complete interrupt
 348   1               - Disable ADC0 Window Comparison interrupt
 349   1               - Disable CP0 interrupts
 350   1               - Disable CP1 interrupts
 351   1               - Disable all Port Match interrupts
 352   1               - Disable all PCA0 interrupts
 353   1               - Enable interrupt requests generated by SMB0
 354   1               - Enable interrupt requests generated by the TF3L or TF3H flags
 355   1               ***********************************************************************/
 356   1              SFRPAGE = 0x00;
 357   1              EIE1 = EIE1_EADC0__DISABLED | EIE1_EWADC0__DISABLED | EIE1_ECP0__DISABLED
 358   1                              | EIE1_ECP1__DISABLED | EIE1_EMAT__DISABLED | EIE1_EPCA0__DISABLED
 359   1                              | EIE1_ESMB0__ENABLED | EIE1_ET3__ENABLED;
 360   1              // [EIE1 - Extended Interrupt Enable 1]$
 361   1      
 362   1              // $[EIE2 - Extended Interrupt Enable 2]
 363   1              /***********************************************************************
 364   1               - Disable CL0 interrupts
 365   1               - Enable interrupt requests generated by the I2C0 slave
 366   1               - Enable interrupt requests generated by the TF4L or TF4H flags
C51 COMPILER V9.53.0.0   INITDEVICE                                                        12/28/2017 17:13:20 PAGE 7   

 367   1               - Disable Timer 5 interrupts
 368   1               - Disable UART1 interrupts
 369   1               ***********************************************************************/
 370   1              EIE2 = EIE2_CL0__DISABLED | EIE2_EI2C0__ENABLED | EIE2_ET4__ENABLED
 371   1                              | EIE2_ET5__DISABLED | EIE2_ES1__DISABLED;
 372   1              // [EIE2 - Extended Interrupt Enable 2]$
 373   1      
 374   1              // $[EIP1H - Extended Interrupt Priority 1 High]
 375   1              // [EIP1H - Extended Interrupt Priority 1 High]$
 376   1      
 377   1              // $[EIP1 - Extended Interrupt Priority 1 Low]
 378   1              // [EIP1 - Extended Interrupt Priority 1 Low]$
 379   1      
 380   1              // $[EIP2 - Extended Interrupt Priority 2]
 381   1              // [EIP2 - Extended Interrupt Priority 2]$
 382   1      
 383   1              // $[EIP2H - Extended Interrupt Priority 2 High]
 384   1              // [EIP2H - Extended Interrupt Priority 2 High]$
 385   1      
 386   1              // $[IE - Interrupt Enable]
 387   1              /***********************************************************************
 388   1               - Enable each interrupt according to its individual mask setting
 389   1               - Disable external interrupt 0
 390   1               - Disable external interrupt 1
 391   1               - Disable all SPI0 interrupts
 392   1               - Disable all Timer 0 interrupt
 393   1               - Disable all Timer 1 interrupt
 394   1               - Disable Timer 2 interrupt
 395   1               - Enable UART0 interrupt
 396   1               ***********************************************************************/
 397   1              IE = IE_EA__ENABLED | IE_EX0__DISABLED | IE_EX1__DISABLED
 398   1                              | IE_ESPI0__DISABLED | IE_ET0__DISABLED | IE_ET1__DISABLED
 399   1                              | IE_ET2__DISABLED | IE_ES0__ENABLED;
 400   1              // [IE - Interrupt Enable]$
 401   1      
 402   1              // $[IP - Interrupt Priority]
 403   1              // [IP - Interrupt Priority]$
 404   1      
 405   1              // $[IPH - Interrupt Priority High]
 406   1              // [IPH - Interrupt Priority High]$
 407   1      
 408   1      }
 409          
 410          extern void TIMER16_4_enter_DefaultMode_from_RESET(void) {
 411   1              // $[Timer Initialization]
 412   1              // Save Timer Configuration
 413   1              uint8_t TMR4CN0_TR4_save;
 414   1              SFRPAGE = 0x10;
 415   1              TMR4CN0_TR4_save = TMR4CN0 & TMR4CN0_TR4__BMASK;
 416   1              // Stop Timer
 417   1              TMR4CN0 &= ~(TMR4CN0_TR4__BMASK);
 418   1              // [Timer Initialization]$
 419   1      
 420   1              // $[TMR4CN1 - Timer 4 Control 1]
 421   1              // [TMR4CN1 - Timer 4 Control 1]$
 422   1      
 423   1              // $[TMR4CN0 - Timer 4 Control]
 424   1              // [TMR4CN0 - Timer 4 Control]$
 425   1      
 426   1              // $[TMR4H - Timer 4 High Byte]
 427   1              // [TMR4H - Timer 4 High Byte]$
 428   1      
 429   1              // $[TMR4L - Timer 4 Low Byte]
C51 COMPILER V9.53.0.0   INITDEVICE                                                        12/28/2017 17:13:20 PAGE 8   

 430   1              // [TMR4L - Timer 4 Low Byte]$
 431   1      
 432   1              // $[TMR4RLH - Timer 4 Reload High Byte]
 433   1              /***********************************************************************
 434   1               - Timer 4 Reload High Byte = 0x38
 435   1               ***********************************************************************/
 436   1              TMR4RLH = (0x38 << TMR4RLH_TMR4RLH__SHIFT);
 437   1              // [TMR4RLH - Timer 4 Reload High Byte]$
 438   1      
 439   1              // $[TMR4RLL - Timer 4 Reload Low Byte]
 440   1              /***********************************************************************
 441   1               - Timer 4 Reload Low Byte = 0x9E
 442   1               ***********************************************************************/
 443   1              TMR4RLL = (0x9E << TMR4RLL_TMR4RLL__SHIFT);
 444   1              // [TMR4RLL - Timer 4 Reload Low Byte]$
 445   1      
 446   1              // $[TMR4CN0]
 447   1              /***********************************************************************
 448   1               - Start Timer 4 running
 449   1               ***********************************************************************/
 450   1              TMR4CN0 |= TMR4CN0_TR4__RUN;
 451   1              // [TMR4CN0]$
 452   1      
 453   1              // $[Timer Restoration]
 454   1              // Restore Timer Configuration
 455   1              TMR4CN0 |= TMR4CN0_TR4_save;
 456   1              // [Timer Restoration]$
 457   1      
 458   1      }
 459          
 460          extern void PORTS_0_enter_DefaultMode_from_RESET(void) {
 461   1              // $[P0 - Port 0 Pin Latch]
 462   1              // [P0 - Port 0 Pin Latch]$
 463   1      
 464   1              // $[P0MDOUT - Port 0 Output Mode]
 465   1              /***********************************************************************
 466   1               - P0.0 output is open-drain
 467   1               - P0.1 output is open-drain
 468   1               - P0.2 output is open-drain
 469   1               - P0.3 output is open-drain
 470   1               - P0.4 output is push-pull
 471   1               - P0.5 output is open-drain
 472   1               - P0.6 output is open-drain
 473   1               - P0.7 output is open-drain
 474   1               ***********************************************************************/
 475   1              P0MDOUT = P0MDOUT_B0__OPEN_DRAIN | P0MDOUT_B1__OPEN_DRAIN
 476   1                              | P0MDOUT_B2__OPEN_DRAIN | P0MDOUT_B3__OPEN_DRAIN
 477   1                              | P0MDOUT_B4__PUSH_PULL | P0MDOUT_B5__OPEN_DRAIN
 478   1                              | P0MDOUT_B6__OPEN_DRAIN | P0MDOUT_B7__OPEN_DRAIN;
 479   1              // [P0MDOUT - Port 0 Output Mode]$
 480   1      
 481   1              // $[P0MDIN - Port 0 Input Mode]
 482   1              // [P0MDIN - Port 0 Input Mode]$
 483   1      
 484   1              // $[P0SKIP - Port 0 Skip]
 485   1              /***********************************************************************
 486   1               - P0.0 pin is skipped by the crossbar
 487   1               - P0.1 pin is skipped by the crossbar
 488   1               - P0.2 pin is skipped by the crossbar
 489   1               - P0.3 pin is skipped by the crossbar
 490   1               - P0.4 pin is skipped by the crossbar
 491   1               - P0.5 pin is skipped by the crossbar
 492   1               - P0.6 pin is skipped by the crossbar
C51 COMPILER V9.53.0.0   INITDEVICE                                                        12/28/2017 17:13:20 PAGE 9   

 493   1               - P0.7 pin is skipped by the crossbar
 494   1               ***********************************************************************/
 495   1              P0SKIP = P0SKIP_B0__SKIPPED | P0SKIP_B1__SKIPPED | P0SKIP_B2__SKIPPED
 496   1                              | P0SKIP_B3__SKIPPED | P0SKIP_B4__SKIPPED | P0SKIP_B5__SKIPPED
 497   1                              | P0SKIP_B6__SKIPPED | P0SKIP_B7__SKIPPED;
 498   1              // [P0SKIP - Port 0 Skip]$
 499   1      
 500   1              // $[P0MASK - Port 0 Mask]
 501   1              // [P0MASK - Port 0 Mask]$
 502   1      
 503   1              // $[P0MAT - Port 0 Match]
 504   1              // [P0MAT - Port 0 Match]$
 505   1      
 506   1      }
 507          
 508          extern void PORTS_1_enter_DefaultMode_from_RESET(void) {
 509   1              // $[P1 - Port 1 Pin Latch]
 510   1              // [P1 - Port 1 Pin Latch]$
 511   1      
 512   1              // $[P1MDOUT - Port 1 Output Mode]
 513   1              /***********************************************************************
 514   1               - P1.0 output is open-drain
 515   1               - P1.1 output is open-drain
 516   1               - P1.2 output is open-drain
 517   1               - P1.3 output is open-drain
 518   1               - P1.4 output is push-pull
 519   1               - P1.5 output is open-drain
 520   1               - P1.6 output is open-drain
 521   1               - P1.7 output is open-drain
 522   1               ***********************************************************************/
 523   1              P1MDOUT = P1MDOUT_B0__OPEN_DRAIN | P1MDOUT_B1__OPEN_DRAIN
 524   1                              | P1MDOUT_B2__OPEN_DRAIN | P1MDOUT_B3__OPEN_DRAIN
 525   1                              | P1MDOUT_B4__PUSH_PULL | P1MDOUT_B5__OPEN_DRAIN
 526   1                              | P1MDOUT_B6__OPEN_DRAIN | P1MDOUT_B7__OPEN_DRAIN;
 527   1              // [P1MDOUT - Port 1 Output Mode]$
 528   1      
 529   1              // $[P1MDIN - Port 1 Input Mode]
 530   1              // [P1MDIN - Port 1 Input Mode]$
 531   1      
 532   1              // $[P1SKIP - Port 1 Skip]
 533   1              /***********************************************************************
 534   1               - P1.0 pin is skipped by the crossbar
 535   1               - P1.1 pin is skipped by the crossbar
 536   1               - P1.2 pin is not skipped by the crossbar
 537   1               - P1.3 pin is not skipped by the crossbar
 538   1               - P1.4 pin is not skipped by the crossbar
 539   1               - P1.5 pin is not skipped by the crossbar
 540   1               - P1.6 pin is not skipped by the crossbar
 541   1               - P1.7 pin is not skipped by the crossbar
 542   1               ***********************************************************************/
 543   1              P1SKIP = P1SKIP_B0__SKIPPED | P1SKIP_B1__SKIPPED | P1SKIP_B2__NOT_SKIPPED
 544   1                              | P1SKIP_B3__NOT_SKIPPED | P1SKIP_B4__NOT_SKIPPED
 545   1                              | P1SKIP_B5__NOT_SKIPPED | P1SKIP_B6__NOT_SKIPPED
 546   1                              | P1SKIP_B7__NOT_SKIPPED;
 547   1              // [P1SKIP - Port 1 Skip]$
 548   1      
 549   1              // $[P1MASK - Port 1 Mask]
 550   1              // [P1MASK - Port 1 Mask]$
 551   1      
 552   1              // $[P1MAT - Port 1 Match]
 553   1              // [P1MAT - Port 1 Match]$
 554   1      
 555   1      }
C51 COMPILER V9.53.0.0   INITDEVICE                                                        12/28/2017 17:13:20 PAGE 10  

 556          
 557          extern void TIMER16_3_enter_DefaultMode_from_RESET(void) {
 558   1              // $[Timer Initialization]
 559   1              // Save Timer Configuration
 560   1              uint8_t TMR3CN0_TR3_save;
 561   1              TMR3CN0_TR3_save = TMR3CN0 & TMR3CN0_TR3__BMASK;
 562   1              // Stop Timer
 563   1              TMR3CN0 &= ~(TMR3CN0_TR3__BMASK);
 564   1              // [Timer Initialization]$
 565   1      
 566   1              // $[TMR3CN1 - Timer 3 Control 1]
 567   1              // [TMR3CN1 - Timer 3 Control 1]$
 568   1      
 569   1              // $[TMR3CN0 - Timer 3 Control]
 570   1              // [TMR3CN0 - Timer 3 Control]$
 571   1      
 572   1              // $[TMR3H - Timer 3 High Byte]
 573   1              // [TMR3H - Timer 3 High Byte]$
 574   1      
 575   1              // $[TMR3L - Timer 3 Low Byte]
 576   1              // [TMR3L - Timer 3 Low Byte]$
 577   1      
 578   1              // $[TMR3RLH - Timer 3 Reload High Byte]
 579   1              /***********************************************************************
 580   1               - Timer 3 Reload High Byte = 0x38
 581   1               ***********************************************************************/
 582   1              TMR3RLH = (0x38 << TMR3RLH_TMR3RLH__SHIFT);
 583   1              // [TMR3RLH - Timer 3 Reload High Byte]$
 584   1      
 585   1              // $[TMR3RLL - Timer 3 Reload Low Byte]
 586   1              /***********************************************************************
 587   1               - Timer 3 Reload Low Byte = 0x9E
 588   1               ***********************************************************************/
 589   1              TMR3RLL = (0x9E << TMR3RLL_TMR3RLL__SHIFT);
 590   1              // [TMR3RLL - Timer 3 Reload Low Byte]$
 591   1      
 592   1              // $[TMR3CN0]
 593   1              /***********************************************************************
 594   1               - Start Timer 3 running
 595   1               ***********************************************************************/
 596   1              TMR3CN0 |= TMR3CN0_TR3__RUN;
 597   1              // [TMR3CN0]$
 598   1      
 599   1              // $[Timer Restoration]
 600   1              // Restore Timer Configuration
 601   1              TMR3CN0 |= TMR3CN0_TR3_save;
 602   1              // [Timer Restoration]$
 603   1      
 604   1      }
 605          
 606          extern void SMBUS_0_enter_DefaultMode_from_RESET(void) {
 607   1              // $[SMB0FCN0 - SMBus0 FIFO Control 0]
 608   1              // [SMB0FCN0 - SMBus0 FIFO Control 0]$
 609   1      
 610   1              // $[SMB0RXLN - SMBus0 Receive Length Counter]
 611   1              // [SMB0RXLN - SMBus0 Receive Length Counter]$
 612   1      
 613   1              // $[SMB0ADR - SMBus 0 Slave Address]
 614   1              // [SMB0ADR - SMBus 0 Slave Address]$
 615   1      
 616   1              // $[SMB0ADM - SMBus 0 Slave Address Mask]
 617   1              // [SMB0ADM - SMBus 0 Slave Address Mask]$
 618   1      
C51 COMPILER V9.53.0.0   INITDEVICE                                                        12/28/2017 17:13:20 PAGE 11  

 619   1              // $[SMB0TC - SMBus 0 Timing and Pin Control]
 620   1              // [SMB0TC - SMBus 0 Timing and Pin Control]$
 621   1      
 622   1              // $[SMB0CF - SMBus 0 Configuration]
 623   1              /***********************************************************************
 624   1               - Timer 1 Overflow
 625   1               - Slave states are inhibited
 626   1               - Enable the SMBus module
 627   1               - Enable bus free timeouts
 628   1               - Enable SCL low timeouts if Timer 3 RLFSEL is set appropriately
 629   1               - Enable SDA extended setup and hold times
 630   1               ***********************************************************************/
 631   1              SMB0CF &= ~SMB0CF_SMBCS__FMASK;
 632   1              SMB0CF |= SMB0CF_SMBCS__TIMER1 | SMB0CF_INH__SLAVE_DISABLED
 633   1                              | SMB0CF_ENSMB__ENABLED | SMB0CF_SMBFTE__FREE_TO_ENABLED
 634   1                              | SMB0CF_SMBTOE__SCL_TO_ENABLED | SMB0CF_EXTHOLD__ENABLED;
 635   1              // [SMB0CF - SMBus 0 Configuration]$
 636   1      
 637   1      }
 638          
 639          extern void UARTE_1_enter_DefaultMode_from_RESET(void) {
 640   1              // $[SBCON1 - UART1 Baud Rate Generator Control]
 641   1              /***********************************************************************
 642   1               - Enable the baud rate generator
 643   1               - Prescaler = 1
 644   1               ***********************************************************************/
 645   1              SFRPAGE = 0x20;
 646   1              SBCON1 = SBCON1_BREN__ENABLED | SBCON1_BPS__DIV_BY_1;
 647   1              // [SBCON1 - UART1 Baud Rate Generator Control]$
 648   1      
 649   1              // $[SMOD1 - UART1 Mode]
 650   1              // [SMOD1 - UART1 Mode]$
 651   1      
 652   1              // $[UART1FCN0 - UART1 FIFO Control 0]
 653   1              // [UART1FCN0 - UART1 FIFO Control 0]$
 654   1      
 655   1              // $[SBRLH1 - UART1 Baud Rate Generator High Byte]
 656   1              /***********************************************************************
 657   1               - UART1 Baud Rate Reload High = 0xFF
 658   1               ***********************************************************************/
 659   1              SBRLH1 = (0xFF << SBRLH1_BRH__SHIFT);
 660   1              // [SBRLH1 - UART1 Baud Rate Generator High Byte]$
 661   1      
 662   1              // $[SBRLL1 - UART1 Baud Rate Generator Low Byte]
 663   1              /***********************************************************************
 664   1               - UART1 Baud Rate Reload Low = 0x96
 665   1               ***********************************************************************/
 666   1              SBRLL1 = (0x96 << SBRLL1_BRL__SHIFT);
 667   1              // [SBRLL1 - UART1 Baud Rate Generator Low Byte]$
 668   1      
 669   1              // $[UART1LIN - UART1 LIN Configuration]
 670   1              // [UART1LIN - UART1 LIN Configuration]$
 671   1      
 672   1              // $[SCON1 - UART1 Serial Port Control]
 673   1              /***********************************************************************
 674   1               - UART1 reception enabled
 675   1               ***********************************************************************/
 676   1              SCON1 |= SCON1_REN__RECEIVE_ENABLED;
 677   1              // [SCON1 - UART1 Serial Port Control]$
 678   1      
 679   1              // $[UART1FCN1 - UART1 FIFO Control 1]
 680   1              // [UART1FCN1 - UART1 FIFO Control 1]$
 681   1      
C51 COMPILER V9.53.0.0   INITDEVICE                                                        12/28/2017 17:13:20 PAGE 12  

 682   1      }
 683          
C51 COMPILER V9.53.0.0   INITDEVICE                                                        12/28/2017 17:13:20 PAGE 13  

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION PORTS_2_enter_BusFreeMode_from_RESET (BEGIN)
                                           ; SOURCE LINE # 22
                                           ; SOURCE LINE # 36
0000 E4                CLR     A
0001 F5A7              MOV     SFRPAGE,A
                                           ; SOURCE LINE # 37
0003 75A608            MOV     P2MDOUT,#08H
                                           ; SOURCE LINE # 53
0006 75A720            MOV     SFRPAGE,#020H
                                           ; SOURCE LINE # 54
0009 75CC08            MOV     P2SKIP,#08H
                                           ; SOURCE LINE # 64
000C 22                RET     
             ; FUNCTION PORTS_2_enter_BusFreeMode_from_RESET (END)

             ; FUNCTION PBCFG_0_enter_BusFreeMode_from_RESET (BEGIN)
                                           ; SOURCE LINE # 69
                                           ; SOURCE LINE # 82
0000 22                RET     
             ; FUNCTION PBCFG_0_enter_BusFreeMode_from_RESET (END)

             ; FUNCTION CLOCK_0_enter_BusFreeMode_from_RESET (BEGIN)
                                           ; SOURCE LINE # 87
                                           ; SOURCE LINE # 96
0000 E4                CLR     A
0001 F5A7              MOV     SFRPAGE,A
                                           ; SOURCE LINE # 97
0003 F5A9              MOV     CLKSEL,A
0005         ?C0003:
                                           ; SOURCE LINE # 98
0005 E5A9              MOV     A,CLKSEL
0007 30E7FB            JNB     ACC.7,?C0003
000A         ?C0004:
                                           ; SOURCE LINE # 102
000A         ?C0005:
000A 22                RET     
             ; FUNCTION CLOCK_0_enter_BusFreeMode_from_RESET (END)

             ; FUNCTION enter_BusFreeMode_from_RESET (BEGIN)
                                           ; SOURCE LINE # 107
                                           ; SOURCE LINE # 110
;---- Variable 'SFRPAGE_save' assigned to Register 'R7' ----
0000 AFA7              MOV     R7,SFRPAGE
                                           ; SOURCE LINE # 111
0002 120000      R     LCALL   PORTS_2_enter_BusFreeMode_from_RESET
                                           ; SOURCE LINE # 112
0005 120000      R     LCALL   PBCFG_0_enter_BusFreeMode_from_RESET
                                           ; SOURCE LINE # 113
0008 120000      R     LCALL   CLOCK_0_enter_BusFreeMode_from_RESET
                                           ; SOURCE LINE # 115
000B 8FA7              MOV     SFRPAGE,R7
                                           ; SOURCE LINE # 118
000D 22                RET     
             ; FUNCTION enter_BusFreeMode_from_RESET (END)

             ; FUNCTION enter_DefaultMode_from_RESET (BEGIN)
                                           ; SOURCE LINE # 123
                                           ; SOURCE LINE # 126
0000 900000      R     MOV     DPTR,#SFRPAGE_save
0003 E5A7              MOV     A,SFRPAGE
C51 COMPILER V9.53.0.0   INITDEVICE                                                        12/28/2017 17:13:20 PAGE 14  

0005 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 127
0006 120000      R     LCALL   WDT_0_enter_DefaultMode_from_RESET
                                           ; SOURCE LINE # 128
0009 120000      R     LCALL   PORTS_0_enter_DefaultMode_from_RESET
                                           ; SOURCE LINE # 129
000C 120000      R     LCALL   PORTS_1_enter_DefaultMode_from_RESET
                                           ; SOURCE LINE # 130
000F 120000      R     LCALL   PBCFG_0_enter_DefaultMode_from_RESET
                                           ; SOURCE LINE # 131
0012 120000      R     LCALL   CLOCK_0_enter_DefaultMode_from_RESET
                                           ; SOURCE LINE # 132
0015 120000      R     LCALL   TIMER01_0_enter_DefaultMode_from_RESET
                                           ; SOURCE LINE # 133
0018 120000      R     LCALL   TIMER16_3_enter_DefaultMode_from_RESET
                                           ; SOURCE LINE # 134
001B 120000      R     LCALL   TIMER16_4_enter_DefaultMode_from_RESET
                                           ; SOURCE LINE # 135
001E 120000      R     LCALL   TIMER_SETUP_0_enter_DefaultMode_from_RESET
                                           ; SOURCE LINE # 136
0021 120000      R     LCALL   SMBUS_0_enter_DefaultMode_from_RESET
                                           ; SOURCE LINE # 137
0024 120000      R     LCALL   UARTE_1_enter_DefaultMode_from_RESET
                                           ; SOURCE LINE # 138
0027 120000      R     LCALL   I2CSLAVE_0_enter_DefaultMode_from_RESET
                                           ; SOURCE LINE # 139
002A 120000      R     LCALL   INTERRUPT_0_enter_DefaultMode_from_RESET
                                           ; SOURCE LINE # 141
002D 900000      R     MOV     DPTR,#SFRPAGE_save
0030 E0                MOVX    A,@DPTR
0031 F5A7              MOV     SFRPAGE,A
                                           ; SOURCE LINE # 144
0033 22                RET     
             ; FUNCTION enter_DefaultMode_from_RESET (END)

             ; FUNCTION WDT_0_enter_DefaultMode_from_RESET (BEGIN)
                                           ; SOURCE LINE # 146
                                           ; SOURCE LINE # 148
0000 E4                CLR     A
0001 F5A7              MOV     SFRPAGE,A
                                           ; SOURCE LINE # 150
0003 7597DE            MOV     WDTCN,#0DEH
                                           ; SOURCE LINE # 151
0006 7597AD            MOV     WDTCN,#0ADH
                                           ; SOURCE LINE # 154
0009 22                RET     
             ; FUNCTION WDT_0_enter_DefaultMode_from_RESET (END)

             ; FUNCTION PBCFG_0_enter_DefaultMode_from_RESET (BEGIN)
                                           ; SOURCE LINE # 156
                                           ; SOURCE LINE # 165
0000 75E341            MOV     XBR2,#041H
                                           ; SOURCE LINE # 184
0003 75E104            MOV     XBR0,#04H
                                           ; SOURCE LINE # 192
0006 22                RET     
             ; FUNCTION PBCFG_0_enter_DefaultMode_from_RESET (END)

             ; FUNCTION CLOCK_0_enter_DefaultMode_from_RESET (BEGIN)
                                           ; SOURCE LINE # 194
                                           ; SOURCE LINE # 203
0000 E4                CLR     A
0001 F5A9              MOV     CLKSEL,A
C51 COMPILER V9.53.0.0   INITDEVICE                                                        12/28/2017 17:13:20 PAGE 15  

0003         ?C0010:
                                           ; SOURCE LINE # 204
0003 E5A9              MOV     A,CLKSEL
0005 30E7FB            JNB     ACC.7,?C0010
0008         ?C0011:
                                           ; SOURCE LINE # 208
0008         ?C0012:
0008 22                RET     
             ; FUNCTION CLOCK_0_enter_DefaultMode_from_RESET (END)

             ; FUNCTION TIMER01_0_enter_DefaultMode_from_RESET (BEGIN)
                                           ; SOURCE LINE # 210
                                           ; SOURCE LINE # 214
;---- Variable 'TCON_save' assigned to Register 'R7' ----
0000 AF88              MOV     R7,TCON
                                           ; SOURCE LINE # 216
0002 5388AF            ANL     TCON,#0AFH
                                           ; SOURCE LINE # 224
0005 758C38            MOV     TH0,#038H
                                           ; SOURCE LINE # 231
0008 758A13            MOV     TL0,#013H
                                           ; SOURCE LINE # 238
000B 758DE9            MOV     TH1,#0E9H
                                           ; SOURCE LINE # 246
000E EF                MOV     A,R7
000F 5440              ANL     A,#040H
0011 FE                MOV     R6,A
0012 EF                MOV     A,R7
0013 5410              ANL     A,#010H
0015 4E                ORL     A,R6
0016 4288              ORL     TCON,A
                                           ; SOURCE LINE # 250
0018 22                RET     
             ; FUNCTION TIMER01_0_enter_DefaultMode_from_RESET (END)

             ; FUNCTION TIMER_SETUP_0_enter_DefaultMode_from_RESET (BEGIN)
                                           ; SOURCE LINE # 252
                                           ; SOURCE LINE # 263
0000 E4                CLR     A
0001 F5A7              MOV     SFRPAGE,A
                                           ; SOURCE LINE # 264
0003 758E09            MOV     CKCON0,#09H
                                           ; SOURCE LINE # 282
0006 758920            MOV     TMOD,#020H
                                           ; SOURCE LINE # 290
0009 438840            ORL     TCON,#040H
                                           ; SOURCE LINE # 293
000C 22                RET     
             ; FUNCTION TIMER_SETUP_0_enter_DefaultMode_from_RESET (END)

             ; FUNCTION UART_0_enter_DefaultMode_from_RESET (BEGIN)
                                           ; SOURCE LINE # 295
                                           ; SOURCE LINE # 300
0000 439810            ORL     SCON0,#010H
                                           ; SOURCE LINE # 303
0003 22                RET     
             ; FUNCTION UART_0_enter_DefaultMode_from_RESET (END)

             ; FUNCTION I2CSLAVE_0_enter_DefaultMode_from_RESET (BEGIN)
                                           ; SOURCE LINE # 305
                                           ; SOURCE LINE # 313
0000 75AD88            MOV     I2C0FCN0,#088H
                                           ; SOURCE LINE # 321
C51 COMPILER V9.53.0.0   INITDEVICE                                                        12/28/2017 17:13:20 PAGE 16  

0003 75BD50            MOV     I2C0SLAD,#050H
                                           ; SOURCE LINE # 337
0006 53BAFB            ANL     I2C0CN0,#0FBH
                                           ; SOURCE LINE # 338
0009 43BA18            ORL     I2C0CN0,#018H
                                           ; SOURCE LINE # 339
000C 43BA02            ORL     I2C0CN0,#02H
                                           ; SOURCE LINE # 342
000F 22                RET     
             ; FUNCTION I2CSLAVE_0_enter_DefaultMode_from_RESET (END)

             ; FUNCTION INTERRUPT_0_enter_DefaultMode_from_RESET (BEGIN)
                                           ; SOURCE LINE # 344
                                           ; SOURCE LINE # 356
0000 E4                CLR     A
0001 F5A7              MOV     SFRPAGE,A
                                           ; SOURCE LINE # 357
0003 75E681            MOV     EIE1,#081H
                                           ; SOURCE LINE # 370
0006 75F306            MOV     EIE2,#06H
                                           ; SOURCE LINE # 397
0009 75A890            MOV     IE,#090H
                                           ; SOURCE LINE # 408
000C 22                RET     
             ; FUNCTION INTERRUPT_0_enter_DefaultMode_from_RESET (END)

             ; FUNCTION TIMER16_4_enter_DefaultMode_from_RESET (BEGIN)
                                           ; SOURCE LINE # 410
                                           ; SOURCE LINE # 414
0000 75A710            MOV     SFRPAGE,#010H
                                           ; SOURCE LINE # 415
0003 E598              MOV     A,TMR4CN0
0005 5404              ANL     A,#04H
;---- Variable 'TMR4CN0_TR4_save' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 417
0007 5398FB            ANL     TMR4CN0,#0FBH
                                           ; SOURCE LINE # 436
000A 75A338            MOV     TMR4RLH,#038H
                                           ; SOURCE LINE # 443
000D 75A29E            MOV     TMR4RLL,#09EH
                                           ; SOURCE LINE # 450
0010 439804            ORL     TMR4CN0,#04H
                                           ; SOURCE LINE # 455
0013 4298              ORL     TMR4CN0,A
                                           ; SOURCE LINE # 458
0015 22                RET     
             ; FUNCTION TIMER16_4_enter_DefaultMode_from_RESET (END)

             ; FUNCTION PORTS_0_enter_DefaultMode_from_RESET (BEGIN)
                                           ; SOURCE LINE # 460
                                           ; SOURCE LINE # 475
0000 75A410            MOV     P0MDOUT,#010H
                                           ; SOURCE LINE # 495
0003 75D4FF            MOV     P0SKIP,#0FFH
                                           ; SOURCE LINE # 506
0006 22                RET     
             ; FUNCTION PORTS_0_enter_DefaultMode_from_RESET (END)

             ; FUNCTION PORTS_1_enter_DefaultMode_from_RESET (BEGIN)
                                           ; SOURCE LINE # 508
                                           ; SOURCE LINE # 523
0000 75A510            MOV     P1MDOUT,#010H
                                           ; SOURCE LINE # 543
C51 COMPILER V9.53.0.0   INITDEVICE                                                        12/28/2017 17:13:20 PAGE 17  

0003 75D503            MOV     P1SKIP,#03H
                                           ; SOURCE LINE # 555
0006 22                RET     
             ; FUNCTION PORTS_1_enter_DefaultMode_from_RESET (END)

             ; FUNCTION TIMER16_3_enter_DefaultMode_from_RESET (BEGIN)
                                           ; SOURCE LINE # 557
                                           ; SOURCE LINE # 561
0000 E591              MOV     A,TMR3CN0
0002 5404              ANL     A,#04H
;---- Variable 'TMR3CN0_TR3_save' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 563
0004 5391FB            ANL     TMR3CN0,#0FBH
                                           ; SOURCE LINE # 582
0007 759338            MOV     TMR3RLH,#038H
                                           ; SOURCE LINE # 589
000A 75929E            MOV     TMR3RLL,#09EH
                                           ; SOURCE LINE # 596
000D 439104            ORL     TMR3CN0,#04H
                                           ; SOURCE LINE # 601
0010 4291              ORL     TMR3CN0,A
                                           ; SOURCE LINE # 604
0012 22                RET     
             ; FUNCTION TIMER16_3_enter_DefaultMode_from_RESET (END)

             ; FUNCTION SMBUS_0_enter_DefaultMode_from_RESET (BEGIN)
                                           ; SOURCE LINE # 606
                                           ; SOURCE LINE # 631
0000 53C1FC            ANL     SMB0CF,#0FCH
                                           ; SOURCE LINE # 632
0003 43C1DD            ORL     SMB0CF,#0DDH
                                           ; SOURCE LINE # 637
0006 22                RET     
             ; FUNCTION SMBUS_0_enter_DefaultMode_from_RESET (END)

             ; FUNCTION UARTE_1_enter_DefaultMode_from_RESET (BEGIN)
                                           ; SOURCE LINE # 639
                                           ; SOURCE LINE # 645
0000 75A720            MOV     SFRPAGE,#020H
                                           ; SOURCE LINE # 646
0003 759443            MOV     SBCON1,#043H
                                           ; SOURCE LINE # 659
0006 7596FF            MOV     SBRLH1,#0FFH
                                           ; SOURCE LINE # 666
0009 759596            MOV     SBRLL1,#096H
                                           ; SOURCE LINE # 676
000C 43C810            ORL     SCON1,#010H
                                           ; SOURCE LINE # 682
000F 22                RET     
             ; FUNCTION UARTE_1_enter_DefaultMode_from_RESET (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    266    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----       1
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
C51 COMPILER V9.53.0.0   INITDEVICE                                                        12/28/2017 17:13:20 PAGE 18  

   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
