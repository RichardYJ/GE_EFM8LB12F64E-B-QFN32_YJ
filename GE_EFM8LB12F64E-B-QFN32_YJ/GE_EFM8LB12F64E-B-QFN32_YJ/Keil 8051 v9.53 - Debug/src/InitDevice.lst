C51 COMPILER V9.53.0.0   INITDEVICE                                                        12/30/2017 18:16:03 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE INITDEVICE
OBJECT MODULE PLACED IN .\src\InitDevice.OBJ
COMPILER INVOKED BY: c:\SiliconLabs\SimplicityStudio\v4\developer\toolchains\keil_8051\9.53\BIN\C51.exe D:\WorkSpace\MyC
                    -ode\GE_EFM8LB12F64E-B-QFN32_YJ\GE_EFM8LB12F64E-B-QFN32_YJ\src\InitDevice.c OMF2 SMALL DEBUG OBJECTEXTEND ROM(LARGE) WARN
                    -INGLEVEL(2) FLOATFUZZY(3) OPTIMIZE(8,SPEED) DEFINE(DEBUG=1) INTVECTOR(0X0000) INTPROMOTE INCDIR(D:\WorkSpace\MyCode\GE_E
                    -FM8LB12F64E-B-QFN32_YJ\GE_EFM8LB12F64E-B-QFN32_YJ\inc;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.1.1//Dev
                    -ice/shared/si8051base;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.1.1//Device/EFM8LB1/inc) PRINT(.\src\Ini
                    -tDevice.lst) COND PAGEWIDTH(120) PAGELENGTH(65) OBJECT(.\src\InitDevice.OBJ)

line level    source

   1          //=========================================================
   2          // src/InitDevice.c: generated by Hardware Configurator
   3          //
   4          // This file will be regenerated when saving a document.
   5          // leave the sections inside the "$[...]" comment tags alone
   6          // or they will be overwritten!!
   7          //=========================================================
   8          
   9          // USER INCLUDES
  10          #include <SI_EFM8LB1_Register_Enums.h>
  11          #include "InitDevice.h"
  12          
  13          // USER PROTOTYPES
  14          // USER FUNCTIONS
  15          
  16          // $[Library Includes]
  17          // [Library Includes]$
  18          
  19          //==============================================================================
  20          // enter_DefaultMode_from_RESET
  21          //==============================================================================
  22          extern void enter_BusFreeMode_from_RESET(void) {
  23   1              // $[Config Calls]
  24   1              // Save the SFRPAGE
  25   1              uint8_t SFRPAGE_save = SFRPAGE;
  26   1              CLOCK_0_enter_BusFreeMode_from_RESET();
  27   1              // Restore the SFRPAGE
  28   1              SFRPAGE = SFRPAGE_save;
  29   1              // [Config Calls]$
  30   1      
  31   1      }
  32          
  33          //================================================================================
  34          // PORTS_2_enter_BusFreeMode_from_RESET
  35          //================================================================================
  36          extern void PORTS_2_enter_BusFreeMode_from_RESET(void) {
  37   1              // $[P2 - Port 2 Pin Latch]
  38   1              // [P2 - Port 2 Pin Latch]$
  39   1      
  40   1              // $[P2MDOUT - Port 2 Output Mode]
  41   1              /***********************************************************************
  42   1               - P2.0 output is open-drain
  43   1               - P2.1 output is open-drain
  44   1               - P2.2 output is open-drain
  45   1               - P2.3 output is push-pull
  46   1               - P2.4 output is open-drain
  47   1               - P2.5 output is open-drain
  48   1               - P2.6 output is open-drain
  49   1               ***********************************************************************/
  50   1              SFRPAGE = 0x00;
  51   1              P2MDOUT = P2MDOUT_B0__OPEN_DRAIN | P2MDOUT_B1__OPEN_DRAIN
C51 COMPILER V9.53.0.0   INITDEVICE                                                        12/30/2017 18:16:03 PAGE 2   

  52   1                              | P2MDOUT_B2__OPEN_DRAIN | P2MDOUT_B3__PUSH_PULL
  53   1                              | P2MDOUT_B4__OPEN_DRAIN | P2MDOUT_B5__OPEN_DRAIN
  54   1                              | P2MDOUT_B6__OPEN_DRAIN;
  55   1              // [P2MDOUT - Port 2 Output Mode]$
  56   1      
  57   1              // $[P2MDIN - Port 2 Input Mode]
  58   1              // [P2MDIN - Port 2 Input Mode]$
  59   1      
  60   1              // $[P2SKIP - Port 2 Skip]
  61   1              /***********************************************************************
  62   1               - P2.0 pin is not skipped by the crossbar
  63   1               - P2.1 pin is not skipped by the crossbar
  64   1               - P2.2 pin is not skipped by the crossbar
  65   1               - P2.3 pin is skipped by the crossbar
  66   1               ***********************************************************************/
  67   1              SFRPAGE = 0x20;
  68   1              P2SKIP = P2SKIP_B0__NOT_SKIPPED | P2SKIP_B1__NOT_SKIPPED
  69   1                              | P2SKIP_B2__NOT_SKIPPED | P2SKIP_B3__SKIPPED;
  70   1              // [P2SKIP - Port 2 Skip]$
  71   1      
  72   1              // $[P2MASK - Port 2 Mask]
  73   1              // [P2MASK - Port 2 Mask]$
  74   1      
  75   1              // $[P2MAT - Port 2 Match]
  76   1              // [P2MAT - Port 2 Match]$
  77   1      
  78   1      }
  79          
  80          //================================================================================
  81          // PBCFG_0_enter_BusFreeMode_from_RESET
  82          //================================================================================
  83          extern void PBCFG_0_enter_BusFreeMode_from_RESET(void) {
  84   1              // $[XBR2 - Port I/O Crossbar 2]
  85   1              // [XBR2 - Port I/O Crossbar 2]$
  86   1      
  87   1              // $[PRTDRV - Port Drive Strength]
  88   1              // [PRTDRV - Port Drive Strength]$
  89   1      
  90   1              // $[XBR0 - Port I/O Crossbar 0]
  91   1              // [XBR0 - Port I/O Crossbar 0]$
  92   1      
  93   1              // $[XBR1 - Port I/O Crossbar 1]
  94   1              // [XBR1 - Port I/O Crossbar 1]$
  95   1      
  96   1      }
  97          
  98          //================================================================================
  99          // CIP51_0_enter_BusFreeMode_from_RESET
 100          //================================================================================
 101          extern void CIP51_0_enter_BusFreeMode_from_RESET(void) {
 102   1              // $[PFE0CN - Prefetch Engine Control]
 103   1              // [PFE0CN - Prefetch Engine Control]$
 104   1      
 105   1      }
 106          
 107          //================================================================================
 108          // CLOCK_0_enter_BusFreeMode_from_RESET
 109          //================================================================================
 110          extern void CLOCK_0_enter_BusFreeMode_from_RESET(void) {
 111   1              // $[HFOSC1 Setup]
 112   1              // [HFOSC1 Setup]$
 113   1      
 114   1              // $[CLKSEL - Clock Select]
C51 COMPILER V9.53.0.0   INITDEVICE                                                        12/30/2017 18:16:03 PAGE 3   

 115   1              /***********************************************************************
 116   1               - Clock derived from the Internal High Frequency Oscillator 0
 117   1               - SYSCLK is equal to selected clock source divided by 1
 118   1               ***********************************************************************/
 119   1              SFRPAGE = 0x00;
 120   1              CLKSEL = CLKSEL_CLKSL__HFOSC0 | CLKSEL_CLKDIV__SYSCLK_DIV_1;
 121   1              while ((CLKSEL & CLKSEL_DIVRDY__BMASK) == CLKSEL_DIVRDY__NOT_READY)
 122   1                      ;
 123   1              // [CLKSEL - Clock Select]$
 124   1      
 125   1      }
 126          
 127          extern void enter_DefaultMode_from_BusFreeMode(void) {
 128   1              // $[Config Calls]
 129   1              // Save the SFRPAGE
 130   1              uint8_t SFRPAGE_save = SFRPAGE;
 131   1              WDT_0_enter_DefaultMode_from_BusFreeMode();
 132   1              PORTS_0_enter_DefaultMode_from_BusFreeMode();
 133   1              PORTS_1_enter_DefaultMode_from_BusFreeMode();
 134   1              PBCFG_0_enter_DefaultMode_from_BusFreeMode();
 135   1              TIMER01_0_enter_DefaultMode_from_BusFreeMode();
 136   1              TIMER16_3_enter_DefaultMode_from_BusFreeMode();
 137   1              TIMER_SETUP_0_enter_DefaultMode_from_BusFreeMode();
 138   1              SMBUS_0_enter_DefaultMode_from_BusFreeMode();
 139   1              UARTE_1_enter_DefaultMode_from_BusFreeMode();
 140   1              INTERRUPT_0_enter_DefaultMode_from_BusFreeMode();
 141   1              // Restore the SFRPAGE
 142   1              SFRPAGE = SFRPAGE_save;
 143   1              // [Config Calls]$
 144   1      
 145   1      }
 146          
 147          extern void WDT_0_enter_DefaultMode_from_BusFreeMode(void) {
 148   1              // $[WDTCN - Watchdog Timer Control]
 149   1              SFRPAGE = 0x00;
 150   1              //Disable Watchdog with key sequence
 151   1              WDTCN = 0xDE; //First key
 152   1              WDTCN = 0xAD; //Second key
 153   1              // [WDTCN - Watchdog Timer Control]$
 154   1      
 155   1      }
 156          
 157          extern void PORTS_0_enter_DefaultMode_from_BusFreeMode(void) {
 158   1              // $[P0 - Port 0 Pin Latch]
 159   1              // [P0 - Port 0 Pin Latch]$
 160   1      
 161   1              // $[P0MDOUT - Port 0 Output Mode]
 162   1              // [P0MDOUT - Port 0 Output Mode]$
 163   1      
 164   1              // $[P0MDIN - Port 0 Input Mode]
 165   1              // [P0MDIN - Port 0 Input Mode]$
 166   1      
 167   1              // $[P0SKIP - Port 0 Skip]
 168   1              /***********************************************************************
 169   1               - P0.0 pin is skipped by the crossbar
 170   1               - P0.1 pin is skipped by the crossbar
 171   1               - P0.2 pin is skipped by the crossbar
 172   1               - P0.3 pin is skipped by the crossbar
 173   1               - P0.4 pin is skipped by the crossbar
 174   1               - P0.5 pin is skipped by the crossbar
 175   1               - P0.6 pin is skipped by the crossbar
 176   1               - P0.7 pin is skipped by the crossbar
 177   1               ***********************************************************************/
C51 COMPILER V9.53.0.0   INITDEVICE                                                        12/30/2017 18:16:03 PAGE 4   

 178   1              P0SKIP = P0SKIP_B0__SKIPPED | P0SKIP_B1__SKIPPED | P0SKIP_B2__SKIPPED
 179   1                              | P0SKIP_B3__SKIPPED | P0SKIP_B4__SKIPPED | P0SKIP_B5__SKIPPED
 180   1                              | P0SKIP_B6__SKIPPED | P0SKIP_B7__SKIPPED;
 181   1              // [P0SKIP - Port 0 Skip]$
 182   1      
 183   1              // $[P0MASK - Port 0 Mask]
 184   1              // [P0MASK - Port 0 Mask]$
 185   1      
 186   1              // $[P0MAT - Port 0 Match]
 187   1              // [P0MAT - Port 0 Match]$
 188   1      
 189   1      }
 190          
 191          extern void PORTS_1_enter_DefaultMode_from_BusFreeMode(void) {
 192   1              // $[P1 - Port 1 Pin Latch]
 193   1              // [P1 - Port 1 Pin Latch]$
 194   1      
 195   1              // $[P1MDOUT - Port 1 Output Mode]
 196   1              /***********************************************************************
 197   1               - P1.0 output is open-drain
 198   1               - P1.1 output is open-drain
 199   1               - P1.2 output is open-drain
 200   1               - P1.3 output is open-drain
 201   1               - P1.4 output is push-pull
 202   1               - P1.5 output is open-drain
 203   1               - P1.6 output is open-drain
 204   1               - P1.7 output is open-drain
 205   1               ***********************************************************************/
 206   1              P1MDOUT = P1MDOUT_B0__OPEN_DRAIN | P1MDOUT_B1__OPEN_DRAIN
 207   1                              | P1MDOUT_B2__OPEN_DRAIN | P1MDOUT_B3__OPEN_DRAIN
 208   1                              | P1MDOUT_B4__PUSH_PULL | P1MDOUT_B5__OPEN_DRAIN
 209   1                              | P1MDOUT_B6__OPEN_DRAIN | P1MDOUT_B7__OPEN_DRAIN;
 210   1              // [P1MDOUT - Port 1 Output Mode]$
 211   1      
 212   1              // $[P1MDIN - Port 1 Input Mode]
 213   1              // [P1MDIN - Port 1 Input Mode]$
 214   1      
 215   1              // $[P1SKIP - Port 1 Skip]
 216   1              /***********************************************************************
 217   1               - P1.0 pin is skipped by the crossbar
 218   1               - P1.1 pin is skipped by the crossbar
 219   1               - P1.2 pin is not skipped by the crossbar
 220   1               - P1.3 pin is not skipped by the crossbar
 221   1               - P1.4 pin is not skipped by the crossbar
 222   1               - P1.5 pin is not skipped by the crossbar
 223   1               - P1.6 pin is not skipped by the crossbar
 224   1               - P1.7 pin is not skipped by the crossbar
 225   1               ***********************************************************************/
 226   1              P1SKIP = P1SKIP_B0__SKIPPED | P1SKIP_B1__SKIPPED | P1SKIP_B2__NOT_SKIPPED
 227   1                              | P1SKIP_B3__NOT_SKIPPED | P1SKIP_B4__NOT_SKIPPED
 228   1                              | P1SKIP_B5__NOT_SKIPPED | P1SKIP_B6__NOT_SKIPPED
 229   1                              | P1SKIP_B7__NOT_SKIPPED;
 230   1              // [P1SKIP - Port 1 Skip]$
 231   1      
 232   1              // $[P1MASK - Port 1 Mask]
 233   1              // [P1MASK - Port 1 Mask]$
 234   1      
 235   1              // $[P1MAT - Port 1 Match]
 236   1              // [P1MAT - Port 1 Match]$
 237   1      
 238   1      }
 239          
 240          extern void PBCFG_0_enter_DefaultMode_from_BusFreeMode(void) {
C51 COMPILER V9.53.0.0   INITDEVICE                                                        12/30/2017 18:16:03 PAGE 5   

 241   1              // $[XBR2 - Port I/O Crossbar 2]
 242   1              /***********************************************************************
 243   1               - Weak Pullups enabled 
 244   1               - Crossbar enabled
 245   1               - UART1 TX1 RX1 routed to Port pins
 246   1               - UART1 RTS1 unavailable at Port pin
 247   1               - UART1 CTS1 unavailable at Port pin
 248   1               ***********************************************************************/
 249   1              XBR2 = XBR2_WEAKPUD__PULL_UPS_ENABLED | XBR2_XBARE__ENABLED
 250   1                              | XBR2_URT1E__ENABLED | XBR2_URT1RTSE__DISABLED
 251   1                              | XBR2_URT1CTSE__DISABLED;
 252   1              // [XBR2 - Port I/O Crossbar 2]$
 253   1      
 254   1              // $[PRTDRV - Port Drive Strength]
 255   1              // [PRTDRV - Port Drive Strength]$
 256   1      
 257   1              // $[XBR0 - Port I/O Crossbar 0]
 258   1              /***********************************************************************
 259   1               - UART0 I/O unavailable at Port pin
 260   1               - SPI I/O unavailable at Port pins
 261   1               - SMBus 0 I/O routed to Port pins
 262   1               - CP0 unavailable at Port pin
 263   1               - Asynchronous CP0 unavailable at Port pin
 264   1               - CP1 unavailable at Port pin
 265   1               - Asynchronous CP1 unavailable at Port pin
 266   1               - SYSCLK unavailable at Port pin
 267   1               ***********************************************************************/
 268   1              XBR0 = XBR0_URT0E__DISABLED | XBR0_SPI0E__DISABLED | XBR0_SMB0E__ENABLED
 269   1                              | XBR0_CP0E__DISABLED | XBR0_CP0AE__DISABLED | XBR0_CP1E__DISABLED
 270   1                              | XBR0_CP1AE__DISABLED | XBR0_SYSCKE__DISABLED;
 271   1              // [XBR0 - Port I/O Crossbar 0]$
 272   1      
 273   1              // $[XBR1 - Port I/O Crossbar 1]
 274   1              // [XBR1 - Port I/O Crossbar 1]$
 275   1      
 276   1      }
 277          
 278          extern void TIMER01_0_enter_DefaultMode_from_BusFreeMode(void) {
 279   1              // $[Timer Initialization]
 280   1              //Save Timer Configuration
 281   1              uint8_t TCON_save;
 282   1              TCON_save = TCON;
 283   1              //Stop Timers
 284   1              TCON &= ~TCON_TR0__BMASK & ~TCON_TR1__BMASK;
 285   1      
 286   1              // [Timer Initialization]$
 287   1      
 288   1              // $[TH0 - Timer 0 High Byte]
 289   1              /***********************************************************************
 290   1               - Timer 0 High Byte = 0x38
 291   1               ***********************************************************************/
 292   1              TH0 = (0x38 << TH0_TH0__SHIFT);
 293   1              // [TH0 - Timer 0 High Byte]$
 294   1      
 295   1              // $[TL0 - Timer 0 Low Byte]
 296   1              /***********************************************************************
 297   1               - Timer 0 Low Byte = 0x13
 298   1               ***********************************************************************/
 299   1              TL0 = (0x13 << TL0_TL0__SHIFT);
 300   1              // [TL0 - Timer 0 Low Byte]$
 301   1      
 302   1              // $[TH1 - Timer 1 High Byte]
 303   1              /***********************************************************************
C51 COMPILER V9.53.0.0   INITDEVICE                                                        12/30/2017 18:16:03 PAGE 6   

 304   1               - Timer 1 High Byte = 0x34
 305   1               ***********************************************************************/
 306   1              TH1 = (0x34 << TH1_TH1__SHIFT);
 307   1              // [TH1 - Timer 1 High Byte]$
 308   1      
 309   1              // $[TL1 - Timer 1 Low Byte]
 310   1              /***********************************************************************
 311   1               - Timer 1 Low Byte = 0x34
 312   1               ***********************************************************************/
 313   1              TL1 = (0x34 << TL1_TL1__SHIFT);
 314   1              // [TL1 - Timer 1 Low Byte]$
 315   1      
 316   1              // $[Timer Restoration]
 317   1              //Restore Timer Configuration
 318   1              TCON |= (TCON_save & TCON_TR0__BMASK) | (TCON_save & TCON_TR1__BMASK);
 319   1      
 320   1              // [Timer Restoration]$
 321   1      
 322   1      }
 323          
 324          extern void TIMER16_3_enter_DefaultMode_from_BusFreeMode(void) {
 325   1              // $[Timer Initialization]
 326   1              // Save Timer Configuration
 327   1              uint8_t TMR3CN0_TR3_save;
 328   1              TMR3CN0_TR3_save = TMR3CN0 & TMR3CN0_TR3__BMASK;
 329   1              // Stop Timer
 330   1              TMR3CN0 &= ~(TMR3CN0_TR3__BMASK);
 331   1              // [Timer Initialization]$
 332   1      
 333   1              // $[TMR3CN1 - Timer 3 Control 1]
 334   1              // [TMR3CN1 - Timer 3 Control 1]$
 335   1      
 336   1              // $[TMR3CN0 - Timer 3 Control]
 337   1              // [TMR3CN0 - Timer 3 Control]$
 338   1      
 339   1              // $[TMR3H - Timer 3 High Byte]
 340   1              // [TMR3H - Timer 3 High Byte]$
 341   1      
 342   1              // $[TMR3L - Timer 3 Low Byte]
 343   1              // [TMR3L - Timer 3 Low Byte]$
 344   1      
 345   1              // $[TMR3RLH - Timer 3 Reload High Byte]
 346   1              /***********************************************************************
 347   1               - Timer 3 Reload High Byte = 0x38
 348   1               ***********************************************************************/
 349   1              TMR3RLH = (0x38 << TMR3RLH_TMR3RLH__SHIFT);
 350   1              // [TMR3RLH - Timer 3 Reload High Byte]$
 351   1      
 352   1              // $[TMR3RLL - Timer 3 Reload Low Byte]
 353   1              /***********************************************************************
 354   1               - Timer 3 Reload Low Byte = 0x9E
 355   1               ***********************************************************************/
 356   1              TMR3RLL = (0x9E << TMR3RLL_TMR3RLL__SHIFT);
 357   1              // [TMR3RLL - Timer 3 Reload Low Byte]$
 358   1      
 359   1              // $[TMR3CN0]
 360   1              /***********************************************************************
 361   1               - Start Timer 3 running
 362   1               ***********************************************************************/
 363   1              TMR3CN0 |= TMR3CN0_TR3__RUN;
 364   1              // [TMR3CN0]$
 365   1      
 366   1              // $[Timer Restoration]
C51 COMPILER V9.53.0.0   INITDEVICE                                                        12/30/2017 18:16:03 PAGE 7   

 367   1              // Restore Timer Configuration
 368   1              TMR3CN0 |= TMR3CN0_TR3_save;
 369   1              // [Timer Restoration]$
 370   1      
 371   1      }
 372          
 373          extern void TIMER_SETUP_0_enter_DefaultMode_from_BusFreeMode(void) {
 374   1              // $[CKCON0 - Clock Control 0]
 375   1              /***********************************************************************
 376   1               - System clock divided by 4
 377   1               - Counter/Timer 0 uses the clock defined by the prescale field, SCA
 378   1               - Timer 2 high byte uses the clock defined by T2XCLK in TMR2CN0
 379   1               - Timer 2 low byte uses the clock defined by T2XCLK in TMR2CN0
 380   1               - Timer 3 high byte uses the clock defined by T3XCLK in TMR3CN0
 381   1               - Timer 3 low byte uses the clock defined by T3XCLK in TMR3CN0
 382   1               - Timer 1 uses the clock defined by the prescale field, SCA
 383   1               ***********************************************************************/
 384   1              CKCON0 = CKCON0_SCA__SYSCLK_DIV_4 | CKCON0_T0M__PRESCALE
 385   1                              | CKCON0_T2MH__EXTERNAL_CLOCK | CKCON0_T2ML__EXTERNAL_CLOCK
 386   1                              | CKCON0_T3MH__EXTERNAL_CLOCK | CKCON0_T3ML__EXTERNAL_CLOCK
 387   1                              | CKCON0_T1M__PRESCALE;
 388   1              // [CKCON0 - Clock Control 0]$
 389   1      
 390   1              // $[CKCON1 - Clock Control 1]
 391   1              // [CKCON1 - Clock Control 1]$
 392   1      
 393   1              // $[TMOD - Timer 0/1 Mode]
 394   1              /***********************************************************************
 395   1               - Mode 0, 13-bit Counter/Timer
 396   1               - Mode 2, 8-bit Counter/Timer with Auto-Reload
 397   1               - Timer Mode
 398   1               - Timer 0 enabled when TR0 = 1 irrespective of INT0 logic level
 399   1               - Timer Mode
 400   1               - Timer 1 enabled when TR1 = 1 irrespective of INT1 logic level
 401   1               ***********************************************************************/
 402   1              TMOD = TMOD_T0M__MODE0 | TMOD_T1M__MODE2 | TMOD_CT0__TIMER
 403   1                              | TMOD_GATE0__DISABLED | TMOD_CT1__TIMER | TMOD_GATE1__DISABLED;
 404   1              // [TMOD - Timer 0/1 Mode]$
 405   1      
 406   1              // $[TCON - Timer 0/1 Control]
 407   1              /***********************************************************************
 408   1               - Start Timer 1 running
 409   1               ***********************************************************************/
 410   1              TCON |= TCON_TR1__RUN;
 411   1              // [TCON - Timer 0/1 Control]$
 412   1      
 413   1      }
 414          
 415          extern void SMBUS_0_enter_DefaultMode_from_BusFreeMode(void) {
 416   1              // $[SMB0FCN0 - SMBus0 FIFO Control 0]
 417   1              // [SMB0FCN0 - SMBus0 FIFO Control 0]$
 418   1      
 419   1              // $[SMB0RXLN - SMBus0 Receive Length Counter]
 420   1              // [SMB0RXLN - SMBus0 Receive Length Counter]$
 421   1      
 422   1              // $[SMB0ADR - SMBus 0 Slave Address]
 423   1              // [SMB0ADR - SMBus 0 Slave Address]$
 424   1      
 425   1              // $[SMB0ADM - SMBus 0 Slave Address Mask]
 426   1              // [SMB0ADM - SMBus 0 Slave Address Mask]$
 427   1      
 428   1              // $[SMB0TC - SMBus 0 Timing and Pin Control]
 429   1              // [SMB0TC - SMBus 0 Timing and Pin Control]$
C51 COMPILER V9.53.0.0   INITDEVICE                                                        12/30/2017 18:16:03 PAGE 8   

 430   1      
 431   1              // $[SMB0CF - SMBus 0 Configuration]
 432   1              /***********************************************************************
 433   1               - Timer 1 Overflow
 434   1               - Slave states are inhibited
 435   1               - Enable the SMBus module
 436   1               - Enable bus free timeouts
 437   1               - Enable SCL low timeouts if Timer 3 RLFSEL is set appropriately
 438   1               - Enable SDA extended setup and hold times
 439   1               ***********************************************************************/
 440   1              SMB0CF &= ~SMB0CF_SMBCS__FMASK;
 441   1              SMB0CF |= SMB0CF_SMBCS__TIMER1 | SMB0CF_INH__SLAVE_DISABLED
 442   1                              | SMB0CF_ENSMB__ENABLED | SMB0CF_SMBFTE__FREE_TO_ENABLED
 443   1                              | SMB0CF_SMBTOE__SCL_TO_ENABLED | SMB0CF_EXTHOLD__ENABLED;
 444   1              // [SMB0CF - SMBus 0 Configuration]$
 445   1      
 446   1      }
 447          
 448          extern void INTERRUPT_0_enter_DefaultMode_from_BusFreeMode(void) {
 449   1              // $[EIE1 - Extended Interrupt Enable 1]
 450   1              /***********************************************************************
 451   1               - Disable ADC0 Conversion Complete interrupt
 452   1               - Disable ADC0 Window Comparison interrupt
 453   1               - Disable CP0 interrupts
 454   1               - Disable CP1 interrupts
 455   1               - Disable all Port Match interrupts
 456   1               - Disable all PCA0 interrupts
 457   1               - Enable interrupt requests generated by SMB0
 458   1               - Enable interrupt requests generated by the TF3L or TF3H flags
 459   1               ***********************************************************************/
 460   1              SFRPAGE = 0x00;
 461   1              EIE1 = EIE1_EADC0__DISABLED | EIE1_EWADC0__DISABLED | EIE1_ECP0__DISABLED
 462   1                              | EIE1_ECP1__DISABLED | EIE1_EMAT__DISABLED | EIE1_EPCA0__DISABLED
 463   1                              | EIE1_ESMB0__ENABLED | EIE1_ET3__ENABLED;
 464   1              // [EIE1 - Extended Interrupt Enable 1]$
 465   1      
 466   1              // $[EIE2 - Extended Interrupt Enable 2]
 467   1              // [EIE2 - Extended Interrupt Enable 2]$
 468   1      
 469   1              // $[EIP1H - Extended Interrupt Priority 1 High]
 470   1              // [EIP1H - Extended Interrupt Priority 1 High]$
 471   1      
 472   1              // $[EIP1 - Extended Interrupt Priority 1 Low]
 473   1              // [EIP1 - Extended Interrupt Priority 1 Low]$
 474   1      
 475   1              // $[EIP2 - Extended Interrupt Priority 2]
 476   1              // [EIP2 - Extended Interrupt Priority 2]$
 477   1      
 478   1              // $[EIP2H - Extended Interrupt Priority 2 High]
 479   1              // [EIP2H - Extended Interrupt Priority 2 High]$
 480   1      
 481   1              // $[IE - Interrupt Enable]
 482   1              /***********************************************************************
 483   1               - Enable each interrupt according to its individual mask setting
 484   1               - Disable external interrupt 0
 485   1               - Disable external interrupt 1
 486   1               - Disable all SPI0 interrupts
 487   1               - Disable all Timer 0 interrupt
 488   1               - Disable all Timer 1 interrupt
 489   1               - Disable Timer 2 interrupt
 490   1               - Disable UART0 interrupt
 491   1               ***********************************************************************/
 492   1              IE = IE_EA__ENABLED | IE_EX0__DISABLED | IE_EX1__DISABLED
C51 COMPILER V9.53.0.0   INITDEVICE                                                        12/30/2017 18:16:03 PAGE 9   

 493   1                              | IE_ESPI0__DISABLED | IE_ET0__DISABLED | IE_ET1__DISABLED
 494   1                              | IE_ET2__DISABLED | IE_ES0__DISABLED;
 495   1              // [IE - Interrupt Enable]$
 496   1      
 497   1              // $[IP - Interrupt Priority]
 498   1              // [IP - Interrupt Priority]$
 499   1      
 500   1              // $[IPH - Interrupt Priority High]
 501   1              // [IPH - Interrupt Priority High]$
 502   1      
 503   1      }
 504          
 505          extern void UARTE_1_enter_DefaultMode_from_BusFreeMode(void) {
 506   1              // $[SBCON1 - UART1 Baud Rate Generator Control]
 507   1              /***********************************************************************
 508   1               - Enable the baud rate generator
 509   1               - Prescaler = 1
 510   1               ***********************************************************************/
 511   1              SFRPAGE = 0x20;
 512   1              SBCON1 = SBCON1_BREN__ENABLED | SBCON1_BPS__DIV_BY_1;
 513   1              // [SBCON1 - UART1 Baud Rate Generator Control]$
 514   1      
 515   1              // $[SMOD1 - UART1 Mode]
 516   1              // [SMOD1 - UART1 Mode]$
 517   1      
 518   1              // $[UART1FCN0 - UART1 FIFO Control 0]
 519   1              // [UART1FCN0 - UART1 FIFO Control 0]$
 520   1      
 521   1              // $[SBRLH1 - UART1 Baud Rate Generator High Byte]
 522   1              /***********************************************************************
 523   1               - UART1 Baud Rate Reload High = 0xFF
 524   1               ***********************************************************************/
 525   1              SBRLH1 = (0xFF << SBRLH1_BRH__SHIFT);
 526   1              // [SBRLH1 - UART1 Baud Rate Generator High Byte]$
 527   1      
 528   1              // $[SBRLL1 - UART1 Baud Rate Generator Low Byte]
 529   1              /***********************************************************************
 530   1               - UART1 Baud Rate Reload Low = 0x96
 531   1               ***********************************************************************/
 532   1              SBRLL1 = (0x96 << SBRLL1_BRL__SHIFT);
 533   1              // [SBRLL1 - UART1 Baud Rate Generator Low Byte]$
 534   1      
 535   1              // $[UART1LIN - UART1 LIN Configuration]
 536   1              // [UART1LIN - UART1 LIN Configuration]$
 537   1      
 538   1              // $[SCON1 - UART1 Serial Port Control]
 539   1              /***********************************************************************
 540   1               - UART1 reception enabled
 541   1               ***********************************************************************/
 542   1              SCON1 |= SCON1_REN__RECEIVE_ENABLED;
 543   1              // [SCON1 - UART1 Serial Port Control]$
 544   1      
 545   1              // $[UART1FCN1 - UART1 FIFO Control 1]
 546   1              // [UART1FCN1 - UART1 FIFO Control 1]$
 547   1      
 548   1      }
 549          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    191    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
C51 COMPILER V9.53.0.0   INITDEVICE                                                        12/30/2017 18:16:03 PAGE 10  

   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
