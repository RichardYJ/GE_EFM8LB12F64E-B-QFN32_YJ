C51 COMPILER V9.53.0.0   INITDEVICE                                                        01/17/2018 15:42:45 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE INITDEVICE
OBJECT MODULE PLACED IN .\src\InitDevice.OBJ
COMPILER INVOKED BY: c:\SiliconLabs\SimplicityStudio\v4\developer\toolchains\keil_8051\9.53\BIN\C51.exe D:\WorkSpace\MyC
                    -ode\GE_EFM8LB12F64E-B-QFN32_YJ\GE_EFM8LB12F64E-B-QFN32_YJ\src\InitDevice.c OMF2 LARGE DEBUG OBJECTEXTEND ROM(LARGE) WARN
                    -INGLEVEL(2) FLOATFUZZY(3) OPTIMIZE(8,SPEED) DEFINE(DEBUG=1) INTVECTOR(0X0000) INTPROMOTE INCDIR(D:\WorkSpace\MyCode\GE_E
                    -FM8LB12F64E-B-QFN32_YJ\GE_EFM8LB12F64E-B-QFN32_YJ\inc;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.1.1//Dev
                    -ice/shared/si8051base;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.1.1//Device/EFM8LB1/inc) PRINT(.\src\Ini
                    -tDevice.lst) COND PAGEWIDTH(120) PAGELENGTH(65) OBJECT(.\src\InitDevice.OBJ)

line level    source

   1          //=========================================================
   2          // src/InitDevice.c: generated by Hardware Configurator
   3          //
   4          // This file will be regenerated when saving a document.
   5          // leave the sections inside the "$[...]" comment tags alone
   6          // or they will be overwritten!!
   7          //=========================================================
   8          
   9          // USER INCLUDES
  10          #include <SI_EFM8LB1_Register_Enums.h>
  11          #include "InitDevice.h"
  12          
  13          // USER PROTOTYPES
  14          // USER FUNCTIONS
  15          
  16          // $[Library Includes]
  17          // [Library Includes]$
  18          
  19          //==============================================================================
  20          // enter_DefaultMode_from_RESET
  21          //==============================================================================
  22          extern void enter_BusFreeMode_from_RESET(void) {
  23   1              // $[Config Calls]
  24   1              // Save the SFRPAGE
  25   1              uint8_t SFRPAGE_save = SFRPAGE;
  26   1              CLOCK_0_enter_BusFreeMode_from_RESET();
  27   1              // Restore the SFRPAGE
  28   1              SFRPAGE = SFRPAGE_save;
  29   1              // [Config Calls]$
  30   1      }
  31          
  32          //================================================================================
  33          // PORTS_2_enter_BusFreeMode_from_RESET
  34          //================================================================================
  35          extern void PORTS_2_enter_BusFreeMode_from_RESET(void) {
  36   1              // $[P2 - Port 2 Pin Latch]
  37   1              // [P2 - Port 2 Pin Latch]$
  38   1      
  39   1              // $[P2MDOUT - Port 2 Output Mode]
  40   1              /***********************************************************************
  41   1               - P2.0 output is open-drain
  42   1               - P2.1 output is open-drain
  43   1               - P2.2 output is open-drain
  44   1               - P2.3 output is push-pull
  45   1               - P2.4 output is open-drain
  46   1               - P2.5 output is open-drain
  47   1               - P2.6 output is open-drain
  48   1               ***********************************************************************/
  49   1              SFRPAGE = 0x00;
  50   1              P2MDOUT = P2MDOUT_B0__OPEN_DRAIN | P2MDOUT_B1__OPEN_DRAIN
  51   1                              | P2MDOUT_B2__OPEN_DRAIN | P2MDOUT_B3__PUSH_PULL
C51 COMPILER V9.53.0.0   INITDEVICE                                                        01/17/2018 15:42:45 PAGE 2   

  52   1                              | P2MDOUT_B4__OPEN_DRAIN | P2MDOUT_B5__OPEN_DRAIN
  53   1                              | P2MDOUT_B6__OPEN_DRAIN;
  54   1              // [P2MDOUT - Port 2 Output Mode]$
  55   1      
  56   1              // $[P2MDIN - Port 2 Input Mode]
  57   1              // [P2MDIN - Port 2 Input Mode]$
  58   1      
  59   1              // $[P2SKIP - Port 2 Skip]
  60   1              /***********************************************************************
  61   1               - P2.0 pin is not skipped by the crossbar
  62   1               - P2.1 pin is not skipped by the crossbar
  63   1               - P2.2 pin is not skipped by the crossbar
  64   1               - P2.3 pin is skipped by the crossbar
  65   1               ***********************************************************************/
  66   1              SFRPAGE = 0x20;
  67   1              P2SKIP = P2SKIP_B0__NOT_SKIPPED | P2SKIP_B1__NOT_SKIPPED
  68   1                              | P2SKIP_B2__NOT_SKIPPED | P2SKIP_B3__SKIPPED;
  69   1              // [P2SKIP - Port 2 Skip]$
  70   1      
  71   1              // $[P2MASK - Port 2 Mask]
  72   1              // [P2MASK - Port 2 Mask]$
  73   1      
  74   1              // $[P2MAT - Port 2 Match]
  75   1              // [P2MAT - Port 2 Match]$
  76   1      
  77   1      }
  78          
  79          //================================================================================
  80          // PBCFG_0_enter_BusFreeMode_from_RESET
  81          //================================================================================
  82          extern void PBCFG_0_enter_BusFreeMode_from_RESET(void) {
  83   1              // $[XBR2 - Port I/O Crossbar 2]
  84   1              // [XBR2 - Port I/O Crossbar 2]$
  85   1      
  86   1              // $[PRTDRV - Port Drive Strength]
  87   1              // [PRTDRV - Port Drive Strength]$
  88   1      
  89   1              // $[XBR0 - Port I/O Crossbar 0]
  90   1              // [XBR0 - Port I/O Crossbar 0]$
  91   1      
  92   1              // $[XBR1 - Port I/O Crossbar 1]
  93   1              // [XBR1 - Port I/O Crossbar 1]$
  94   1      
  95   1      }
  96          
  97          //================================================================================
  98          // CIP51_0_enter_BusFreeMode_from_RESET
  99          //================================================================================
 100          extern void CIP51_0_enter_BusFreeMode_from_RESET(void) {
 101   1              // $[PFE0CN - Prefetch Engine Control]
 102   1              // [PFE0CN - Prefetch Engine Control]$
 103   1      
 104   1      }
 105          
 106          //================================================================================
 107          // CLOCK_0_enter_BusFreeMode_from_RESET
 108          //================================================================================
 109          extern void CLOCK_0_enter_BusFreeMode_from_RESET(void) {
 110   1              // $[HFOSC1 Setup]
 111   1              // [HFOSC1 Setup]$
 112   1      
 113   1              // $[CLKSEL - Clock Select]
 114   1              /***********************************************************************
C51 COMPILER V9.53.0.0   INITDEVICE                                                        01/17/2018 15:42:45 PAGE 3   

 115   1               - Clock derived from the Internal High Frequency Oscillator 0
 116   1               - SYSCLK is equal to selected clock source divided by 1
 117   1               ***********************************************************************/
 118   1              SFRPAGE = 0x00;
 119   1              CLKSEL = CLKSEL_CLKSL__HFOSC0 | CLKSEL_CLKDIV__SYSCLK_DIV_1;
 120   1              while ((CLKSEL & CLKSEL_DIVRDY__BMASK) == CLKSEL_DIVRDY__NOT_READY)
 121   1                      ;
 122   1              // [CLKSEL - Clock Select]$
 123   1      
 124   1      }
 125          
 126          extern void enter_DefaultMode_from_BusFreeMode(void) {
 127   1              // $[Config Calls]
 128   1              // Save the SFRPAGE
 129   1              uint8_t SFRPAGE_save = SFRPAGE;
 130   1              WDT_0_enter_DefaultMode_from_BusFreeMode();
 131   1              PORTS_0_enter_DefaultMode_from_BusFreeMode();
 132   1              PORTS_1_enter_DefaultMode_from_BusFreeMode();
 133   1              PBCFG_0_enter_DefaultMode_from_BusFreeMode();
 134   1              TIMER01_0_enter_DefaultMode_from_BusFreeMode();
 135   1              TIMER16_3_enter_DefaultMode_from_BusFreeMode();
 136   1              TIMER16_4_enter_DefaultMode_from_BusFreeMode();
 137   1              TIMER_SETUP_0_enter_DefaultMode_from_BusFreeMode();
 138   1              SMBUS_0_enter_DefaultMode_from_BusFreeMode();
 139   1              UARTE_1_enter_DefaultMode_from_BusFreeMode();
 140   1              I2CSLAVE_0_enter_DefaultMode_from_BusFreeMode();
 141   1              INTERRUPT_0_enter_DefaultMode_from_BusFreeMode();
 142   1              // Restore the SFRPAGE
 143   1              SFRPAGE = SFRPAGE_save;
 144   1              // [Config Calls]$
 145   1      
 146   1      }
 147          
 148          extern void WDT_0_enter_DefaultMode_from_BusFreeMode(void) {
 149   1              // $[WDTCN - Watchdog Timer Control]
 150   1              SFRPAGE = 0x00;
 151   1              //Disable Watchdog with key sequence
 152   1              WDTCN = 0xDE; //First key
 153   1              WDTCN = 0xAD; //Second key
 154   1              // [WDTCN - Watchdog Timer Control]$
 155   1      
 156   1      }
 157          
 158          extern void PORTS_0_enter_DefaultMode_from_BusFreeMode(void) {
 159   1              // $[P0 - Port 0 Pin Latch]
 160   1              // [P0 - Port 0 Pin Latch]$
 161   1      
 162   1              // $[P0MDOUT - Port 0 Output Mode]
 163   1              // [P0MDOUT - Port 0 Output Mode]$
 164   1      
 165   1              // $[P0MDIN - Port 0 Input Mode]
 166   1              // [P0MDIN - Port 0 Input Mode]$
 167   1      
 168   1              // $[P0SKIP - Port 0 Skip]
 169   1              /***********************************************************************
 170   1               - P0.0 pin is skipped by the crossbar
 171   1               - P0.1 pin is skipped by the crossbar
 172   1               - P0.2 pin is skipped by the crossbar
 173   1               - P0.3 pin is skipped by the crossbar
 174   1               - P0.4 pin is skipped by the crossbar
 175   1               - P0.5 pin is skipped by the crossbar
 176   1               - P0.6 pin is skipped by the crossbar
 177   1               - P0.7 pin is skipped by the crossbar
C51 COMPILER V9.53.0.0   INITDEVICE                                                        01/17/2018 15:42:45 PAGE 4   

 178   1               ***********************************************************************/
 179   1              P0SKIP = P0SKIP_B0__SKIPPED | P0SKIP_B1__SKIPPED | P0SKIP_B2__SKIPPED
 180   1                              | P0SKIP_B3__SKIPPED | P0SKIP_B4__SKIPPED | P0SKIP_B5__SKIPPED
 181   1                              | P0SKIP_B6__SKIPPED | P0SKIP_B7__SKIPPED;
 182   1              // [P0SKIP - Port 0 Skip]$
 183   1      
 184   1              // $[P0MASK - Port 0 Mask]
 185   1              // [P0MASK - Port 0 Mask]$
 186   1      
 187   1              // $[P0MAT - Port 0 Match]
 188   1              // [P0MAT - Port 0 Match]$
 189   1      
 190   1      }
 191          
 192          extern void PORTS_1_enter_DefaultMode_from_BusFreeMode(void) {
 193   1              // $[P1 - Port 1 Pin Latch]
 194   1              // [P1 - Port 1 Pin Latch]$
 195   1      
 196   1              // $[P1MDOUT - Port 1 Output Mode]
 197   1              /***********************************************************************
 198   1               - P1.0 output is open-drain
 199   1               - P1.1 output is open-drain
 200   1               - P1.2 output is open-drain
 201   1               - P1.3 output is open-drain
 202   1               - P1.4 output is push-pull
 203   1               - P1.5 output is open-drain
 204   1               - P1.6 output is push-pull
 205   1               - P1.7 output is open-drain
 206   1               ***********************************************************************/
 207   1              P1MDOUT = P1MDOUT_B0__OPEN_DRAIN | P1MDOUT_B1__OPEN_DRAIN
 208   1                              | P1MDOUT_B2__OPEN_DRAIN | P1MDOUT_B3__OPEN_DRAIN
 209   1                              | P1MDOUT_B4__PUSH_PULL | P1MDOUT_B5__OPEN_DRAIN
 210   1                              | P1MDOUT_B6__PUSH_PULL | P1MDOUT_B7__OPEN_DRAIN;
 211   1              // [P1MDOUT - Port 1 Output Mode]$
 212   1      
 213   1              // $[P1MDIN - Port 1 Input Mode]
 214   1              // [P1MDIN - Port 1 Input Mode]$
 215   1      
 216   1              // $[P1SKIP - Port 1 Skip]
 217   1              /***********************************************************************
 218   1               - P1.0 pin is skipped by the crossbar
 219   1               - P1.1 pin is skipped by the crossbar
 220   1               - P1.2 pin is not skipped by the crossbar
 221   1               - P1.3 pin is not skipped by the crossbar
 222   1               - P1.4 pin is not skipped by the crossbar
 223   1               - P1.5 pin is not skipped by the crossbar
 224   1               - P1.6 pin is not skipped by the crossbar
 225   1               - P1.7 pin is not skipped by the crossbar
 226   1               ***********************************************************************/
 227   1              P1SKIP = P1SKIP_B0__SKIPPED | P1SKIP_B1__SKIPPED | P1SKIP_B2__NOT_SKIPPED
 228   1                              | P1SKIP_B3__NOT_SKIPPED | P1SKIP_B4__NOT_SKIPPED
 229   1                              | P1SKIP_B5__NOT_SKIPPED | P1SKIP_B6__NOT_SKIPPED
 230   1                              | P1SKIP_B7__NOT_SKIPPED;
 231   1              // [P1SKIP - Port 1 Skip]$
 232   1      
 233   1              // $[P1MASK - Port 1 Mask]
 234   1              // [P1MASK - Port 1 Mask]$
 235   1      
 236   1              // $[P1MAT - Port 1 Match]
 237   1              // [P1MAT - Port 1 Match]$
 238   1      
 239   1      }
 240          
C51 COMPILER V9.53.0.0   INITDEVICE                                                        01/17/2018 15:42:45 PAGE 5   

 241          extern void PBCFG_0_enter_DefaultMode_from_BusFreeMode(void) {
 242   1              // $[XBR2 - Port I/O Crossbar 2]
 243   1              /***********************************************************************
 244   1               - Weak Pullups enabled 
 245   1               - Crossbar enabled
 246   1               - UART1 TX1 RX1 routed to Port pins
 247   1               - UART1 RTS1 unavailable at Port pin
 248   1               - UART1 CTS1 unavailable at Port pin
 249   1               ***********************************************************************/
 250   1              XBR2 = XBR2_WEAKPUD__PULL_UPS_ENABLED | XBR2_XBARE__ENABLED
 251   1                              | XBR2_URT1E__ENABLED | XBR2_URT1RTSE__DISABLED
 252   1                              | XBR2_URT1CTSE__DISABLED;
 253   1              // [XBR2 - Port I/O Crossbar 2]$
 254   1      
 255   1              // $[PRTDRV - Port Drive Strength]
 256   1              // [PRTDRV - Port Drive Strength]$
 257   1      
 258   1              // $[XBR0 - Port I/O Crossbar 0]
 259   1              /***********************************************************************
 260   1               - UART0 I/O unavailable at Port pin
 261   1               - SPI I/O unavailable at Port pins
 262   1               - SMBus 0 I/O routed to Port pins
 263   1               - CP0 unavailable at Port pin
 264   1               - Asynchronous CP0 unavailable at Port pin
 265   1               - CP1 unavailable at Port pin
 266   1               - Asynchronous CP1 unavailable at Port pin
 267   1               - SYSCLK unavailable at Port pin
 268   1               ***********************************************************************/
 269   1              XBR0 = XBR0_URT0E__DISABLED | XBR0_SPI0E__DISABLED | XBR0_SMB0E__ENABLED
 270   1                              | XBR0_CP0E__DISABLED | XBR0_CP0AE__DISABLED | XBR0_CP1E__DISABLED
 271   1                              | XBR0_CP1AE__DISABLED | XBR0_SYSCKE__DISABLED;
 272   1              // [XBR0 - Port I/O Crossbar 0]$
 273   1      
 274   1              // $[XBR1 - Port I/O Crossbar 1]
 275   1              // [XBR1 - Port I/O Crossbar 1]$
 276   1      
 277   1      }
 278          
 279          extern void TIMER01_0_enter_DefaultMode_from_BusFreeMode(void) {
 280   1              // $[Timer Initialization]
 281   1              //Save Timer Configuration
 282   1              uint8_t TCON_save;
 283   1              TCON_save = TCON;
 284   1              //Stop Timers
 285   1              TCON &= ~TCON_TR0__BMASK & ~TCON_TR1__BMASK;
 286   1      
 287   1              // [Timer Initialization]$
 288   1      
 289   1              // $[TH0 - Timer 0 High Byte]
 290   1              /***********************************************************************
 291   1               - Timer 0 High Byte = 0x38
 292   1               ***********************************************************************/
 293   1              TH0 = (0x38 << TH0_TH0__SHIFT);
 294   1              // [TH0 - Timer 0 High Byte]$
 295   1      
 296   1              // $[TL0 - Timer 0 Low Byte]
 297   1              /***********************************************************************
 298   1               - Timer 0 Low Byte = 0x13
 299   1               ***********************************************************************/
 300   1              TL0 = (0x13 << TL0_TL0__SHIFT);
 301   1              // [TL0 - Timer 0 Low Byte]$
 302   1      
 303   1              // $[TH1 - Timer 1 High Byte]
C51 COMPILER V9.53.0.0   INITDEVICE                                                        01/17/2018 15:42:45 PAGE 6   

 304   1              /***********************************************************************
 305   1               - Timer 1 High Byte = 0xFA
 306   1               ***********************************************************************/
 307   1              TH1 = (0xFA << TH1_TH1__SHIFT);
 308   1              // [TH1 - Timer 1 High Byte]$
 309   1      
 310   1              // $[TL1 - Timer 1 Low Byte]
 311   1              /***********************************************************************
 312   1               - Timer 1 Low Byte = 0x34
 313   1               ***********************************************************************/
 314   1              TL1 = (0x34 << TL1_TL1__SHIFT);
 315   1              // [TL1 - Timer 1 Low Byte]$
 316   1      
 317   1              // $[Timer Restoration]
 318   1              //Restore Timer Configuration
 319   1              TCON |= (TCON_save & TCON_TR0__BMASK) | (TCON_save & TCON_TR1__BMASK);
 320   1      
 321   1              // [Timer Restoration]$
 322   1      
 323   1      }
 324          
 325          extern void TIMER16_3_enter_DefaultMode_from_BusFreeMode(void) {
 326   1              // $[Timer Initialization]
 327   1              // Save Timer Configuration
 328   1              uint8_t TMR3CN0_TR3_save;
 329   1              TMR3CN0_TR3_save = TMR3CN0 & TMR3CN0_TR3__BMASK;
 330   1              // Stop Timer
 331   1              TMR3CN0 &= ~(TMR3CN0_TR3__BMASK);
 332   1              // [Timer Initialization]$
 333   1      
 334   1              // $[TMR3CN1 - Timer 3 Control 1]
 335   1              // [TMR3CN1 - Timer 3 Control 1]$
 336   1      
 337   1              // $[TMR3CN0 - Timer 3 Control]
 338   1              // [TMR3CN0 - Timer 3 Control]$
 339   1      
 340   1              // $[TMR3H - Timer 3 High Byte]
 341   1              // [TMR3H - Timer 3 High Byte]$
 342   1      
 343   1              // $[TMR3L - Timer 3 Low Byte]
 344   1              // [TMR3L - Timer 3 Low Byte]$
 345   1      
 346   1              // $[TMR3RLH - Timer 3 Reload High Byte]
 347   1              /***********************************************************************
 348   1               - Timer 3 Reload High Byte = 0x38
 349   1               ***********************************************************************/
 350   1              TMR3RLH = (0x38 << TMR3RLH_TMR3RLH__SHIFT);
 351   1              // [TMR3RLH - Timer 3 Reload High Byte]$
 352   1      
 353   1              // $[TMR3RLL - Timer 3 Reload Low Byte]
 354   1              /***********************************************************************
 355   1               - Timer 3 Reload Low Byte = 0x9E
 356   1               ***********************************************************************/
 357   1              TMR3RLL = (0x9E << TMR3RLL_TMR3RLL__SHIFT);
 358   1              // [TMR3RLL - Timer 3 Reload Low Byte]$
 359   1      
 360   1              // $[TMR3CN0]
 361   1              /***********************************************************************
 362   1               - Start Timer 3 running
 363   1               ***********************************************************************/
 364   1              TMR3CN0 |= TMR3CN0_TR3__RUN;
 365   1              // [TMR3CN0]$
 366   1      
C51 COMPILER V9.53.0.0   INITDEVICE                                                        01/17/2018 15:42:45 PAGE 7   

 367   1              // $[Timer Restoration]
 368   1              // Restore Timer Configuration
 369   1              TMR3CN0 |= TMR3CN0_TR3_save;
 370   1              // [Timer Restoration]$
 371   1      
 372   1      }
 373          
 374          extern void TIMER_SETUP_0_enter_DefaultMode_from_BusFreeMode(void) {
 375   1              // $[CKCON0 - Clock Control 0]
 376   1              /***********************************************************************
 377   1               - System clock divided by 4
 378   1               - Counter/Timer 0 uses the clock defined by the prescale field, SCA
 379   1               - Timer 2 high byte uses the clock defined by T2XCLK in TMR2CN0
 380   1               - Timer 2 low byte uses the clock defined by T2XCLK in TMR2CN0
 381   1               - Timer 3 high byte uses the clock defined by T3XCLK in TMR3CN0
 382   1               - Timer 3 low byte uses the clock defined by T3XCLK in TMR3CN0
 383   1               - Timer 1 uses the clock defined by the prescale field, SCA
 384   1               ***********************************************************************/
 385   1              SFRPAGE = 0x00;
 386   1              CKCON0 = CKCON0_SCA__SYSCLK_DIV_4 | CKCON0_T0M__PRESCALE
 387   1                              | CKCON0_T2MH__EXTERNAL_CLOCK | CKCON0_T2ML__EXTERNAL_CLOCK
 388   1                              | CKCON0_T3MH__EXTERNAL_CLOCK | CKCON0_T3ML__EXTERNAL_CLOCK
 389   1                              | CKCON0_T1M__PRESCALE;
 390   1              // [CKCON0 - Clock Control 0]$
 391   1      
 392   1              // $[CKCON1 - Clock Control 1]
 393   1              // [CKCON1 - Clock Control 1]$
 394   1      
 395   1              // $[TMOD - Timer 0/1 Mode]
 396   1              /***********************************************************************
 397   1               - Mode 0, 13-bit Counter/Timer
 398   1               - Mode 2, 8-bit Counter/Timer with Auto-Reload
 399   1               - Timer Mode
 400   1               - Timer 0 enabled when TR0 = 1 irrespective of INT0 logic level
 401   1               - Timer Mode
 402   1               - Timer 1 enabled when TR1 = 1 irrespective of INT1 logic level
 403   1               ***********************************************************************/
 404   1              TMOD = TMOD_T0M__MODE0 | TMOD_T1M__MODE2 | TMOD_CT0__TIMER
 405   1                              | TMOD_GATE0__DISABLED | TMOD_CT1__TIMER | TMOD_GATE1__DISABLED;
 406   1              // [TMOD - Timer 0/1 Mode]$
 407   1      
 408   1              // $[TCON - Timer 0/1 Control]
 409   1              /***********************************************************************
 410   1               - Start Timer 1 running
 411   1               ***********************************************************************/
 412   1              TCON |= TCON_TR1__RUN;
 413   1              // [TCON - Timer 0/1 Control]$
 414   1      
 415   1      }
 416          
 417          extern void SMBUS_0_enter_DefaultMode_from_BusFreeMode(void) {
 418   1              // $[SMB0FCN0 - SMBus0 FIFO Control 0]
 419   1              // [SMB0FCN0 - SMBus0 FIFO Control 0]$
 420   1      
 421   1              // $[SMB0RXLN - SMBus0 Receive Length Counter]
 422   1              // [SMB0RXLN - SMBus0 Receive Length Counter]$
 423   1      
 424   1              // $[SMB0ADR - SMBus 0 Slave Address]
 425   1              // [SMB0ADR - SMBus 0 Slave Address]$
 426   1      
 427   1              // $[SMB0ADM - SMBus 0 Slave Address Mask]
 428   1              // [SMB0ADM - SMBus 0 Slave Address Mask]$
 429   1      
C51 COMPILER V9.53.0.0   INITDEVICE                                                        01/17/2018 15:42:45 PAGE 8   

 430   1              // $[SMB0TC - SMBus 0 Timing and Pin Control]
 431   1              // [SMB0TC - SMBus 0 Timing and Pin Control]$
 432   1      
 433   1              // $[SMB0CF - SMBus 0 Configuration]
 434   1              /***********************************************************************
 435   1               - Timer 1 Overflow
 436   1               - Slave states are inhibited
 437   1               - Enable the SMBus module
 438   1               - Enable bus free timeouts
 439   1               - Enable SCL low timeouts if Timer 3 RLFSEL is set appropriately
 440   1               - Enable SDA extended setup and hold times
 441   1               ***********************************************************************/
 442   1              SMB0CF &= ~SMB0CF_SMBCS__FMASK;
 443   1              SMB0CF |= SMB0CF_SMBCS__TIMER1 | SMB0CF_INH__SLAVE_DISABLED
 444   1                              | SMB0CF_ENSMB__ENABLED | SMB0CF_SMBFTE__FREE_TO_ENABLED
 445   1                              | SMB0CF_SMBTOE__SCL_TO_ENABLED | SMB0CF_EXTHOLD__ENABLED;
 446   1              // [SMB0CF - SMBus 0 Configuration]$
 447   1      
 448   1      }
 449          
 450          extern void INTERRUPT_0_enter_DefaultMode_from_BusFreeMode(void) {
 451   1              // $[EIE1 - Extended Interrupt Enable 1]
 452   1              /***********************************************************************
 453   1               - Disable ADC0 Conversion Complete interrupt
 454   1               - Disable ADC0 Window Comparison interrupt
 455   1               - Disable CP0 interrupts
 456   1               - Disable CP1 interrupts
 457   1               - Disable all Port Match interrupts
 458   1               - Disable all PCA0 interrupts
 459   1               - Enable interrupt requests generated by SMB0
 460   1               - Enable interrupt requests generated by the TF3L or TF3H flags
 461   1               ***********************************************************************/
 462   1              SFRPAGE = 0x00;
 463   1              EIE1 = EIE1_EADC0__DISABLED | EIE1_EWADC0__DISABLED | EIE1_ECP0__DISABLED
 464   1                              | EIE1_ECP1__DISABLED | EIE1_EMAT__DISABLED | EIE1_EPCA0__DISABLED
 465   1                              | EIE1_ESMB0__ENABLED | EIE1_ET3__ENABLED;
 466   1              // [EIE1 - Extended Interrupt Enable 1]$
 467   1      
 468   1              // $[EIE2 - Extended Interrupt Enable 2]
 469   1              /***********************************************************************
 470   1               - Disable CL0 interrupts
 471   1               - Enable interrupt requests generated by the I2C0 slave
 472   1               - Enable interrupt requests generated by the TF4L or TF4H flags
 473   1               - Disable Timer 5 interrupts
 474   1               - Disable UART1 interrupts
 475   1               ***********************************************************************/
 476   1              EIE2 = EIE2_CL0__DISABLED | EIE2_EI2C0__ENABLED | EIE2_ET4__ENABLED
 477   1                              | EIE2_ET5__DISABLED | EIE2_ES1__DISABLED;
 478   1              // [EIE2 - Extended Interrupt Enable 2]$
 479   1      
 480   1              // $[EIP1H - Extended Interrupt Priority 1 High]
 481   1              // [EIP1H - Extended Interrupt Priority 1 High]$
 482   1      
 483   1              // $[EIP1 - Extended Interrupt Priority 1 Low]
 484   1              // [EIP1 - Extended Interrupt Priority 1 Low]$
 485   1      
 486   1              // $[EIP2 - Extended Interrupt Priority 2]
 487   1              // [EIP2 - Extended Interrupt Priority 2]$
 488   1      
 489   1              // $[EIP2H - Extended Interrupt Priority 2 High]
 490   1              // [EIP2H - Extended Interrupt Priority 2 High]$
 491   1      
 492   1              // $[IE - Interrupt Enable]
C51 COMPILER V9.53.0.0   INITDEVICE                                                        01/17/2018 15:42:45 PAGE 9   

 493   1              /***********************************************************************
 494   1               - Enable each interrupt according to its individual mask setting
 495   1               - Disable external interrupt 0
 496   1               - Disable external interrupt 1
 497   1               - Disable all SPI0 interrupts
 498   1               - Disable all Timer 0 interrupt
 499   1               - Disable all Timer 1 interrupt
 500   1               - Disable Timer 2 interrupt
 501   1               - Disable UART0 interrupt
 502   1               ***********************************************************************/
 503   1              IE = IE_EA__ENABLED | IE_EX0__DISABLED | IE_EX1__DISABLED
 504   1                              | IE_ESPI0__DISABLED | IE_ET0__DISABLED | IE_ET1__DISABLED
 505   1                              | IE_ET2__DISABLED | IE_ES0__DISABLED;
 506   1              // [IE - Interrupt Enable]$
 507   1      
 508   1              // $[IP - Interrupt Priority]
 509   1              // [IP - Interrupt Priority]$
 510   1      
 511   1              // $[IPH - Interrupt Priority High]
 512   1              // [IPH - Interrupt Priority High]$
 513   1      
 514   1      }
 515          
 516          extern void UARTE_1_enter_DefaultMode_from_BusFreeMode(void) {
 517   1              // $[SBCON1 - UART1 Baud Rate Generator Control]
 518   1              /***********************************************************************
 519   1               - Enable the baud rate generator
 520   1               - Prescaler = 1
 521   1               ***********************************************************************/
 522   1              SFRPAGE = 0x20;
 523   1              SBCON1 = SBCON1_BREN__ENABLED | SBCON1_BPS__DIV_BY_1;
 524   1              // [SBCON1 - UART1 Baud Rate Generator Control]$
 525   1      
 526   1              // $[SMOD1 - UART1 Mode]
 527   1              // [SMOD1 - UART1 Mode]$
 528   1      
 529   1              // $[UART1FCN0 - UART1 FIFO Control 0]
 530   1              // [UART1FCN0 - UART1 FIFO Control 0]$
 531   1      
 532   1              // $[SBRLH1 - UART1 Baud Rate Generator High Byte]
 533   1              /***********************************************************************
 534   1               - UART1 Baud Rate Reload High = 0xFF
 535   1               ***********************************************************************/
 536   1              SBRLH1 = (0xFF << SBRLH1_BRH__SHIFT);
 537   1              // [SBRLH1 - UART1 Baud Rate Generator High Byte]$
 538   1      
 539   1              // $[SBRLL1 - UART1 Baud Rate Generator Low Byte]
 540   1              /***********************************************************************
 541   1               - UART1 Baud Rate Reload Low = 0x96
 542   1               ***********************************************************************/
 543   1              SBRLL1 = (0x96 << SBRLL1_BRL__SHIFT);
 544   1              // [SBRLL1 - UART1 Baud Rate Generator Low Byte]$
 545   1      
 546   1              // $[UART1LIN - UART1 LIN Configuration]
 547   1              // [UART1LIN - UART1 LIN Configuration]$
 548   1      
 549   1              // $[SCON1 - UART1 Serial Port Control]
 550   1              /***********************************************************************
 551   1               - UART1 reception enabled
 552   1               ***********************************************************************/
 553   1              SCON1 |= SCON1_REN__RECEIVE_ENABLED;
 554   1              // [SCON1 - UART1 Serial Port Control]$
 555   1      
C51 COMPILER V9.53.0.0   INITDEVICE                                                        01/17/2018 15:42:45 PAGE 10  

 556   1              // $[UART1FCN1 - UART1 FIFO Control 1]
 557   1              // [UART1FCN1 - UART1 FIFO Control 1]$
 558   1      
 559   1      }
 560          
 561          extern void TIMER16_4_enter_DefaultMode_from_BusFreeMode(void) {
 562   1              // $[Timer Initialization]
 563   1              // Save Timer Configuration
 564   1              uint8_t TMR4CN0_TR4_save;
 565   1              SFRPAGE = 0x10;
 566   1              TMR4CN0_TR4_save = TMR4CN0 & TMR4CN0_TR4__BMASK;
 567   1              // Stop Timer
 568   1              TMR4CN0 &= ~(TMR4CN0_TR4__BMASK);
 569   1              // [Timer Initialization]$
 570   1      
 571   1              // $[TMR4CN1 - Timer 4 Control 1]
 572   1              // [TMR4CN1 - Timer 4 Control 1]$
 573   1      
 574   1              // $[TMR4CN0 - Timer 4 Control]
 575   1              // [TMR4CN0 - Timer 4 Control]$
 576   1      
 577   1              // $[TMR4H - Timer 4 High Byte]
 578   1              // [TMR4H - Timer 4 High Byte]$
 579   1      
 580   1              // $[TMR4L - Timer 4 Low Byte]
 581   1              // [TMR4L - Timer 4 Low Byte]$
 582   1      
 583   1              // $[TMR4RLH - Timer 4 Reload High Byte]
 584   1              /***********************************************************************
 585   1               - Timer 4 Reload High Byte = 0x38
 586   1               ***********************************************************************/
 587   1              TMR4RLH = (0x38 << TMR4RLH_TMR4RLH__SHIFT);
 588   1              // [TMR4RLH - Timer 4 Reload High Byte]$
 589   1      
 590   1              // $[TMR4RLL - Timer 4 Reload Low Byte]
 591   1              /***********************************************************************
 592   1               - Timer 4 Reload Low Byte = 0x9E
 593   1               ***********************************************************************/
 594   1              TMR4RLL = (0x9E << TMR4RLL_TMR4RLL__SHIFT);
 595   1              // [TMR4RLL - Timer 4 Reload Low Byte]$
 596   1      
 597   1              // $[TMR4CN0]
 598   1              /***********************************************************************
 599   1               - Start Timer 4 running
 600   1               ***********************************************************************/
 601   1              TMR4CN0 |= TMR4CN0_TR4__RUN;
 602   1              // [TMR4CN0]$
 603   1      
 604   1              // $[Timer Restoration]
 605   1              // Restore Timer Configuration
 606   1              TMR4CN0 |= TMR4CN0_TR4_save;
 607   1              // [Timer Restoration]$
 608   1      
 609   1      }
 610          
 611          extern void I2CSLAVE_0_enter_DefaultMode_from_BusFreeMode(void) {
 612   1              // $[I2C0FCN0 - I2C0 FIFO Control 0]
 613   1              // [I2C0FCN0 - I2C0 FIFO Control 0]$
 614   1      
 615   1              // $[I2C0SLAD - I2C0 Slave Address]
 616   1              /***********************************************************************
 617   1               - I2C Hardware Slave Address = 0x50
 618   1               ***********************************************************************/
C51 COMPILER V9.53.0.0   INITDEVICE                                                        01/17/2018 15:42:45 PAGE 11  

 619   1              I2C0SLAD = (0x50 << I2C0SLAD_I2C0SLAD__SHIFT);
 620   1              // [I2C0SLAD - I2C0 Slave Address]$
 621   1      
 622   1              // $[I2C0ADM - I2C0 Slave Address Mask]
 623   1              // [I2C0ADM - I2C0 Slave Address Mask]$
 624   1      
 625   1              // $[I2C0CN0 - I2C0 Control]
 626   1              /***********************************************************************
 627   1               - Set the I2C0 Slave pins in I2C mode
 628   1               - Data bytes must be written into the TX FIFO via the I2C0DOUT register
 629   1               before the 8th SCL clock of the matching slave address byte transfer
 630   1               arrives for an I2C read operation
 631   1               - Enable I2C SCL low timeout detection using Timer 4 if Timer 4 RLFSEL
 632   1               is set appropriately
 633   1               - Enable the I2C0 Slave module
 634   1               ***********************************************************************/
 635   1              I2C0CN0 &= ~I2C0CN0_PRELOAD__BMASK;
 636   1              I2C0CN0 |= I2C0CN0_PINMD__I2C_MODE | I2C0CN0_TIMEOUT__ENABLED;
 637   1              I2C0CN0 |= I2C0CN0_I2C0EN__ENABLED;
 638   1              // [I2C0CN0 - I2C0 Control]$
 639   1      
 640   1      }
 641          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    250    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----       2
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
