C51 COMPILER V9.53.0.0   INITDEVICE                                                        12/30/2017 19:33:53 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE INITDEVICE
OBJECT MODULE PLACED IN .\src\InitDevice.OBJ
COMPILER INVOKED BY: c:\SiliconLabs\SimplicityStudio\v4\developer\toolchains\keil_8051\9.53\BIN\C51.exe D:\WorkSpace\MyC
                    -ode\GE_EFM8LB12F64E-B-QFN32_YJ\GE_EFM8LB12F64E-B-QFN32_YJ\src\InitDevice.c OMF2 SMALL DEBUG OBJECTEXTEND ROM(LARGE) WARN
                    -INGLEVEL(2) FLOATFUZZY(3) OPTIMIZE(8,SPEED) DEFINE(DEBUG=1) INTVECTOR(0X0000) INTPROMOTE INCDIR(D:\WorkSpace\MyCode\GE_E
                    -FM8LB12F64E-B-QFN32_YJ\GE_EFM8LB12F64E-B-QFN32_YJ\inc;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.1.1//Dev
                    -ice/shared/si8051base;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.1.1//Device/EFM8LB1/inc) PRINT(.\src\Ini
                    -tDevice.lst) COND PAGEWIDTH(120) PAGELENGTH(65) OBJECT(.\src\InitDevice.OBJ)

line level    source

   1          //=========================================================
   2          // src/InitDevice.c: generated by Hardware Configurator
   3          //
   4          // This file will be regenerated when saving a document.
   5          // leave the sections inside the "$[...]" comment tags alone
   6          // or they will be overwritten!!
   7          //=========================================================
   8          
   9          // USER INCLUDES
  10          #include <SI_EFM8LB1_Register_Enums.h>
  11          #include "InitDevice.h"
  12          
  13          // USER PROTOTYPES
  14          // USER FUNCTIONS
  15          
  16          // $[Library Includes]
  17          // [Library Includes]$
  18          
  19          //==============================================================================
  20          // enter_DefaultMode_from_RESET
  21          //==============================================================================
  22          extern void enter_BusFreeMode_from_RESET(void) {
  23   1              // $[Config Calls]
  24   1              // Save the SFRPAGE
  25   1              uint8_t SFRPAGE_save = SFRPAGE;
  26   1              CLOCK_0_enter_BusFreeMode_from_RESET();
  27   1              // Restore the SFRPAGE
  28   1              SFRPAGE = SFRPAGE_save;
  29   1              // [Config Calls]$
  30   1      
  31   1      }
  32          
  33          //================================================================================
  34          // PORTS_2_enter_BusFreeMode_from_RESET
  35          //================================================================================
  36          extern void PORTS_2_enter_BusFreeMode_from_RESET(void) {
  37   1              // $[P2 - Port 2 Pin Latch]
  38   1              // [P2 - Port 2 Pin Latch]$
  39   1      
  40   1              // $[P2MDOUT - Port 2 Output Mode]
  41   1              /***********************************************************************
  42   1               - P2.0 output is open-drain
  43   1               - P2.1 output is open-drain
  44   1               - P2.2 output is open-drain
  45   1               - P2.3 output is push-pull
  46   1               - P2.4 output is open-drain
  47   1               - P2.5 output is open-drain
  48   1               - P2.6 output is open-drain
  49   1               ***********************************************************************/
  50   1              SFRPAGE = 0x00;
  51   1              P2MDOUT = P2MDOUT_B0__OPEN_DRAIN | P2MDOUT_B1__OPEN_DRAIN
C51 COMPILER V9.53.0.0   INITDEVICE                                                        12/30/2017 19:33:53 PAGE 2   

  52   1                              | P2MDOUT_B2__OPEN_DRAIN | P2MDOUT_B3__PUSH_PULL
  53   1                              | P2MDOUT_B4__OPEN_DRAIN | P2MDOUT_B5__OPEN_DRAIN
  54   1                              | P2MDOUT_B6__OPEN_DRAIN;
  55   1              // [P2MDOUT - Port 2 Output Mode]$
  56   1      
  57   1              // $[P2MDIN - Port 2 Input Mode]
  58   1              // [P2MDIN - Port 2 Input Mode]$
  59   1      
  60   1              // $[P2SKIP - Port 2 Skip]
  61   1              /***********************************************************************
  62   1               - P2.0 pin is not skipped by the crossbar
  63   1               - P2.1 pin is not skipped by the crossbar
  64   1               - P2.2 pin is not skipped by the crossbar
  65   1               - P2.3 pin is skipped by the crossbar
  66   1               ***********************************************************************/
  67   1              SFRPAGE = 0x20;
  68   1              P2SKIP = P2SKIP_B0__NOT_SKIPPED | P2SKIP_B1__NOT_SKIPPED
  69   1                              | P2SKIP_B2__NOT_SKIPPED | P2SKIP_B3__SKIPPED;
  70   1              // [P2SKIP - Port 2 Skip]$
  71   1      
  72   1              // $[P2MASK - Port 2 Mask]
  73   1              // [P2MASK - Port 2 Mask]$
  74   1      
  75   1              // $[P2MAT - Port 2 Match]
  76   1              // [P2MAT - Port 2 Match]$
  77   1      
  78   1      }
  79          
  80          //================================================================================
  81          // PBCFG_0_enter_BusFreeMode_from_RESET
  82          //================================================================================
  83          extern void PBCFG_0_enter_BusFreeMode_from_RESET(void) {
  84   1              // $[XBR2 - Port I/O Crossbar 2]
  85   1              // [XBR2 - Port I/O Crossbar 2]$
  86   1      
  87   1              // $[PRTDRV - Port Drive Strength]
  88   1              // [PRTDRV - Port Drive Strength]$
  89   1      
  90   1              // $[XBR0 - Port I/O Crossbar 0]
  91   1              // [XBR0 - Port I/O Crossbar 0]$
  92   1      
  93   1              // $[XBR1 - Port I/O Crossbar 1]
  94   1              // [XBR1 - Port I/O Crossbar 1]$
  95   1      
  96   1      }
  97          
  98          //================================================================================
  99          // CIP51_0_enter_BusFreeMode_from_RESET
 100          //================================================================================
 101          extern void CIP51_0_enter_BusFreeMode_from_RESET(void) {
 102   1              // $[PFE0CN - Prefetch Engine Control]
 103   1              // [PFE0CN - Prefetch Engine Control]$
 104   1      
 105   1      }
 106          
 107          //================================================================================
 108          // CLOCK_0_enter_BusFreeMode_from_RESET
 109          //================================================================================
 110          extern void CLOCK_0_enter_BusFreeMode_from_RESET(void) {
 111   1              // $[HFOSC1 Setup]
 112   1              // [HFOSC1 Setup]$
 113   1      
 114   1              // $[CLKSEL - Clock Select]
C51 COMPILER V9.53.0.0   INITDEVICE                                                        12/30/2017 19:33:53 PAGE 3   

 115   1              /***********************************************************************
 116   1               - Clock derived from the Internal High Frequency Oscillator 0
 117   1               - SYSCLK is equal to selected clock source divided by 1
 118   1               ***********************************************************************/
 119   1              SFRPAGE = 0x00;
 120   1              CLKSEL = CLKSEL_CLKSL__HFOSC0 | CLKSEL_CLKDIV__SYSCLK_DIV_1;
 121   1              while ((CLKSEL & CLKSEL_DIVRDY__BMASK) == CLKSEL_DIVRDY__NOT_READY)
 122   1                      ;
 123   1              // [CLKSEL - Clock Select]$
 124   1      
 125   1      }
 126          
 127          extern void enter_DefaultMode_from_BusFreeMode(void) {
 128   1              // $[Config Calls]
 129   1              // Save the SFRPAGE
 130   1              uint8_t SFRPAGE_save = SFRPAGE;
 131   1              WDT_0_enter_DefaultMode_from_BusFreeMode();
 132   1              PORTS_0_enter_DefaultMode_from_BusFreeMode();
 133   1              PORTS_1_enter_DefaultMode_from_BusFreeMode();
 134   1              PBCFG_0_enter_DefaultMode_from_BusFreeMode();
 135   1              TIMER01_0_enter_DefaultMode_from_BusFreeMode();
 136   1              TIMER16_3_enter_DefaultMode_from_BusFreeMode();
 137   1              TIMER16_4_enter_DefaultMode_from_BusFreeMode();
 138   1              TIMER_SETUP_0_enter_DefaultMode_from_BusFreeMode();
 139   1              SMBUS_0_enter_DefaultMode_from_BusFreeMode();
 140   1              UARTE_1_enter_DefaultMode_from_BusFreeMode();
 141   1              I2CSLAVE_0_enter_DefaultMode_from_BusFreeMode();
 142   1              INTERRUPT_0_enter_DefaultMode_from_BusFreeMode();
 143   1              // Restore the SFRPAGE
 144   1              SFRPAGE = SFRPAGE_save;
 145   1              // [Config Calls]$
 146   1      
 147   1      }
 148          
 149          extern void WDT_0_enter_DefaultMode_from_BusFreeMode(void) {
 150   1              // $[WDTCN - Watchdog Timer Control]
 151   1              SFRPAGE = 0x00;
 152   1              //Disable Watchdog with key sequence
 153   1              WDTCN = 0xDE; //First key
 154   1              WDTCN = 0xAD; //Second key
 155   1              // [WDTCN - Watchdog Timer Control]$
 156   1      
 157   1      }
 158          
 159          extern void PORTS_0_enter_DefaultMode_from_BusFreeMode(void) {
 160   1              // $[P0 - Port 0 Pin Latch]
 161   1              // [P0 - Port 0 Pin Latch]$
 162   1      
 163   1              // $[P0MDOUT - Port 0 Output Mode]
 164   1              // [P0MDOUT - Port 0 Output Mode]$
 165   1      
 166   1              // $[P0MDIN - Port 0 Input Mode]
 167   1              // [P0MDIN - Port 0 Input Mode]$
 168   1      
 169   1              // $[P0SKIP - Port 0 Skip]
 170   1              /***********************************************************************
 171   1               - P0.0 pin is skipped by the crossbar
 172   1               - P0.1 pin is skipped by the crossbar
 173   1               - P0.2 pin is skipped by the crossbar
 174   1               - P0.3 pin is skipped by the crossbar
 175   1               - P0.4 pin is skipped by the crossbar
 176   1               - P0.5 pin is skipped by the crossbar
 177   1               - P0.6 pin is skipped by the crossbar
C51 COMPILER V9.53.0.0   INITDEVICE                                                        12/30/2017 19:33:53 PAGE 4   

 178   1               - P0.7 pin is skipped by the crossbar
 179   1               ***********************************************************************/
 180   1              P0SKIP = P0SKIP_B0__SKIPPED | P0SKIP_B1__SKIPPED | P0SKIP_B2__SKIPPED
 181   1                              | P0SKIP_B3__SKIPPED | P0SKIP_B4__SKIPPED | P0SKIP_B5__SKIPPED
 182   1                              | P0SKIP_B6__SKIPPED | P0SKIP_B7__SKIPPED;
 183   1              // [P0SKIP - Port 0 Skip]$
 184   1      
 185   1              // $[P0MASK - Port 0 Mask]
 186   1              // [P0MASK - Port 0 Mask]$
 187   1      
 188   1              // $[P0MAT - Port 0 Match]
 189   1              // [P0MAT - Port 0 Match]$
 190   1      
 191   1      }
 192          
 193          extern void PORTS_1_enter_DefaultMode_from_BusFreeMode(void) {
 194   1              // $[P1 - Port 1 Pin Latch]
 195   1              // [P1 - Port 1 Pin Latch]$
 196   1      
 197   1              // $[P1MDOUT - Port 1 Output Mode]
 198   1              /***********************************************************************
 199   1               - P1.0 output is open-drain
 200   1               - P1.1 output is open-drain
 201   1               - P1.2 output is open-drain
 202   1               - P1.3 output is open-drain
 203   1               - P1.4 output is push-pull
 204   1               - P1.5 output is open-drain
 205   1               - P1.6 output is open-drain
 206   1               - P1.7 output is open-drain
 207   1               ***********************************************************************/
 208   1              P1MDOUT = P1MDOUT_B0__OPEN_DRAIN | P1MDOUT_B1__OPEN_DRAIN
 209   1                              | P1MDOUT_B2__OPEN_DRAIN | P1MDOUT_B3__OPEN_DRAIN
 210   1                              | P1MDOUT_B4__PUSH_PULL | P1MDOUT_B5__OPEN_DRAIN
 211   1                              | P1MDOUT_B6__OPEN_DRAIN | P1MDOUT_B7__OPEN_DRAIN;
 212   1              // [P1MDOUT - Port 1 Output Mode]$
 213   1      
 214   1              // $[P1MDIN - Port 1 Input Mode]
 215   1              // [P1MDIN - Port 1 Input Mode]$
 216   1      
 217   1              // $[P1SKIP - Port 1 Skip]
 218   1              /***********************************************************************
 219   1               - P1.0 pin is skipped by the crossbar
 220   1               - P1.1 pin is skipped by the crossbar
 221   1               - P1.2 pin is not skipped by the crossbar
 222   1               - P1.3 pin is not skipped by the crossbar
 223   1               - P1.4 pin is not skipped by the crossbar
 224   1               - P1.5 pin is not skipped by the crossbar
 225   1               - P1.6 pin is not skipped by the crossbar
 226   1               - P1.7 pin is not skipped by the crossbar
 227   1               ***********************************************************************/
 228   1              P1SKIP = P1SKIP_B0__SKIPPED | P1SKIP_B1__SKIPPED | P1SKIP_B2__NOT_SKIPPED
 229   1                              | P1SKIP_B3__NOT_SKIPPED | P1SKIP_B4__NOT_SKIPPED
 230   1                              | P1SKIP_B5__NOT_SKIPPED | P1SKIP_B6__NOT_SKIPPED
 231   1                              | P1SKIP_B7__NOT_SKIPPED;
 232   1              // [P1SKIP - Port 1 Skip]$
 233   1      
 234   1              // $[P1MASK - Port 1 Mask]
 235   1              // [P1MASK - Port 1 Mask]$
 236   1      
 237   1              // $[P1MAT - Port 1 Match]
 238   1              // [P1MAT - Port 1 Match]$
 239   1      
 240   1      }
C51 COMPILER V9.53.0.0   INITDEVICE                                                        12/30/2017 19:33:53 PAGE 5   

 241          
 242          extern void PBCFG_0_enter_DefaultMode_from_BusFreeMode(void) {
 243   1              // $[XBR2 - Port I/O Crossbar 2]
 244   1              /***********************************************************************
 245   1               - Weak Pullups enabled 
 246   1               - Crossbar enabled
 247   1               - UART1 TX1 RX1 routed to Port pins
 248   1               - UART1 RTS1 unavailable at Port pin
 249   1               - UART1 CTS1 unavailable at Port pin
 250   1               ***********************************************************************/
 251   1              XBR2 = XBR2_WEAKPUD__PULL_UPS_ENABLED | XBR2_XBARE__ENABLED
 252   1                              | XBR2_URT1E__ENABLED | XBR2_URT1RTSE__DISABLED
 253   1                              | XBR2_URT1CTSE__DISABLED;
 254   1              // [XBR2 - Port I/O Crossbar 2]$
 255   1      
 256   1              // $[PRTDRV - Port Drive Strength]
 257   1              // [PRTDRV - Port Drive Strength]$
 258   1      
 259   1              // $[XBR0 - Port I/O Crossbar 0]
 260   1              /***********************************************************************
 261   1               - UART0 I/O unavailable at Port pin
 262   1               - SPI I/O unavailable at Port pins
 263   1               - SMBus 0 I/O routed to Port pins
 264   1               - CP0 unavailable at Port pin
 265   1               - Asynchronous CP0 unavailable at Port pin
 266   1               - CP1 unavailable at Port pin
 267   1               - Asynchronous CP1 unavailable at Port pin
 268   1               - SYSCLK unavailable at Port pin
 269   1               ***********************************************************************/
 270   1              XBR0 = XBR0_URT0E__DISABLED | XBR0_SPI0E__DISABLED | XBR0_SMB0E__ENABLED
 271   1                              | XBR0_CP0E__DISABLED | XBR0_CP0AE__DISABLED | XBR0_CP1E__DISABLED
 272   1                              | XBR0_CP1AE__DISABLED | XBR0_SYSCKE__DISABLED;
 273   1              // [XBR0 - Port I/O Crossbar 0]$
 274   1      
 275   1              // $[XBR1 - Port I/O Crossbar 1]
 276   1              // [XBR1 - Port I/O Crossbar 1]$
 277   1      
 278   1      }
 279          
 280          extern void TIMER01_0_enter_DefaultMode_from_BusFreeMode(void) {
 281   1              // $[Timer Initialization]
 282   1              //Save Timer Configuration
 283   1              uint8_t TCON_save;
 284   1              TCON_save = TCON;
 285   1              //Stop Timers
 286   1              TCON &= ~TCON_TR0__BMASK & ~TCON_TR1__BMASK;
 287   1      
 288   1              // [Timer Initialization]$
 289   1      
 290   1              // $[TH0 - Timer 0 High Byte]
 291   1              /***********************************************************************
 292   1               - Timer 0 High Byte = 0x38
 293   1               ***********************************************************************/
 294   1              TH0 = (0x38 << TH0_TH0__SHIFT);
 295   1              // [TH0 - Timer 0 High Byte]$
 296   1      
 297   1              // $[TL0 - Timer 0 Low Byte]
 298   1              /***********************************************************************
 299   1               - Timer 0 Low Byte = 0x13
 300   1               ***********************************************************************/
 301   1              TL0 = (0x13 << TL0_TL0__SHIFT);
 302   1              // [TL0 - Timer 0 Low Byte]$
 303   1      
C51 COMPILER V9.53.0.0   INITDEVICE                                                        12/30/2017 19:33:53 PAGE 6   

 304   1              // $[TH1 - Timer 1 High Byte]
 305   1              /***********************************************************************
 306   1               - Timer 1 High Byte = 0x34
 307   1               ***********************************************************************/
 308   1              TH1 = (0x34 << TH1_TH1__SHIFT);
 309   1              // [TH1 - Timer 1 High Byte]$
 310   1      
 311   1              // $[TL1 - Timer 1 Low Byte]
 312   1              /***********************************************************************
 313   1               - Timer 1 Low Byte = 0x34
 314   1               ***********************************************************************/
 315   1              TL1 = (0x34 << TL1_TL1__SHIFT);
 316   1              // [TL1 - Timer 1 Low Byte]$
 317   1      
 318   1              // $[Timer Restoration]
 319   1              //Restore Timer Configuration
 320   1              TCON |= (TCON_save & TCON_TR0__BMASK) | (TCON_save & TCON_TR1__BMASK);
 321   1      
 322   1              // [Timer Restoration]$
 323   1      
 324   1      }
 325          
 326          extern void TIMER16_3_enter_DefaultMode_from_BusFreeMode(void) {
 327   1              // $[Timer Initialization]
 328   1              // Save Timer Configuration
 329   1              uint8_t TMR3CN0_TR3_save;
 330   1              TMR3CN0_TR3_save = TMR3CN0 & TMR3CN0_TR3__BMASK;
 331   1              // Stop Timer
 332   1              TMR3CN0 &= ~(TMR3CN0_TR3__BMASK);
 333   1              // [Timer Initialization]$
 334   1      
 335   1              // $[TMR3CN1 - Timer 3 Control 1]
 336   1              // [TMR3CN1 - Timer 3 Control 1]$
 337   1      
 338   1              // $[TMR3CN0 - Timer 3 Control]
 339   1              // [TMR3CN0 - Timer 3 Control]$
 340   1      
 341   1              // $[TMR3H - Timer 3 High Byte]
 342   1              // [TMR3H - Timer 3 High Byte]$
 343   1      
 344   1              // $[TMR3L - Timer 3 Low Byte]
 345   1              // [TMR3L - Timer 3 Low Byte]$
 346   1      
 347   1              // $[TMR3RLH - Timer 3 Reload High Byte]
 348   1              /***********************************************************************
 349   1               - Timer 3 Reload High Byte = 0x38
 350   1               ***********************************************************************/
 351   1              TMR3RLH = (0x38 << TMR3RLH_TMR3RLH__SHIFT);
 352   1              // [TMR3RLH - Timer 3 Reload High Byte]$
 353   1      
 354   1              // $[TMR3RLL - Timer 3 Reload Low Byte]
 355   1              /***********************************************************************
 356   1               - Timer 3 Reload Low Byte = 0x9E
 357   1               ***********************************************************************/
 358   1              TMR3RLL = (0x9E << TMR3RLL_TMR3RLL__SHIFT);
 359   1              // [TMR3RLL - Timer 3 Reload Low Byte]$
 360   1      
 361   1              // $[TMR3CN0]
 362   1              /***********************************************************************
 363   1               - Start Timer 3 running
 364   1               ***********************************************************************/
 365   1              TMR3CN0 |= TMR3CN0_TR3__RUN;
 366   1              // [TMR3CN0]$
C51 COMPILER V9.53.0.0   INITDEVICE                                                        12/30/2017 19:33:53 PAGE 7   

 367   1      
 368   1              // $[Timer Restoration]
 369   1              // Restore Timer Configuration
 370   1              TMR3CN0 |= TMR3CN0_TR3_save;
 371   1              // [Timer Restoration]$
 372   1      
 373   1      }
 374          
 375          extern void TIMER_SETUP_0_enter_DefaultMode_from_BusFreeMode(void) {
 376   1              // $[CKCON0 - Clock Control 0]
 377   1              /***********************************************************************
 378   1               - System clock divided by 4
 379   1               - Counter/Timer 0 uses the clock defined by the prescale field, SCA
 380   1               - Timer 2 high byte uses the clock defined by T2XCLK in TMR2CN0
 381   1               - Timer 2 low byte uses the clock defined by T2XCLK in TMR2CN0
 382   1               - Timer 3 high byte uses the clock defined by T3XCLK in TMR3CN0
 383   1               - Timer 3 low byte uses the clock defined by T3XCLK in TMR3CN0
 384   1               - Timer 1 uses the clock defined by the prescale field, SCA
 385   1               ***********************************************************************/
 386   1              SFRPAGE = 0x00;
 387   1              CKCON0 = CKCON0_SCA__SYSCLK_DIV_4 | CKCON0_T0M__PRESCALE
 388   1                              | CKCON0_T2MH__EXTERNAL_CLOCK | CKCON0_T2ML__EXTERNAL_CLOCK
 389   1                              | CKCON0_T3MH__EXTERNAL_CLOCK | CKCON0_T3ML__EXTERNAL_CLOCK
 390   1                              | CKCON0_T1M__PRESCALE;
 391   1              // [CKCON0 - Clock Control 0]$
 392   1      
 393   1              // $[CKCON1 - Clock Control 1]
 394   1              // [CKCON1 - Clock Control 1]$
 395   1      
 396   1              // $[TMOD - Timer 0/1 Mode]
 397   1              /***********************************************************************
 398   1               - Mode 0, 13-bit Counter/Timer
 399   1               - Mode 2, 8-bit Counter/Timer with Auto-Reload
 400   1               - Timer Mode
 401   1               - Timer 0 enabled when TR0 = 1 irrespective of INT0 logic level
 402   1               - Timer Mode
 403   1               - Timer 1 enabled when TR1 = 1 irrespective of INT1 logic level
 404   1               ***********************************************************************/
 405   1              TMOD = TMOD_T0M__MODE0 | TMOD_T1M__MODE2 | TMOD_CT0__TIMER
 406   1                              | TMOD_GATE0__DISABLED | TMOD_CT1__TIMER | TMOD_GATE1__DISABLED;
 407   1              // [TMOD - Timer 0/1 Mode]$
 408   1      
 409   1              // $[TCON - Timer 0/1 Control]
 410   1              /***********************************************************************
 411   1               - Start Timer 1 running
 412   1               ***********************************************************************/
 413   1              TCON |= TCON_TR1__RUN;
 414   1              // [TCON - Timer 0/1 Control]$
 415   1      
 416   1      }
 417          
 418          extern void SMBUS_0_enter_DefaultMode_from_BusFreeMode(void) {
 419   1              // $[SMB0FCN0 - SMBus0 FIFO Control 0]
 420   1              // [SMB0FCN0 - SMBus0 FIFO Control 0]$
 421   1      
 422   1              // $[SMB0RXLN - SMBus0 Receive Length Counter]
 423   1              // [SMB0RXLN - SMBus0 Receive Length Counter]$
 424   1      
 425   1              // $[SMB0ADR - SMBus 0 Slave Address]
 426   1              // [SMB0ADR - SMBus 0 Slave Address]$
 427   1      
 428   1              // $[SMB0ADM - SMBus 0 Slave Address Mask]
 429   1              // [SMB0ADM - SMBus 0 Slave Address Mask]$
C51 COMPILER V9.53.0.0   INITDEVICE                                                        12/30/2017 19:33:53 PAGE 8   

 430   1      
 431   1              // $[SMB0TC - SMBus 0 Timing and Pin Control]
 432   1              // [SMB0TC - SMBus 0 Timing and Pin Control]$
 433   1      
 434   1              // $[SMB0CF - SMBus 0 Configuration]
 435   1              /***********************************************************************
 436   1               - Timer 1 Overflow
 437   1               - Slave states are inhibited
 438   1               - Enable the SMBus module
 439   1               - Enable bus free timeouts
 440   1               - Enable SCL low timeouts if Timer 3 RLFSEL is set appropriately
 441   1               - Enable SDA extended setup and hold times
 442   1               ***********************************************************************/
 443   1              SMB0CF &= ~SMB0CF_SMBCS__FMASK;
 444   1              SMB0CF |= SMB0CF_SMBCS__TIMER1 | SMB0CF_INH__SLAVE_DISABLED
 445   1                              | SMB0CF_ENSMB__ENABLED | SMB0CF_SMBFTE__FREE_TO_ENABLED
 446   1                              | SMB0CF_SMBTOE__SCL_TO_ENABLED | SMB0CF_EXTHOLD__ENABLED;
 447   1              // [SMB0CF - SMBus 0 Configuration]$
 448   1      
 449   1      }
 450          
 451          extern void INTERRUPT_0_enter_DefaultMode_from_BusFreeMode(void) {
 452   1              // $[EIE1 - Extended Interrupt Enable 1]
 453   1              /***********************************************************************
 454   1               - Disable ADC0 Conversion Complete interrupt
 455   1               - Disable ADC0 Window Comparison interrupt
 456   1               - Disable CP0 interrupts
 457   1               - Disable CP1 interrupts
 458   1               - Disable all Port Match interrupts
 459   1               - Disable all PCA0 interrupts
 460   1               - Enable interrupt requests generated by SMB0
 461   1               - Enable interrupt requests generated by the TF3L or TF3H flags
 462   1               ***********************************************************************/
 463   1              SFRPAGE = 0x00;
 464   1              EIE1 = EIE1_EADC0__DISABLED | EIE1_EWADC0__DISABLED | EIE1_ECP0__DISABLED
 465   1                              | EIE1_ECP1__DISABLED | EIE1_EMAT__DISABLED | EIE1_EPCA0__DISABLED
 466   1                              | EIE1_ESMB0__ENABLED | EIE1_ET3__ENABLED;
 467   1              // [EIE1 - Extended Interrupt Enable 1]$
 468   1      
 469   1              // $[EIE2 - Extended Interrupt Enable 2]
 470   1              /***********************************************************************
 471   1               - Disable CL0 interrupts
 472   1               - Enable interrupt requests generated by the I2C0 slave
 473   1               - Enable interrupt requests generated by the TF4L or TF4H flags
 474   1               - Disable Timer 5 interrupts
 475   1               - Disable UART1 interrupts
 476   1               ***********************************************************************/
 477   1              EIE2 = EIE2_CL0__DISABLED | EIE2_EI2C0__ENABLED | EIE2_ET4__ENABLED
 478   1                              | EIE2_ET5__DISABLED | EIE2_ES1__DISABLED;
 479   1              // [EIE2 - Extended Interrupt Enable 2]$
 480   1      
 481   1              // $[EIP1H - Extended Interrupt Priority 1 High]
 482   1              // [EIP1H - Extended Interrupt Priority 1 High]$
 483   1      
 484   1              // $[EIP1 - Extended Interrupt Priority 1 Low]
 485   1              // [EIP1 - Extended Interrupt Priority 1 Low]$
 486   1      
 487   1              // $[EIP2 - Extended Interrupt Priority 2]
 488   1              // [EIP2 - Extended Interrupt Priority 2]$
 489   1      
 490   1              // $[EIP2H - Extended Interrupt Priority 2 High]
 491   1              // [EIP2H - Extended Interrupt Priority 2 High]$
 492   1      
C51 COMPILER V9.53.0.0   INITDEVICE                                                        12/30/2017 19:33:53 PAGE 9   

 493   1              // $[IE - Interrupt Enable]
 494   1              /***********************************************************************
 495   1               - Enable each interrupt according to its individual mask setting
 496   1               - Disable external interrupt 0
 497   1               - Disable external interrupt 1
 498   1               - Disable all SPI0 interrupts
 499   1               - Disable all Timer 0 interrupt
 500   1               - Disable all Timer 1 interrupt
 501   1               - Disable Timer 2 interrupt
 502   1               - Disable UART0 interrupt
 503   1               ***********************************************************************/
 504   1              IE = IE_EA__ENABLED | IE_EX0__DISABLED | IE_EX1__DISABLED
 505   1                              | IE_ESPI0__DISABLED | IE_ET0__DISABLED | IE_ET1__DISABLED
 506   1                              | IE_ET2__DISABLED | IE_ES0__DISABLED;
 507   1              // [IE - Interrupt Enable]$
 508   1      
 509   1              // $[IP - Interrupt Priority]
 510   1              // [IP - Interrupt Priority]$
 511   1      
 512   1              // $[IPH - Interrupt Priority High]
 513   1              // [IPH - Interrupt Priority High]$
 514   1      
 515   1      }
 516          
 517          extern void UARTE_1_enter_DefaultMode_from_BusFreeMode(void) {
 518   1              // $[SBCON1 - UART1 Baud Rate Generator Control]
 519   1              /***********************************************************************
 520   1               - Enable the baud rate generator
 521   1               - Prescaler = 1
 522   1               ***********************************************************************/
 523   1              SFRPAGE = 0x20;
 524   1              SBCON1 = SBCON1_BREN__ENABLED | SBCON1_BPS__DIV_BY_1;
 525   1              // [SBCON1 - UART1 Baud Rate Generator Control]$
 526   1      
 527   1              // $[SMOD1 - UART1 Mode]
 528   1              // [SMOD1 - UART1 Mode]$
 529   1      
 530   1              // $[UART1FCN0 - UART1 FIFO Control 0]
 531   1              // [UART1FCN0 - UART1 FIFO Control 0]$
 532   1      
 533   1              // $[SBRLH1 - UART1 Baud Rate Generator High Byte]
 534   1              /***********************************************************************
 535   1               - UART1 Baud Rate Reload High = 0xFF
 536   1               ***********************************************************************/
 537   1              SBRLH1 = (0xFF << SBRLH1_BRH__SHIFT);
 538   1              // [SBRLH1 - UART1 Baud Rate Generator High Byte]$
 539   1      
 540   1              // $[SBRLL1 - UART1 Baud Rate Generator Low Byte]
 541   1              /***********************************************************************
 542   1               - UART1 Baud Rate Reload Low = 0x96
 543   1               ***********************************************************************/
 544   1              SBRLL1 = (0x96 << SBRLL1_BRL__SHIFT);
 545   1              // [SBRLL1 - UART1 Baud Rate Generator Low Byte]$
 546   1      
 547   1              // $[UART1LIN - UART1 LIN Configuration]
 548   1              // [UART1LIN - UART1 LIN Configuration]$
 549   1      
 550   1              // $[SCON1 - UART1 Serial Port Control]
 551   1              /***********************************************************************
 552   1               - UART1 reception enabled
 553   1               ***********************************************************************/
 554   1              SCON1 |= SCON1_REN__RECEIVE_ENABLED;
 555   1              // [SCON1 - UART1 Serial Port Control]$
C51 COMPILER V9.53.0.0   INITDEVICE                                                        12/30/2017 19:33:53 PAGE 10  

 556   1      
 557   1              // $[UART1FCN1 - UART1 FIFO Control 1]
 558   1              // [UART1FCN1 - UART1 FIFO Control 1]$
 559   1      
 560   1      }
 561          
 562          extern void TIMER16_4_enter_DefaultMode_from_BusFreeMode(void) {
 563   1              // $[Timer Initialization]
 564   1              // Save Timer Configuration
 565   1              uint8_t TMR4CN0_TR4_save;
 566   1              SFRPAGE = 0x10;
 567   1              TMR4CN0_TR4_save = TMR4CN0 & TMR4CN0_TR4__BMASK;
 568   1              // Stop Timer
 569   1              TMR4CN0 &= ~(TMR4CN0_TR4__BMASK);
 570   1              // [Timer Initialization]$
 571   1      
 572   1              // $[TMR4CN1 - Timer 4 Control 1]
 573   1              // [TMR4CN1 - Timer 4 Control 1]$
 574   1      
 575   1              // $[TMR4CN0 - Timer 4 Control]
 576   1              // [TMR4CN0 - Timer 4 Control]$
 577   1      
 578   1              // $[TMR4H - Timer 4 High Byte]
 579   1              // [TMR4H - Timer 4 High Byte]$
 580   1      
 581   1              // $[TMR4L - Timer 4 Low Byte]
 582   1              // [TMR4L - Timer 4 Low Byte]$
 583   1      
 584   1              // $[TMR4RLH - Timer 4 Reload High Byte]
 585   1              /***********************************************************************
 586   1               - Timer 4 Reload High Byte = 0x38
 587   1               ***********************************************************************/
 588   1              TMR4RLH = (0x38 << TMR4RLH_TMR4RLH__SHIFT);
 589   1              // [TMR4RLH - Timer 4 Reload High Byte]$
 590   1      
 591   1              // $[TMR4RLL - Timer 4 Reload Low Byte]
 592   1              /***********************************************************************
 593   1               - Timer 4 Reload Low Byte = 0x9E
 594   1               ***********************************************************************/
 595   1              TMR4RLL = (0x9E << TMR4RLL_TMR4RLL__SHIFT);
 596   1              // [TMR4RLL - Timer 4 Reload Low Byte]$
 597   1      
 598   1              // $[TMR4CN0]
 599   1              /***********************************************************************
 600   1               - Start Timer 4 running
 601   1               ***********************************************************************/
 602   1              TMR4CN0 |= TMR4CN0_TR4__RUN;
 603   1              // [TMR4CN0]$
 604   1      
 605   1              // $[Timer Restoration]
 606   1              // Restore Timer Configuration
 607   1              TMR4CN0 |= TMR4CN0_TR4_save;
 608   1              // [Timer Restoration]$
 609   1      
 610   1      }
 611          
 612          extern void I2CSLAVE_0_enter_DefaultMode_from_BusFreeMode(void) {
 613   1              // $[I2C0FCN0 - I2C0 FIFO Control 0]
 614   1              // [I2C0FCN0 - I2C0 FIFO Control 0]$
 615   1      
 616   1              // $[I2C0SLAD - I2C0 Slave Address]
 617   1              /***********************************************************************
 618   1               - I2C Hardware Slave Address = 0x50
C51 COMPILER V9.53.0.0   INITDEVICE                                                        12/30/2017 19:33:53 PAGE 11  

 619   1               ***********************************************************************/
 620   1              I2C0SLAD = (0x50 << I2C0SLAD_I2C0SLAD__SHIFT);
 621   1              // [I2C0SLAD - I2C0 Slave Address]$
 622   1      
 623   1              // $[I2C0ADM - I2C0 Slave Address Mask]
 624   1              // [I2C0ADM - I2C0 Slave Address Mask]$
 625   1      
 626   1              // $[I2C0CN0 - I2C0 Control]
 627   1              /***********************************************************************
 628   1               - Set the I2C0 Slave pins in I2C mode
 629   1               - Data bytes must be written into the TX FIFO via the I2C0DOUT register
 630   1               before the 8th SCL clock of the matching slave address byte transfer
 631   1               arrives for an I2C read operation
 632   1               - Enable I2C SCL low timeout detection using Timer 4 if Timer 4 RLFSEL
 633   1               is set appropriately
 634   1               - Enable the I2C0 Slave module
 635   1               ***********************************************************************/
 636   1              I2C0CN0 &= ~I2C0CN0_PRELOAD__BMASK;
 637   1              I2C0CN0 |= I2C0CN0_PINMD__I2C_MODE | I2C0CN0_TIMEOUT__ENABLED;
 638   1              I2C0CN0 |= I2C0CN0_I2C0EN__ENABLED;
 639   1              // [I2C0CN0 - I2C0 Control]$
 640   1      
 641   1      }
 642          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    238    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
